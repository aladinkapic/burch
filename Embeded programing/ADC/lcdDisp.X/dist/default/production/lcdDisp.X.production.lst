

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May 13 22:39:07 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.05
    51                           ; Generated 20/12/2018 GMT
    52                           ; 
    53                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204                           
   205                           	psect	strings
   206  1000                     __pstrings:	
   207  1000                     stringtab:	
   208  1000                     __stringtab:	
   209  1000                     stringcode:	
   210                           ;	String table - string pointers are 1 byte each
   211                           
   212  1000                     stringdir:	
   213  1000  3010               	movlw	high stringdir
   214  1001  008A               	movwf	10
   215  1002  0804               	movf	4,w
   216  1003  0A84               	incf	4,f
   217  1004  0782               	addwf	2,f
   218  1005                     __stringbase:	
   219  1005  3400               	retlw	0
   220  1006                     __end_of__stringtab:	
   221  1006                     __powers_:	
   222  1006  3400               	retlw	0
   223  1007  3400               	retlw	0
   224  1008  3480               	retlw	128
   225  1009  343F               	retlw	63
   226  100A  3400               	retlw	0
   227  100B  3400               	retlw	0
   228  100C  3420               	retlw	32
   229  100D  3441               	retlw	65
   230  100E  3400               	retlw	0
   231  100F  3400               	retlw	0
   232  1010  34C8               	retlw	200
   233  1011  3442               	retlw	66
   234  1012  3400               	retlw	0
   235  1013  3400               	retlw	0
   236  1014  347A               	retlw	122
   237  1015  3444               	retlw	68
   238  1016  3400               	retlw	0
   239  1017  3440               	retlw	64
   240  1018  341C               	retlw	28
   241  1019  3446               	retlw	70
   242  101A  3400               	retlw	0
   243  101B  3450               	retlw	80
   244  101C  34C3               	retlw	195
   245  101D  3447               	retlw	71
   246  101E  3400               	retlw	0
   247  101F  3424               	retlw	36
   248  1020  3474               	retlw	116
   249  1021  3449               	retlw	73
   250  1022  3480               	retlw	128
   251  1023  3496               	retlw	150
   252  1024  3418               	retlw	24
   253  1025  344B               	retlw	75
   254  1026  3420               	retlw	32
   255  1027  34BC               	retlw	188
   256  1028  34BE               	retlw	190
   257  1029  344C               	retlw	76
   258  102A  3428               	retlw	40
   259  102B  346B               	retlw	107
   260  102C  346E               	retlw	110
   261  102D  344E               	retlw	78
   262  102E  34F9               	retlw	249
   263  102F  3402               	retlw	2
   264  1030  3415               	retlw	21
   265  1031  3450               	retlw	80
   266  1032  34EC               	retlw	236
   267  1033  3478               	retlw	120
   268  1034  34AD               	retlw	173
   269  1035  3460               	retlw	96
   270  1036  34CA               	retlw	202
   271  1037  34F2               	retlw	242
   272  1038  3449               	retlw	73
   273  1039  3471               	retlw	113
   274  103A                     __end_of__powers_:	
   275  103A                     __npowers_:	
   276  103A  3400               	retlw	0
   277  103B  3400               	retlw	0
   278  103C  3480               	retlw	128
   279  103D  343F               	retlw	63
   280  103E  34CD               	retlw	205
   281  103F  34CC               	retlw	204
   282  1040  34CC               	retlw	204
   283  1041  343D               	retlw	61
   284  1042  340A               	retlw	10
   285  1043  34D7               	retlw	215
   286  1044  3423               	retlw	35
   287  1045  343C               	retlw	60
   288  1046  346F               	retlw	111
   289  1047  3412               	retlw	18
   290  1048  3483               	retlw	131
   291  1049  343A               	retlw	58
   292  104A  3417               	retlw	23
   293  104B  34B7               	retlw	183
   294  104C  34D1               	retlw	209
   295  104D  3438               	retlw	56
   296  104E  34AC               	retlw	172
   297  104F  34C5               	retlw	197
   298  1050  3427               	retlw	39
   299  1051  3437               	retlw	55
   300  1052  34BD               	retlw	189
   301  1053  3437               	retlw	55
   302  1054  3486               	retlw	134
   303  1055  3435               	retlw	53
   304  1056  3495               	retlw	149
   305  1057  34BF               	retlw	191
   306  1058  34D6               	retlw	214
   307  1059  3433               	retlw	51
   308  105A  3477               	retlw	119
   309  105B  34CC               	retlw	204
   310  105C  342B               	retlw	43
   311  105D  3432               	retlw	50
   312  105E  345F               	retlw	95
   313  105F  3470               	retlw	112
   314  1060  3489               	retlw	137
   315  1061  3430               	retlw	48
   316  1062  34FF               	retlw	255
   317  1063  34E6               	retlw	230
   318  1064  34DB               	retlw	219
   319  1065  342E               	retlw	46
   320  1066  3408               	retlw	8
   321  1067  34E5               	retlw	229
   322  1068  343C               	retlw	60
   323  1069  341E               	retlw	30
   324  106A  3460               	retlw	96
   325  106B  3442               	retlw	66
   326  106C  34A2               	retlw	162
   327  106D  340D               	retlw	13
   328  106E                     __end_of__npowers_:	
   329  106E                     _dpowers:	
   330  106E  3401               	retlw	1
   331  106F  3400               	retlw	0
   332  1070  3400               	retlw	0
   333  1071  3400               	retlw	0
   334  1072  340A               	retlw	10
   335  1073  3400               	retlw	0
   336  1074  3400               	retlw	0
   337  1075  3400               	retlw	0
   338  1076  3464               	retlw	100
   339  1077  3400               	retlw	0
   340  1078  3400               	retlw	0
   341  1079  3400               	retlw	0
   342  107A  34E8               	retlw	232
   343  107B  3403               	retlw	3
   344  107C  3400               	retlw	0
   345  107D  3400               	retlw	0
   346  107E  3410               	retlw	16
   347  107F  3427               	retlw	39
   348  1080  3400               	retlw	0
   349  1081  3400               	retlw	0
   350  1082  34A0               	retlw	160
   351  1083  3486               	retlw	134
   352  1084  3401               	retlw	1
   353  1085  3400               	retlw	0
   354  1086  3440               	retlw	64
   355  1087  3442               	retlw	66
   356  1088  340F               	retlw	15
   357  1089  3400               	retlw	0
   358  108A  3480               	retlw	128
   359  108B  3496               	retlw	150
   360  108C  3498               	retlw	152
   361  108D  3400               	retlw	0
   362  108E  3400               	retlw	0
   363  108F  34E1               	retlw	225
   364  1090  34F5               	retlw	245
   365  1091  3405               	retlw	5
   366  1092  3400               	retlw	0
   367  1093  34CA               	retlw	202
   368  1094  349A               	retlw	154
   369  1095  343B               	retlw	59
   370  1096                     __end_of_dpowers:	
   371  0006                     _PORTB	set	6
   372  0008                     _PORTD	set	8
   373  000E                     _TMR1L	set	14
   374  000F                     _TMR1H	set	15
   375  0010                     _T1CON	set	16
   376  001E                     _ADRESH	set	30
   377  001F                     _ADCON0	set	31
   378  0080                     _TMR1ON	set	128
   379  005E                     _PEIE	set	94
   380  005F                     _GIE	set	95
   381  0060                     _TMR1IF	set	96
   382  00FA                     _GO_DONE	set	250
   383  00FA                     _GO	set	250
   384  0043                     _RD3	set	67
   385  0042                     _RD2	set	66
   386  0047                     _RD7	set	71
   387  0046                     _RD6	set	70
   388  0045                     _RD5	set	69
   389  0044                     _RD4	set	68
   390  0086                     _TRISB	set	134
   391  0088                     _TRISD	set	136
   392  009E                     _ADRESL	set	158
   393  009F                     _ADCON1	set	159
   394  0460                     _TMR1IE	set	1120
   395  1096                     STR_1:	
   396  1096  3441               	retlw	65	;'A'
   397  1097  3420               	retlw	32	;' '
   398  1098  343D               	retlw	61	;'='
   399  1099  3420               	retlw	32	;' '
   400  109A  3425               	retlw	37	;'%'
   401  109B  3466               	retlw	102	;'f'
   402  109C  3400               	retlw	0
   403                           
   404                           	psect	cinit
   405  0019                     start_initialization:	
   406                           ; #config settings
   407                           
   408  0019                     __initialization:	
   409                           
   410                           ; Clear objects allocated to BANK1
   411  0019  1683               	bsf	3,5	;RP0=1, select bank1
   412  001A  1303               	bcf	3,6	;RP1=0, select bank1
   413  001B  01EA               	clrf	__pbssBANK1& (0+127)
   414  001C  01EB               	clrf	(__pbssBANK1+1)& (0+127)
   415  001D  01EC               	clrf	(__pbssBANK1+2)& (0+127)
   416  001E  01ED               	clrf	(__pbssBANK1+3)& (0+127)
   417  001F                     end_of_initialization:	
   418                           ;End of C runtime variable initialization code
   419                           
   420  001F                     __end_of__initialization:	
   421  001F  0183               	clrf	3
   422  0020  160A  158A  2E15   	ljmp	_main	;jump to C main() function
   423                           
   424                           	psect	bssBANK1
   425  00EA                     __pbssBANK1:	
   426  00EA                     _counter:	
   427  00EA                     	ds	4
   428                           
   429                           	psect	cstackBANK3
   430  0190                     __pcstackBANK3:	
   431  0190                     ??_lcd_port:	
   432  0190                     ??_ADC_Init:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0190                     ??_init_timer:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0190                     lcd_port@a:	
   439                           ; 1 bytes @ 0x0
   440                           
   441                           
   442                           ; 1 bytes @ 0x0
   443  0190                     	ds	1
   444  0191                     ??_lcd_cmd:	
   445                           
   446                           ; 1 bytes @ 0x1
   447  0191                     	ds	2
   448  0193                     lcd_cmd@a:	
   449                           
   450                           ; 1 bytes @ 0x3
   451  0193                     	ds	1
   452  0194                     ??_lcd_init:	
   453                           
   454                           ; 1 bytes @ 0x4
   455  0194                     	ds	2
   456  0196                     ??_main:	
   457                           
   458                           	psect	cstackBANK1
   459  00A0                     __pcstackBANK1:	
   460                           ; 1 bytes @ 0x6
   461                           
   462  00A0                     ?_sprintf:	
   463  00A0                     sprintf@f:	
   464                           ; 2 bytes @ 0x0
   465                           
   466                           
   467                           ; 1 bytes @ 0x0
   468  00A0                     	ds	5
   469  00A5                     ??_sprintf:	
   470                           
   471                           ; 1 bytes @ 0x5
   472  00A5                     	ds	5
   473  00AA                     _sprintf$808:	
   474                           
   475                           ; 4 bytes @ 0xA
   476  00AA                     	ds	4
   477  00AE                     sprintf@ap:	
   478                           
   479                           ; 1 bytes @ 0xE
   480  00AE                     	ds	1
   481  00AF                     sprintf@flag:	
   482                           
   483                           ; 2 bytes @ 0xF
   484  00AF                     	ds	2
   485  00B1                     sprintf@prec:	
   486                           
   487                           ; 2 bytes @ 0x11
   488  00B1                     	ds	2
   489  00B3                     sprintf@val:	
   490                           
   491                           ; 4 bytes @ 0x13
   492  00B3                     	ds	4
   493  00B7                     sprintf@eexp:	
   494                           
   495                           ; 2 bytes @ 0x17
   496  00B7                     	ds	2
   497  00B9                     sprintf@tmpval:	
   498                           
   499                           ; 4 bytes @ 0x19
   500  00B9                     	ds	4
   501  00BD                     sprintf@sp:	
   502                           
   503                           ; 1 bytes @ 0x1D
   504  00BD                     	ds	1
   505  00BE                     sprintf@fval:	
   506                           
   507                           ; 4 bytes @ 0x1E
   508  00BE                     	ds	4
   509  00C2                     sprintf@c:	
   510                           
   511                           ; 1 bytes @ 0x22
   512  00C2                     	ds	1
   513  00C3                     ??_my_isr_routine:	
   514                           
   515                           ; 1 bytes @ 0x23
   516  00C3                     	ds	5
   517  00C8                     my_isr_routine@buf:	
   518                           
   519                           ; 30 bytes @ 0x28
   520  00C8                     	ds	30
   521  00E6                     my_isr_routine@val:	
   522                           
   523                           ; 4 bytes @ 0x46
   524  00E6                     	ds	4
   525                           
   526                           	psect	cstackCOMMON
   527  0070                     __pcstackCOMMON:	
   528  0070                     ?___fleq:	
   529  0070                     ?___flge:	
   530                           ; 1 bit 
   531                           
   532  0070                     ?_lcd_port:	
   533                           ; 1 bit 
   534                           
   535  0070                     ?_lcd_cmd:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_lcd_clear:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_lcd_init:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_lcd_write_char:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_lcd_write_string:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_ADC_Init:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_my_isr_routine:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_init_timer:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?i1_lcd_port:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ??i1_lcd_port:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?i1_lcd_cmd:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?__Umul8_16:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_ADC_Read:	
   572                           ; 2 bytes @ 0x0
   573                           
   574  0070                     ?_main:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0070                     ?___wmul:	
   578                           ; 2 bytes @ 0x0
   579                           
   580  0070                     ?___awmod:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0070                     ?___lwmod:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  0070                     ?__tdiv_to_l_:	
   587                           ; 2 bytes @ 0x0
   588                           
   589  0070                     ?__div_to_l_:	
   590                           ; 4 bytes @ 0x0
   591                           
   592  0070                     ?___lldiv:	
   593                           ; 4 bytes @ 0x0
   594                           
   595  0070                     ?___flneg:	
   596                           ; 4 bytes @ 0x0
   597                           
   598  0070                     ?___llmod:	
   599                           ; 4 bytes @ 0x0
   600                           
   601  0070                     __Umul8_16@multiplicand:	
   602                           ; 4 bytes @ 0x0
   603                           
   604  0070                     i1lcd_port@a:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ADC_Read@adcChannel:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ___wmul@multiplier:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0070                     ___awmod@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0070                     ___lwmod@divisor:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0070                     ___lldiv@divisor:	
   620                           ; 2 bytes @ 0x0
   621                           
   622  0070                     __div_to_l_@f1:	
   623                           ; 4 bytes @ 0x0
   624                           
   625  0070                     ___fleq@ff1:	
   626                           ; 4 bytes @ 0x0
   627                           
   628  0070                     ___flge@ff1:	
   629                           ; 4 bytes @ 0x0
   630                           
   631  0070                     ___flneg@f1:	
   632                           ; 4 bytes @ 0x0
   633                           
   634  0070                     __tdiv_to_l_@f1:	
   635                           ; 4 bytes @ 0x0
   636                           
   637  0070                     ___llmod@divisor:	
   638                           ; 4 bytes @ 0x0
   639                           
   640                           
   641                           ; 4 bytes @ 0x0
   642  0070                     	ds	1
   643  0071                     ??_lcd_write_char:	
   644  0071                     ??i1_lcd_cmd:	
   645                           ; 1 bytes @ 0x1
   646                           
   647                           
   648                           ; 1 bytes @ 0x1
   649  0071                     	ds	1
   650  0072                     ??__Umul8_16:	
   651  0072                     ??_ADC_Read:	
   652                           ; 1 bytes @ 0x2
   653                           
   654  0072                     ?___xxtofl:	
   655                           ; 1 bytes @ 0x2
   656                           
   657  0072                     lcd_write_char@temp:	
   658                           ; 4 bytes @ 0x2
   659                           
   660  0072                     ___wmul@multiplicand:	
   661                           ; 1 bytes @ 0x2
   662                           
   663  0072                     ___awmod@dividend:	
   664                           ; 2 bytes @ 0x2
   665                           
   666  0072                     ___lwmod@dividend:	
   667                           ; 2 bytes @ 0x2
   668                           
   669  0072                     ___xxtofl@val:	
   670                           ; 2 bytes @ 0x2
   671                           
   672                           
   673                           ; 4 bytes @ 0x2
   674  0072                     	ds	1
   675  0073                     lcd_write_char@y:	
   676  0073                     i1lcd_cmd@a:	
   677                           ; 1 bytes @ 0x3
   678                           
   679                           
   680                           ; 1 bytes @ 0x3
   681  0073                     	ds	1
   682  0074                     ??_lcd_clear:	
   683  0074                     ?_lcd_set_cursor:	
   684                           ; 1 bytes @ 0x4
   685                           
   686  0074                     ??___wmul:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0074                     ??___awmod:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0074                     ??___flneg:	
   693                           ; 1 bytes @ 0x4
   694                           
   695  0074                     ??___lwmod:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0074                     lcd_set_cursor@b:	
   699                           ; 1 bytes @ 0x4
   700                           
   701  0074                     lcd_write_char@a:	
   702                           ; 1 bytes @ 0x4
   703                           
   704  0074                     ___wmul@product:	
   705                           ; 1 bytes @ 0x4
   706                           
   707  0074                     __Umul8_16@product:	
   708                           ; 2 bytes @ 0x4
   709                           
   710  0074                     ___lldiv@dividend:	
   711                           ; 2 bytes @ 0x4
   712                           
   713  0074                     __div_to_l_@f2:	
   714                           ; 4 bytes @ 0x4
   715                           
   716  0074                     ___fleq@ff2:	
   717                           ; 4 bytes @ 0x4
   718                           
   719  0074                     ___flge@ff2:	
   720                           ; 4 bytes @ 0x4
   721                           
   722  0074                     __tdiv_to_l_@f2:	
   723                           ; 4 bytes @ 0x4
   724                           
   725  0074                     ___llmod@dividend:	
   726                           ; 4 bytes @ 0x4
   727                           
   728                           
   729                           ; 4 bytes @ 0x4
   730  0074                     	ds	1
   731  0075                     ??_lcd_set_cursor:	
   732  0075                     ??_lcd_write_string:	
   733                           ; 1 bytes @ 0x5
   734                           
   735  0075                     ___awmod@counter:	
   736                           ; 1 bytes @ 0x5
   737                           
   738  0075                     ___lwmod@counter:	
   739                           ; 1 bytes @ 0x5
   740                           
   741                           
   742                           ; 1 bytes @ 0x5
   743  0075                     	ds	1
   744  0076                     ??___xxtofl:	
   745  0076                     ?___lwdiv:	
   746                           ; 1 bytes @ 0x6
   747                           
   748  0076                     ___awmod@sign:	
   749                           ; 2 bytes @ 0x6
   750                           
   751  0076                     lcd_write_string@i:	
   752                           ; 1 bytes @ 0x6
   753                           
   754  0076                     ___lwdiv@divisor:	
   755                           ; 2 bytes @ 0x6
   756                           
   757  0076                     __Umul8_16@word_mpld:	
   758                           ; 2 bytes @ 0x6
   759                           
   760                           
   761                           ; 2 bytes @ 0x6
   762  0076                     	ds	1
   763  0077                     ?___awdiv:	
   764  0077                     lcd_set_cursor@a:	
   765                           ; 2 bytes @ 0x7
   766                           
   767  0077                     ___awdiv@divisor:	
   768                           ; 1 bytes @ 0x7
   769                           
   770                           
   771                           ; 2 bytes @ 0x7
   772  0077                     	ds	1
   773  0078                     ??__tdiv_to_l_:	
   774  0078                     ??__div_to_l_:	
   775                           ; 1 bytes @ 0x8
   776                           
   777  0078                     ??___lldiv:	
   778                           ; 1 bytes @ 0x8
   779                           
   780  0078                     ??___fleq:	
   781                           ; 1 bytes @ 0x8
   782                           
   783  0078                     ??___flge:	
   784                           ; 1 bytes @ 0x8
   785                           
   786  0078                     ??___llmod:	
   787                           ; 1 bytes @ 0x8
   788                           
   789  0078                     lcd_set_cursor@z:	
   790                           ; 1 bytes @ 0x8
   791                           
   792  0078                     lcd_write_string@a:	
   793                           ; 1 bytes @ 0x8
   794                           
   795  0078                     __Umul8_16@multiplier:	
   796                           ; 1 bytes @ 0x8
   797                           
   798  0078                     ___lwdiv@dividend:	
   799                           ; 1 bytes @ 0x8
   800                           
   801                           
   802                           ; 2 bytes @ 0x8
   803  0078                     	ds	1
   804  0079                     lcd_set_cursor@y:	
   805  0079                     ___llmod@counter:	
   806                           ; 1 bytes @ 0x9
   807                           
   808  0079                     ___awdiv@dividend:	
   809                           ; 1 bytes @ 0x9
   810                           
   811  0079                     ___lldiv@quotient:	
   812                           ; 2 bytes @ 0x9
   813                           
   814                           
   815                           ; 4 bytes @ 0x9
   816  0079                     	ds	1
   817  007A                     ??___lwdiv:	
   818  007A                     lcd_set_cursor@temp:	
   819                           ; 1 bytes @ 0xA
   820                           
   821                           
   822                           ; 1 bytes @ 0xA
   823  007A                     	ds	1
   824  007B                     ??___awdiv:	
   825  007B                     ___lwdiv@quotient:	
   826                           ; 1 bytes @ 0xB
   827                           
   828                           
   829                           ; 2 bytes @ 0xB
   830  007B                     	ds	2
   831  007D                     ___lldiv@counter:	
   832  007D                     ___lwdiv@counter:	
   833                           ; 1 bytes @ 0xD
   834                           
   835                           
   836                           ; 1 bytes @ 0xD
   837  007D                     	ds	1
   838  007E                     ??___flsub:	
   839                           
   840                           	psect	cstackBANK0
   841  0020                     __pcstackBANK0:	
   842                           ; 1 bytes @ 0xE
   843                           
   844  0020                     ___awdiv@counter:	
   845  0020                     ___xxtofl@sign:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0020                     __div_to_l_@quot:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0020                     __tdiv_to_l_@quot:	
   852                           ; 4 bytes @ 0x0
   853                           
   854                           
   855                           ; 4 bytes @ 0x0
   856  0020                     	ds	1
   857  0021                     ___awdiv@sign:	
   858  0021                     ___xxtofl@exp:	
   859                           ; 1 bytes @ 0x1
   860                           
   861                           
   862                           ; 1 bytes @ 0x1
   863  0021                     	ds	1
   864  0022                     ___awdiv@quotient:	
   865  0022                     ___xxtofl@arg:	
   866                           ; 2 bytes @ 0x2
   867                           
   868                           
   869                           ; 4 bytes @ 0x2
   870  0022                     	ds	2
   871  0024                     __div_to_l_@cntr:	
   872  0024                     __tdiv_to_l_@cntr:	
   873                           ; 1 bytes @ 0x4
   874                           
   875                           
   876                           ; 1 bytes @ 0x4
   877  0024                     	ds	1
   878  0025                     __div_to_l_@exp1:	
   879  0025                     __tdiv_to_l_@exp1:	
   880                           ; 1 bytes @ 0x5
   881                           
   882                           
   883                           ; 1 bytes @ 0x5
   884  0025                     	ds	1
   885  0026                     ?___flmul:	
   886  0026                     ___flmul@b:	
   887                           ; 4 bytes @ 0x6
   888                           
   889                           
   890                           ; 4 bytes @ 0x6
   891  0026                     	ds	4
   892  002A                     ___flmul@a:	
   893                           
   894                           ; 4 bytes @ 0xA
   895  002A                     	ds	4
   896  002E                     ??___flmul:	
   897                           
   898                           ; 1 bytes @ 0xE
   899  002E                     	ds	5
   900  0033                     ___flmul@sign:	
   901                           
   902                           ; 1 bytes @ 0x13
   903  0033                     	ds	1
   904  0034                     ___flmul@grs:	
   905                           
   906                           ; 4 bytes @ 0x14
   907  0034                     	ds	4
   908  0038                     ___flmul@aexp:	
   909                           
   910                           ; 1 bytes @ 0x18
   911  0038                     	ds	1
   912  0039                     ___flmul@bexp:	
   913                           
   914                           ; 1 bytes @ 0x19
   915  0039                     	ds	1
   916  003A                     ___flmul@prod:	
   917                           
   918                           ; 4 bytes @ 0x1A
   919  003A                     	ds	4
   920  003E                     ___flmul@temp:	
   921                           
   922                           ; 2 bytes @ 0x1E
   923  003E                     	ds	2
   924  0040                     ?_fround:	
   925  0040                     ?_scale:	
   926                           ; 4 bytes @ 0x20
   927                           
   928  0040                     ?___fldiv:	
   929                           ; 4 bytes @ 0x20
   930                           
   931  0040                     ___fldiv@a:	
   932                           ; 4 bytes @ 0x20
   933                           
   934                           
   935                           ; 4 bytes @ 0x20
   936  0040                     	ds	4
   937  0044                     ??_fround:	
   938  0044                     ??_scale:	
   939                           ; 1 bytes @ 0x24
   940                           
   941  0044                     ___fldiv@b:	
   942                           ; 1 bytes @ 0x24
   943                           
   944                           
   945                           ; 4 bytes @ 0x24
   946  0044                     	ds	4
   947  0048                     ??___fldiv:	
   948                           
   949                           ; 1 bytes @ 0x28
   950  0048                     	ds	3
   951  004B                     _fround$806:	
   952                           
   953                           ; 4 bytes @ 0x2B
   954  004B                     	ds	2
   955  004D                     ___fldiv@rem:	
   956                           
   957                           ; 4 bytes @ 0x2D
   958  004D                     	ds	1
   959  004E                     _scale$807:	
   960                           
   961                           ; 4 bytes @ 0x2E
   962  004E                     	ds	1
   963  004F                     _fround$805:	
   964                           
   965                           ; 4 bytes @ 0x2F
   966  004F                     	ds	2
   967  0051                     ___fldiv@sign:	
   968                           
   969                           ; 1 bytes @ 0x31
   970  0051                     	ds	1
   971  0052                     scale@scl:	
   972  0052                     ___fldiv@new_exp:	
   973                           ; 1 bytes @ 0x32
   974                           
   975                           
   976                           ; 2 bytes @ 0x32
   977  0052                     	ds	1
   978  0053                     ?___fltol:	
   979  0053                     fround@prec:	
   980                           ; 4 bytes @ 0x33
   981                           
   982  0053                     ___fltol@f1:	
   983                           ; 1 bytes @ 0x33
   984                           
   985                           
   986                           ; 4 bytes @ 0x33
   987  0053                     	ds	1
   988  0054                     ?___fladd:	
   989  0054                     ___fladd@b:	
   990                           ; 4 bytes @ 0x34
   991                           
   992  0054                     ___fldiv@grs:	
   993                           ; 4 bytes @ 0x34
   994                           
   995                           
   996                           ; 4 bytes @ 0x34
   997  0054                     	ds	3
   998  0057                     ??___fltol:	
   999                           
  1000                           ; 1 bytes @ 0x37
  1001  0057                     	ds	1
  1002  0058                     ___fldiv@bexp:	
  1003  0058                     ___fladd@a:	
  1004                           ; 1 bytes @ 0x38
  1005                           
  1006                           
  1007                           ; 4 bytes @ 0x38
  1008  0058                     	ds	1
  1009  0059                     ___fldiv@aexp:	
  1010                           
  1011                           ; 1 bytes @ 0x39
  1012  0059                     	ds	3
  1013  005C                     ??___fladd:	
  1014  005C                     ___fltol@sign1:	
  1015                           ; 1 bytes @ 0x3C
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x3C
  1019  005C                     	ds	1
  1020  005D                     ___fltol@exp1:	
  1021                           
  1022                           ; 1 bytes @ 0x3D
  1023  005D                     	ds	7
  1024  0064                     ___fladd@signs:	
  1025                           
  1026                           ; 1 bytes @ 0x44
  1027  0064                     	ds	1
  1028  0065                     ___fladd@aexp:	
  1029                           
  1030                           ; 1 bytes @ 0x45
  1031  0065                     	ds	1
  1032  0066                     ___fladd@bexp:	
  1033                           
  1034                           ; 1 bytes @ 0x46
  1035  0066                     	ds	1
  1036  0067                     ___fladd@grs:	
  1037                           
  1038                           ; 1 bytes @ 0x47
  1039  0067                     	ds	1
  1040  0068                     ?___flsub:	
  1041  0068                     ___flsub@a:	
  1042                           ; 4 bytes @ 0x48
  1043                           
  1044                           
  1045                           ; 4 bytes @ 0x48
  1046  0068                     	ds	4
  1047  006C                     ___flsub@b:	
  1048                           
  1049                           ; 4 bytes @ 0x4C
  1050  006C                     	ds	4
  1051                           
  1052                           	psect	maintext
  1053  1E15                     __pmaintext:	
  1054 ;;
  1055 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1056 ;;
  1057 ;; *************** function _main *****************
  1058 ;; Defined at:
  1059 ;;		line 70 in file "lcd.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  a               1    0        unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  2  117[None  ] int 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0, pclath, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : B00/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1073 ;;      Params:         0       0       0       0       0
  1074 ;;      Locals:         0       0       0       1       0
  1075 ;;      Temps:          0       0       0       0       0
  1076 ;;      Totals:         0       0       0       1       0
  1077 ;;Total ram usage:        1 bytes
  1078 ;; Hardware stack levels required when called:    8
  1079 ;; This function calls:
  1080 ;;		_ADC_Init
  1081 ;;		_init_timer
  1082 ;;		_lcd_init
  1083 ;; This function is called by:
  1084 ;;		Startup code after reset
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _main
  1090  1E15                     _main:	
  1091                           
  1092                           ;lcd.c: 72:     TRISD=0x00;
  1093                           
  1094                           ;incstack = 0
  1095                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1096  1E15  1683               	bsf	3,5	;RP0=1, select bank1
  1097  1E16  1303               	bcf	3,6	;RP1=0, select bank1
  1098  1E17  0188               	clrf	8	;volatile
  1099                           
  1100                           ;lcd.c: 73:     PORTD=0x00;
  1101  1E18  1283               	bcf	3,5	;RP0=0, select bank0
  1102  1E19  1303               	bcf	3,6	;RP1=0, select bank0
  1103  1E1A  0188               	clrf	8	;volatile
  1104                           
  1105                           ;lcd.c: 74:     TRISB=0x00;
  1106  1E1B  1683               	bsf	3,5	;RP0=1, select bank1
  1107  1E1C  1303               	bcf	3,6	;RP1=0, select bank1
  1108  1E1D  0186               	clrf	6	;volatile
  1109                           
  1110                           ;lcd.c: 75:     PORTB=0x00;
  1111  1E1E  1283               	bcf	3,5	;RP0=0, select bank0
  1112  1E1F  1303               	bcf	3,6	;RP1=0, select bank0
  1113  1E20  0186               	clrf	6	;volatile
  1114                           
  1115                           ;lcd.c: 76:     ADC_Init();
  1116  1E21  160A  118A  209D  160A  158A  	fcall	_ADC_Init
  1117                           
  1118                           ;lcd.c: 77:     lcd_init();
  1119  1E26  160A  118A  21BA  160A  158A  	fcall	_lcd_init
  1120                           
  1121                           ;lcd.c: 78:     init_timer();
  1122  1E2B  160A  118A  20A5  160A  158A  	fcall	_init_timer
  1123  1E30                     l118:	
  1124                           ;lcd.c: 80:     while(1){}
  1125                           
  1126  1E30  2E30               	goto	l118
  1127  1E31                     __end_of_main:	
  1128                           
  1129                           	psect	text1
  1130  11BA                     __ptext1:	
  1131 ;; *************** function _lcd_init *****************
  1132 ;; Defined at:
  1133 ;;		line 62 in file "./lcd.h"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0, pclath, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1147 ;;      Params:         0       0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0
  1149 ;;      Temps:          0       0       0       2       0
  1150 ;;      Totals:         0       0       0       2       0
  1151 ;;Total ram usage:        2 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    7
  1154 ;; This function calls:
  1155 ;;		_lcd_cmd
  1156 ;;		_lcd_port
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function _lcd_init
  1164  11BA                     _lcd_init:	
  1165                           
  1166                           ;./lcd.h: 64:     lcd_port(0x00);
  1167                           
  1168                           ;incstack = 0
  1169                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1170  11BA  3000               	movlw	0
  1171  11BB  160A  158A  26D5  160A  118A  	fcall	_lcd_port
  1172                           
  1173                           ;./lcd.h: 65:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1174  11C0  3082               	movlw	130
  1175  11C1  1683               	bsf	3,5	;RP0=1, select bank3
  1176  11C2  1703               	bsf	3,6	;RP1=1, select bank3
  1177  11C3  0095               	movwf	(??_lcd_init^(0+384)+1)
  1178  11C4  30DD               	movlw	221
  1179  11C5  0094               	movwf	??_lcd_init^(0+384)
  1180  11C6                     u5937:	
  1181  11C6  0B94               	decfsz	??_lcd_init^(0+384),f
  1182  11C7  29C6               	goto	u5937
  1183  11C8  0B95               	decfsz	(??_lcd_init^(0+384)+1),f
  1184  11C9  29C6               	goto	u5937
  1185                           
  1186                           ;./lcd.h: 66:     lcd_cmd(0x03);
  1187  11CA  3003               	movlw	3
  1188  11CB  160A  158A  264F  160A  118A  	fcall	_lcd_cmd
  1189                           
  1190                           ;./lcd.h: 67:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1191  11D0  3021               	movlw	33
  1192  11D1  1683               	bsf	3,5	;RP0=1, select bank3
  1193  11D2  1703               	bsf	3,6	;RP1=1, select bank3
  1194  11D3  0095               	movwf	(??_lcd_init^(0+384)+1)
  1195  11D4  3075               	movlw	117
  1196  11D5  0094               	movwf	??_lcd_init^(0+384)
  1197  11D6                     u5947:	
  1198  11D6  0B94               	decfsz	??_lcd_init^(0+384),f
  1199  11D7  29D6               	goto	u5947
  1200  11D8  0B95               	decfsz	(??_lcd_init^(0+384)+1),f
  1201  11D9  29D6               	goto	u5947
  1202  11DA  29DB               	nop2
  1203                           
  1204                           ;./lcd.h: 68:     lcd_cmd(0x03);
  1205  11DB  3003               	movlw	3
  1206  11DC  160A  158A  264F  160A  118A  	fcall	_lcd_cmd
  1207                           
  1208                           ;./lcd.h: 69:     _delay((unsigned long)((11)*(20000000/4000.0)));
  1209  11E1  3048               	movlw	72
  1210  11E2  1683               	bsf	3,5	;RP0=1, select bank3
  1211  11E3  1703               	bsf	3,6	;RP1=1, select bank3
  1212  11E4  0095               	movwf	(??_lcd_init^(0+384)+1)
  1213  11E5  306B               	movlw	107
  1214  11E6  0094               	movwf	??_lcd_init^(0+384)
  1215  11E7                     u5957:	
  1216  11E7  0B94               	decfsz	??_lcd_init^(0+384),f
  1217  11E8  29E7               	goto	u5957
  1218  11E9  0B95               	decfsz	(??_lcd_init^(0+384)+1),f
  1219  11EA  29E7               	goto	u5957
  1220  11EB  29EC               	nop2
  1221                           
  1222                           ;./lcd.h: 70:     lcd_cmd(0x03);
  1223  11EC  3003               	movlw	3
  1224  11ED  160A  158A  264F  160A  118A  	fcall	_lcd_cmd
  1225                           
  1226                           ;./lcd.h: 72:     lcd_cmd(0x02);
  1227  11F2  3002               	movlw	2
  1228  11F3  160A  158A  264F  160A  118A  	fcall	_lcd_cmd
  1229                           
  1230                           ;./lcd.h: 73:     lcd_cmd(0x02);
  1231  11F8  3002               	movlw	2
  1232  11F9  160A  158A  264F  160A  118A  	fcall	_lcd_cmd
  1233                           
  1234                           ;./lcd.h: 74:     lcd_cmd(0x08);
  1235  11FE  3008               	movlw	8
  1236  11FF  160A  158A  264F  160A  118A  	fcall	_lcd_cmd
  1237                           
  1238                           ;./lcd.h: 75:     lcd_cmd(0x00);
  1239  1204  3000               	movlw	0
  1240  1205  160A  158A  264F  160A  118A  	fcall	_lcd_cmd
  1241                           
  1242                           ;./lcd.h: 76:     lcd_cmd(0x0C);
  1243  120A  300C               	movlw	12
  1244  120B  160A  158A  264F  160A  118A  	fcall	_lcd_cmd
  1245                           
  1246                           ;./lcd.h: 77:     lcd_cmd(0x00);
  1247  1210  3000               	movlw	0
  1248  1211  160A  158A  264F  160A  118A  	fcall	_lcd_cmd
  1249                           
  1250                           ;./lcd.h: 78:     lcd_cmd(0x06);
  1251  1216  3006               	movlw	6
  1252  1217  160A  158A  264F   	fcall	_lcd_cmd
  1253  121A  0008               	return
  1254  121B                     __end_of_lcd_init:	
  1255                           
  1256                           	psect	text2
  1257  1E4F                     __ptext2:	
  1258 ;; *************** function _lcd_cmd *****************
  1259 ;; Defined at:
  1260 ;;		line 25 in file "./lcd.h"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  a               1    wreg     unsigned char 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  a               1    3[BANK3 ] unsigned char 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0, pclath, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         0       0       0       0       0
  1275 ;;      Locals:         0       0       0       1       0
  1276 ;;      Temps:          0       0       0       2       0
  1277 ;;      Totals:         0       0       0       3       0
  1278 ;;Total ram usage:        3 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    6
  1281 ;; This function calls:
  1282 ;;		_lcd_port
  1283 ;; This function is called by:
  1284 ;;		_lcd_init
  1285 ;;		_lcd_shift_right
  1286 ;;		_lcd_shift_left
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _lcd_cmd
  1292  1E4F                     _lcd_cmd:	
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  1296                           ;lcd_cmd@a stored from wreg
  1297  1E4F  1683               	bsf	3,5	;RP0=1, select bank3
  1298  1E50  1703               	bsf	3,6	;RP1=1, select bank3
  1299  1E51  0093               	movwf	lcd_cmd@a^(0+384)
  1300                           
  1301                           ;./lcd.h: 25: void lcd_cmd(char a);./lcd.h: 26: {;./lcd.h: 27:     RD2=0;
  1302  1E52  1283               	bcf	3,5	;RP0=0, select bank0
  1303  1E53  1303               	bcf	3,6	;RP1=0, select bank0
  1304  1E54  1108               	bcf	8,2	;volatile
  1305                           
  1306                           ;./lcd.h: 28:     lcd_port(a);
  1307  1E55  1683               	bsf	3,5	;RP0=1, select bank3
  1308  1E56  1703               	bsf	3,6	;RP1=1, select bank3
  1309  1E57  0813               	movf	lcd_cmd@a^(0+384),w
  1310  1E58  160A  158A  26D5  160A  158A  	fcall	_lcd_port
  1311                           
  1312                           ;./lcd.h: 29:     RD3=1;
  1313  1E5D  1283               	bcf	3,5	;RP0=0, select bank0
  1314  1E5E  1303               	bcf	3,6	;RP1=0, select bank0
  1315  1E5F  1588               	bsf	8,3	;volatile
  1316                           
  1317                           ;./lcd.h: 30:     _delay((unsigned long)((4)*(20000000/4000.0)));
  1318  1E60  301A               	movlw	26
  1319  1E61  1683               	bsf	3,5	;RP0=1, select bank3
  1320  1E62  1703               	bsf	3,6	;RP1=1, select bank3
  1321  1E63  0092               	movwf	(??_lcd_cmd^(0+384)+1)
  1322  1E64  30F7               	movlw	247
  1323  1E65  0091               	movwf	??_lcd_cmd^(0+384)
  1324  1E66                     u5967:	
  1325  1E66  0B91               	decfsz	??_lcd_cmd^(0+384),f
  1326  1E67  2E66               	goto	u5967
  1327  1E68  0B92               	decfsz	(??_lcd_cmd^(0+384)+1),f
  1328  1E69  2E66               	goto	u5967
  1329  1E6A  2E6B               	nop2
  1330                           
  1331                           ;./lcd.h: 31:     RD3=0;
  1332  1E6B  1283               	bcf	3,5	;RP0=0, select bank0
  1333  1E6C  1303               	bcf	3,6	;RP1=0, select bank0
  1334  1E6D  1188               	bcf	8,3	;volatile
  1335  1E6E  0008               	return
  1336  1E6F                     __end_of_lcd_cmd:	
  1337                           
  1338                           	psect	text3
  1339  1ED5                     __ptext3:	
  1340 ;; *************** function _lcd_port *****************
  1341 ;; Defined at:
  1342 ;;		line 1 in file "./lcd.h"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  a               1    wreg     unsigned char 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  a               1    0[BANK3 ] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         0       0       0       1       0
  1358 ;;      Temps:          0       0       0       0       0
  1359 ;;      Totals:         0       0       0       1       0
  1360 ;;Total ram usage:        1 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    5
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_lcd_cmd
  1367 ;;		_lcd_init
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           
  1372                           ;psect for function _lcd_port
  1373  1ED5                     _lcd_port:	
  1374                           
  1375                           ;incstack = 0
  1376                           ; Regs used in _lcd_port: [wreg]
  1377                           ;lcd_port@a stored from wreg
  1378  1ED5  1683               	bsf	3,5	;RP0=1, select bank3
  1379  1ED6  1703               	bsf	3,6	;RP1=1, select bank3
  1380  1ED7  0090               	movwf	lcd_port@a^(0+384)
  1381                           
  1382                           ;./lcd.h: 1: void lcd_port (char a);./lcd.h: 2: {;./lcd.h: 3:     if(a & 1)
  1383  1ED8  1C10               	btfss	lcd_port@a^(0+384),0
  1384  1ED9  2EDE               	goto	l55
  1385                           
  1386                           ;./lcd.h: 4:         RD4=1;
  1387  1EDA  1283               	bcf	3,5	;RP0=0, select bank0
  1388  1EDB  1303               	bcf	3,6	;RP1=0, select bank0
  1389  1EDC  1608               	bsf	8,4	;volatile
  1390  1EDD  2EE1               	goto	l56
  1391  1EDE                     l55:	
  1392                           ;./lcd.h: 5:     else
  1393                           
  1394                           
  1395                           ;./lcd.h: 6:         RD4=0;
  1396  1EDE  1283               	bcf	3,5	;RP0=0, select bank0
  1397  1EDF  1303               	bcf	3,6	;RP1=0, select bank0
  1398  1EE0  1208               	bcf	8,4	;volatile
  1399  1EE1                     l56:	
  1400                           
  1401                           ;./lcd.h: 8:      if(a & 2)
  1402  1EE1  1683               	bsf	3,5	;RP0=1, select bank3
  1403  1EE2  1703               	bsf	3,6	;RP1=1, select bank3
  1404  1EE3  1C90               	btfss	lcd_port@a^(0+384),1
  1405  1EE4  2EE9               	goto	l57
  1406                           
  1407                           ;./lcd.h: 9:         RD5=1;
  1408  1EE5  1283               	bcf	3,5	;RP0=0, select bank0
  1409  1EE6  1303               	bcf	3,6	;RP1=0, select bank0
  1410  1EE7  1688               	bsf	8,5	;volatile
  1411  1EE8  2EEC               	goto	l58
  1412  1EE9                     l57:	
  1413                           ;./lcd.h: 10:     else
  1414                           
  1415                           
  1416                           ;./lcd.h: 11:         RD5=0;
  1417  1EE9  1283               	bcf	3,5	;RP0=0, select bank0
  1418  1EEA  1303               	bcf	3,6	;RP1=0, select bank0
  1419  1EEB  1288               	bcf	8,5	;volatile
  1420  1EEC                     l58:	
  1421                           
  1422                           ;./lcd.h: 13:      if(a & 4)
  1423  1EEC  1683               	bsf	3,5	;RP0=1, select bank3
  1424  1EED  1703               	bsf	3,6	;RP1=1, select bank3
  1425  1EEE  1D10               	btfss	lcd_port@a^(0+384),2
  1426  1EEF  2EF4               	goto	l59
  1427                           
  1428                           ;./lcd.h: 14:         RD6=1;
  1429  1EF0  1283               	bcf	3,5	;RP0=0, select bank0
  1430  1EF1  1303               	bcf	3,6	;RP1=0, select bank0
  1431  1EF2  1708               	bsf	8,6	;volatile
  1432  1EF3  2EF7               	goto	l60
  1433  1EF4                     l59:	
  1434                           ;./lcd.h: 15:     else
  1435                           
  1436                           
  1437                           ;./lcd.h: 16:         RD6=0;
  1438  1EF4  1283               	bcf	3,5	;RP0=0, select bank0
  1439  1EF5  1303               	bcf	3,6	;RP1=0, select bank0
  1440  1EF6  1308               	bcf	8,6	;volatile
  1441  1EF7                     l60:	
  1442                           
  1443                           ;./lcd.h: 18:      if(a & 8)
  1444  1EF7  1683               	bsf	3,5	;RP0=1, select bank3
  1445  1EF8  1703               	bsf	3,6	;RP1=1, select bank3
  1446  1EF9  1D90               	btfss	lcd_port@a^(0+384),3
  1447  1EFA  2EFF               	goto	l61
  1448                           
  1449                           ;./lcd.h: 19:         RD7=1;
  1450  1EFB  1283               	bcf	3,5	;RP0=0, select bank0
  1451  1EFC  1303               	bcf	3,6	;RP1=0, select bank0
  1452  1EFD  1788               	bsf	8,7	;volatile
  1453  1EFE  0008               	return
  1454  1EFF                     l61:	
  1455                           ;./lcd.h: 20:     else
  1456                           
  1457                           
  1458                           ;./lcd.h: 21:         RD7=0;
  1459  1EFF  1283               	bcf	3,5	;RP0=0, select bank0
  1460  1F00  1303               	bcf	3,6	;RP1=0, select bank0
  1461  1F01  1388               	bcf	8,7	;volatile
  1462  1F02  0008               	return
  1463  1F03                     __end_of_lcd_port:	
  1464                           
  1465                           	psect	text4
  1466  10A5                     __ptext4:	
  1467 ;; *************** function _init_timer *****************
  1468 ;; Defined at:
  1469 ;;		line 60 in file "lcd.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0
  1486 ;;      Totals:         0       0       0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    5
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _init_timer
  1499  10A5                     _init_timer:	
  1500                           
  1501                           ;lcd.c: 61:     T1CON = (1<<5) | (1<<4);
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _init_timer: [wreg]
  1505  10A5  3030               	movlw	48
  1506  10A6  1283               	bcf	3,5	;RP0=0, select bank0
  1507  10A7  1303               	bcf	3,6	;RP1=0, select bank0
  1508  10A8  0090               	movwf	16	;volatile
  1509                           
  1510                           ;lcd.c: 62:     TMR1H=0x0B;
  1511  10A9  300B               	movlw	11
  1512  10AA  008F               	movwf	15	;volatile
  1513                           
  1514                           ;lcd.c: 63:     TMR1L=0xDC;
  1515  10AB  30DC               	movlw	220
  1516  10AC  008E               	movwf	14	;volatile
  1517                           
  1518                           ;lcd.c: 64:     TMR1IE=1;
  1519  10AD  1683               	bsf	3,5	;RP0=1, select bank1
  1520  10AE  1303               	bcf	3,6	;RP1=0, select bank1
  1521  10AF  140C               	bsf	12,0	;volatile
  1522                           
  1523                           ;lcd.c: 65:     GIE=1;
  1524  10B0  178B               	bsf	11,7	;volatile
  1525                           
  1526                           ;lcd.c: 66:     PEIE=1;
  1527  10B1  170B               	bsf	11,6	;volatile
  1528                           
  1529                           ;lcd.c: 67:     TMR1ON = 1;
  1530  10B2  1283               	bcf	3,5	;RP0=0, select bank0
  1531  10B3  1303               	bcf	3,6	;RP1=0, select bank0
  1532  10B4  1410               	bsf	16,0	;volatile
  1533  10B5  0008               	return
  1534  10B6                     __end_of_init_timer:	
  1535                           
  1536                           	psect	text5
  1537  109D                     __ptext5:	
  1538 ;; *************** function _ADC_Init *****************
  1539 ;; Defined at:
  1540 ;;		line 22 in file "lcd.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         0       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         0       0       0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    5
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _ADC_Init
  1570  109D                     _ADC_Init:	
  1571                           
  1572                           ;lcd.c: 23:    ADCON0=0x00;
  1573                           
  1574                           ;incstack = 0
  1575                           ; Regs used in _ADC_Init: [wreg+status,2]
  1576  109D  1283               	bcf	3,5	;RP0=0, select bank0
  1577  109E  1303               	bcf	3,6	;RP1=0, select bank0
  1578  109F  019F               	clrf	31	;volatile
  1579                           
  1580                           ;lcd.c: 24:    ADCON1=(1<<7);
  1581  10A0  3080               	movlw	128
  1582  10A1  1683               	bsf	3,5	;RP0=1, select bank1
  1583  10A2  1303               	bcf	3,6	;RP1=0, select bank1
  1584  10A3  009F               	movwf	31	;volatile
  1585  10A4  0008               	return
  1586  10A5                     __end_of_ADC_Init:	
  1587                           
  1588                           	psect	text6
  1589  131B                     __ptext6:	
  1590 ;; *************** function _my_isr_routine *****************
  1591 ;; Defined at:
  1592 ;;		line 40 in file "lcd.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  buf            30   40[BANK1 ] unsigned char [30]
  1597 ;;  val             4   70[BANK1 ] float 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         0       0       0       0       0
  1608 ;;      Locals:         0       0      34       0       0
  1609 ;;      Temps:          0       0       5       0       0
  1610 ;;      Totals:         0       0      39       0       0
  1611 ;;Total ram usage:       39 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:    4
  1614 ;; This function calls:
  1615 ;;		_ADC_Read
  1616 ;;		___fldiv
  1617 ;;		___flmul
  1618 ;;		___xxtofl
  1619 ;;		_lcd_clear
  1620 ;;		_lcd_set_cursor
  1621 ;;		_lcd_write_string
  1622 ;;		_sprintf
  1623 ;; This function is called by:
  1624 ;;		Interrupt level 1
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _my_isr_routine
  1630  131B                     _my_isr_routine:	
  1631                           
  1632                           ;lcd.c: 41:     if(TMR1IE && TMR1IF){
  1633  131B  1C0C               	btfss	12,0	;volatile
  1634  131C  2BA6               	goto	i1l110
  1635  131D  1283               	bcf	3,5	;RP0=0, select bank0
  1636  131E  1303               	bcf	3,6	;RP1=0, select bank0
  1637  131F  1C0C               	btfss	12,0	;volatile
  1638  1320  2BA6               	goto	i1l110
  1639                           
  1640                           ;lcd.c: 42:         TMR1IF=0;
  1641  1321  100C               	bcf	12,0	;volatile
  1642                           
  1643                           ;lcd.c: 44:         lcd_clear();
  1644  1322  160A  158A  25BA  160A  118A  	fcall	_lcd_clear
  1645                           
  1646                           ;lcd.c: 45:         lcd_set_cursor(1,1);
  1647  1327  01F4               	clrf	lcd_set_cursor@b
  1648  1328  0AF4               	incf	lcd_set_cursor@b,f
  1649  1329  3001               	movlw	1
  1650  132A  160A  158A  27B6  160A  118A  	fcall	_lcd_set_cursor
  1651                           
  1652                           ;lcd.c: 47:         float val = ((float)ADC_Read(0) * 5) / 1023;
  1653  132F  3044               	movlw	68
  1654  1330  1283               	bcf	3,5	;RP0=0, select bank0
  1655  1331  1303               	bcf	3,6	;RP1=0, select bank0
  1656  1332  00C3               	movwf	___fldiv@a+3
  1657  1333  307F               	movlw	127
  1658  1334  00C2               	movwf	___fldiv@a+2
  1659  1335  30C0               	movlw	192
  1660  1336  00C1               	movwf	___fldiv@a+1
  1661  1337  3000               	movlw	0
  1662  1338  00C0               	movwf	___fldiv@a
  1663  1339  3040               	movlw	64
  1664  133A  00A9               	movwf	___flmul@b+3
  1665  133B  30A0               	movlw	160
  1666  133C  00A8               	movwf	___flmul@b+2
  1667  133D  3000               	movlw	0
  1668  133E  00A7               	movwf	___flmul@b+1
  1669  133F  3000               	movlw	0
  1670  1340  00A6               	movwf	___flmul@b
  1671  1341  3000               	movlw	0
  1672  1342  00F0               	movwf	ADC_Read@adcChannel
  1673  1343  00F1               	movwf	ADC_Read@adcChannel+1
  1674  1344  160A  158A  25F9  160A  118A  	fcall	_ADC_Read
  1675  1349  0870               	movf	?_ADC_Read,w
  1676  134A  00F2               	movwf	___xxtofl@val
  1677  134B  0871               	movf	?_ADC_Read+1,w
  1678  134C  00F3               	movwf	___xxtofl@val+1
  1679  134D  3000               	movlw	0
  1680  134E  1BF3               	btfsc	___xxtofl@val+1,7
  1681  134F  30FF               	movlw	255
  1682  1350  00F4               	movwf	___xxtofl@val+2
  1683  1351  00F5               	movwf	___xxtofl@val+3
  1684  1352  3001               	movlw	1
  1685  1353  160A  118A  23B7  160A  118A  	fcall	___xxtofl
  1686  1358  0875               	movf	?___xxtofl+3,w
  1687  1359  1283               	bcf	3,5	;RP0=0, select bank0
  1688  135A  1303               	bcf	3,6	;RP1=0, select bank0
  1689  135B  00AD               	movwf	___flmul@a+3
  1690  135C  0874               	movf	?___xxtofl+2,w
  1691  135D  00AC               	movwf	___flmul@a+2
  1692  135E  0873               	movf	?___xxtofl+1,w
  1693  135F  00AB               	movwf	___flmul@a+1
  1694  1360  0872               	movf	?___xxtofl,w
  1695  1361  00AA               	movwf	___flmul@a
  1696  1362  120A  158A  21A2  160A  118A  	fcall	___flmul
  1697  1367  1283               	bcf	3,5	;RP0=0, select bank0
  1698  1368  1303               	bcf	3,6	;RP1=0, select bank0
  1699  1369  0829               	movf	?___flmul+3,w
  1700  136A  00C7               	movwf	___fldiv@b+3
  1701  136B  0828               	movf	?___flmul+2,w
  1702  136C  00C6               	movwf	___fldiv@b+2
  1703  136D  0827               	movf	?___flmul+1,w
  1704  136E  00C5               	movwf	___fldiv@b+1
  1705  136F  0826               	movf	?___flmul,w
  1706  1370  00C4               	movwf	___fldiv@b
  1707  1371  160A  118A  245C  160A  118A  	fcall	___fldiv
  1708  1376  1283               	bcf	3,5	;RP0=0, select bank0
  1709  1377  1303               	bcf	3,6	;RP1=0, select bank0
  1710  1378  0843               	movf	?___fldiv+3,w
  1711  1379  1683               	bsf	3,5	;RP0=1, select bank1
  1712  137A  1303               	bcf	3,6	;RP1=0, select bank1
  1713  137B  00E9               	movwf	(my_isr_routine@val+3)^(0+128)
  1714  137C  1283               	bcf	3,5	;RP0=0, select bank0
  1715  137D  1303               	bcf	3,6	;RP1=0, select bank0
  1716  137E  0842               	movf	?___fldiv+2,w
  1717  137F  1683               	bsf	3,5	;RP0=1, select bank1
  1718  1380  1303               	bcf	3,6	;RP1=0, select bank1
  1719  1381  00E8               	movwf	(my_isr_routine@val+2)^(0+128)
  1720  1382  1283               	bcf	3,5	;RP0=0, select bank0
  1721  1383  1303               	bcf	3,6	;RP1=0, select bank0
  1722  1384  0841               	movf	?___fldiv+1,w
  1723  1385  1683               	bsf	3,5	;RP0=1, select bank1
  1724  1386  1303               	bcf	3,6	;RP1=0, select bank1
  1725  1387  00E7               	movwf	(my_isr_routine@val+1)^(0+128)
  1726  1388  1283               	bcf	3,5	;RP0=0, select bank0
  1727  1389  1303               	bcf	3,6	;RP1=0, select bank0
  1728  138A  0840               	movf	?___fldiv,w
  1729  138B  1683               	bsf	3,5	;RP0=1, select bank1
  1730  138C  1303               	bcf	3,6	;RP1=0, select bank1
  1731  138D  00E6               	movwf	my_isr_routine@val^(0+128)
  1732                           
  1733                           ;lcd.c: 51:         char buf[30];;lcd.c: 52:         sprintf (buf, "A = %f", val);
  1734  138E  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1735  138F  00C3               	movwf	??_my_isr_routine^(0+128)
  1736  1390  0843               	movf	??_my_isr_routine^(0+128),w
  1737  1391  00A0               	movwf	sprintf@f^(0+128)
  1738  1392  0869               	movf	(my_isr_routine@val+3)^(0+128),w
  1739  1393  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1740  1394  0868               	movf	(my_isr_routine@val+2)^(0+128),w
  1741  1395  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1742  1396  0867               	movf	(my_isr_routine@val+1)^(0+128),w
  1743  1397  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1744  1398  0866               	movf	my_isr_routine@val^(0+128),w
  1745  1399  00A1               	movwf	(?_sprintf^(0+128)+1)
  1746  139A  30C8               	movlw	(low (my_isr_routine@buf| 0))& (0+255)
  1747  139B  120A  118A  2023  160A  118A  	fcall	_sprintf
  1748                           
  1749                           ;lcd.c: 55:         lcd_write_string(buf);
  1750  13A0  30C8               	movlw	(low (my_isr_routine@buf| 0))& (0+255)
  1751  13A1  160A  158A  2631  160A  118A  	fcall	_lcd_write_string
  1752  13A6                     i1l110:	
  1753  13A6  1683               	bsf	3,5	;RP0=1, select bank1
  1754  13A7  1303               	bcf	3,6	;RP1=0, select bank1
  1755  13A8  0847               	movf	(??_my_isr_routine+4)^(0+128),w
  1756  13A9  1283               	bcf	3,5	;RP0=0, select bank0
  1757  13AA  1303               	bcf	3,6	;RP1=0, select bank0
  1758  13AB  00FF               	movwf	127
  1759  13AC  1683               	bsf	3,5	;RP0=1, select bank1
  1760  13AD  1303               	bcf	3,6	;RP1=0, select bank1
  1761  13AE  0846               	movf	(??_my_isr_routine+3)^(0+128),w
  1762  13AF  008A               	movwf	10
  1763  13B0  0845               	movf	(??_my_isr_routine+2)^(0+128),w
  1764  13B1  0084               	movwf	4
  1765  13B2  0E44               	swapf	(??_my_isr_routine+1)^(0+128),w
  1766  13B3  0083               	movwf	3
  1767  13B4  0EFE               	swapf	126,f
  1768  13B5  0E7E               	swapf	126,w
  1769  13B6  0009               	retfie
  1770  13B7                     __end_of_my_isr_routine:	
  1771                           
  1772                           	psect	intentry
  1773  0004                     __pintentry:	
  1774                           ;incstack = 0
  1775                           ; Regs used in _my_isr_routine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1776                           
  1777  0004                     interrupt_function:	
  1778  007E                     saved_w	set	btemp
  1779  0004  00FE               	movwf	btemp
  1780  0005  0E03               	swapf	3,w
  1781  0006  1683               	bsf	3,5	;RP0=1, select bank1
  1782  0007  1303               	bcf	3,6	;RP1=0, select bank1
  1783  0008  00C4               	movwf	(??_my_isr_routine+1)^(0+128)
  1784  0009  0804               	movf	4,w
  1785  000A  00C5               	movwf	(??_my_isr_routine+2)^(0+128)
  1786  000B  080A               	movf	10,w
  1787  000C  00C6               	movwf	(??_my_isr_routine+3)^(0+128)
  1788  000D  1283               	bcf	3,5	;RP0=0, select bank0
  1789  000E  1303               	bcf	3,6	;RP1=0, select bank0
  1790  000F  087F               	movf	btemp+1,w
  1791  0010  1683               	bsf	3,5	;RP0=1, select bank1
  1792  0011  1303               	bcf	3,6	;RP1=0, select bank1
  1793  0012  00C7               	movwf	(??_my_isr_routine+4)^(0+128)
  1794  0013  160A  118A  2B1B   	ljmp	_my_isr_routine
  1795                           
  1796                           	psect	text7
  1797  0023                     __ptext7:	
  1798 ;; *************** function _sprintf *****************
  1799 ;; Defined at:
  1800 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  sp              1    wreg     PTR unsigned char 
  1803 ;;		 -> my_isr_routine@buf(30), 
  1804 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1805 ;;		 -> STR_1(7), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1808 ;;		 -> my_isr_routine@buf(30), 
  1809 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1810 ;;  tmpval          4   25[BANK1 ] struct .
  1811 ;;  val             4   19[BANK1 ] unsigned long 
  1812 ;;  eexp            2   23[BANK1 ] int 
  1813 ;;  prec            2   17[BANK1 ] int 
  1814 ;;  flag            2   15[BANK1 ] unsigned short 
  1815 ;;  cp              2    0        PTR const unsigned char 
  1816 ;;  len             2    0        unsigned int 
  1817 ;;  width           2    0        int 
  1818 ;;  c               1   34[BANK1 ] unsigned char 
  1819 ;;  ap              1   14[BANK1 ] PTR void [1]
  1820 ;;		 -> ?_sprintf(2), 
  1821 ;;  d               1    0        unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  2    0[BANK1 ] int 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       0       5       0       0
  1832 ;;      Locals:         0       0      25       0       0
  1833 ;;      Temps:          0       0       5       0       0
  1834 ;;      Totals:         0       0      35       0       0
  1835 ;;Total ram usage:       35 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    3
  1838 ;; This function calls:
  1839 ;;		___awdiv
  1840 ;;		___fladd
  1841 ;;		___fleq
  1842 ;;		___flge
  1843 ;;		___flmul
  1844 ;;		___flneg
  1845 ;;		___flsub
  1846 ;;		___fltol
  1847 ;;		___lldiv
  1848 ;;		___llmod
  1849 ;;		___wmul
  1850 ;;		___xxtofl
  1851 ;;		__div_to_l_
  1852 ;;		__tdiv_to_l_
  1853 ;;		_fround
  1854 ;;		_scale
  1855 ;; This function is called by:
  1856 ;;		_my_isr_routine
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _sprintf
  1862  0023                     _sprintf:	
  1863                           
  1864                           ;incstack = 0
  1865 ;; using string table level
  1866                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1867                           ;sprintf@sp stored from wreg
  1868  0023  1683               	bsf	3,5	;RP0=1, select bank1
  1869  0024  1303               	bcf	3,6	;RP1=0, select bank1
  1870  0025  00BD               	movwf	sprintf@sp^(0+128)
  1871                           
  1872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  1873  0026  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1874  0027  00A5               	movwf	??_sprintf^(0+128)
  1875  0028  0825               	movf	??_sprintf^(0+128),w
  1876  0029  00AE               	movwf	sprintf@ap^(0+128)
  1877  002A                     i1l3274:	
  1878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1879                           
  1880                           
  1881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1882  002A  3001               	movlw	1
  1883  002B  07A0               	addwf	sprintf@f^(0+128),f
  1884  002C  30FF               	movlw	-1
  1885  002D  0720               	addwf	sprintf@f^(0+128),w
  1886  002E  0084               	movwf	4
  1887  002F  160A  118A  2000  120A  118A  	fcall	stringdir
  1888  0034  00A5               	movwf	??_sprintf^(0+128)
  1889  0035  0825               	movf	??_sprintf^(0+128),w
  1890  0036  00C2               	movwf	sprintf@c^(0+128)
  1891  0037  0842               	movf	sprintf@c^(0+128),w
  1892  0038  1903               	btfsc	3,2
  1893  0039  2D8A               	goto	i1l3276
  1894                           
  1895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1896  003A  3025               	movlw	37
  1897  003B  0642               	xorwf	sprintf@c^(0+128),w
  1898  003C  1903               	btfsc	3,2
  1899  003D  2840               	goto	i1l3122
  1900                           
  1901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1902  003E  0842               	movf	sprintf@c^(0+128),w
  1903  003F  2D7F               	goto	L5
  1904  0040                     i1l3122:	
  1905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1906                           
  1907                           
  1908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1909  0040  01AF               	clrf	sprintf@flag^(0+128)
  1910  0041  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1911                           
  1912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1913  0042  2845               	goto	i1l3126
  1914  0043                     i1l242:	
  1915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  1916                           
  1917                           
  1918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  1919  0043  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1920                           
  1921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  1922  0044  285F               	goto	i1l3128
  1923  0045                     i1l3126:	
  1924  0045  3001               	movlw	1
  1925  0046  07A0               	addwf	sprintf@f^(0+128),f
  1926  0047  30FF               	movlw	-1
  1927  0048  0720               	addwf	sprintf@f^(0+128),w
  1928  0049  0084               	movwf	4
  1929  004A  160A  118A  2000  120A  118A  	fcall	stringdir
  1930  004F  00C2               	movwf	sprintf@c^(0+128)
  1931  0050  00A5               	movwf	??_sprintf^(0+128)
  1932  0051  01A6               	clrf	(??_sprintf^(0+128)+1)
  1933                           
  1934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1935                           ; Switch size 1, requested type "simple"
  1936                           ; Number of cases is 1, Range of values is 0 to 0
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte            4     3 (average)
  1940                           ; direct_byte           11     8 (fixed)
  1941                           ; jumptable            260     6 (fixed)
  1942                           ;	Chosen strategy is simple_byte
  1943  0052  0826               	movf	(??_sprintf+1)^(0+128),w
  1944  0053  3A00               	xorlw	0	; case 0
  1945  0054  1903               	skipnz
  1946  0055  2857               	goto	i1l3492
  1947  0056  282A               	goto	i1l3274
  1948  0057                     i1l3492:	
  1949                           
  1950                           ; Switch size 1, requested type "simple"
  1951                           ; Number of cases is 2, Range of values is 0 to 102
  1952                           ; switch strategies available:
  1953                           ; Name         Instructions Cycles
  1954                           ; simple_byte            7     4 (average)
  1955                           ; jumptable            260     6 (fixed)
  1956                           ;	Chosen strategy is simple_byte
  1957  0057  0825               	movf	??_sprintf^(0+128),w
  1958  0058  3A00               	xorlw	0	; case 0
  1959  0059  1903               	skipnz
  1960  005A  2D8A               	goto	i1l3276
  1961  005B  3A66               	xorlw	102	; case 102
  1962  005C  1903               	skipnz
  1963  005D  2843               	goto	i1l242
  1964  005E  282A               	goto	i1l3274
  1965  005F                     i1l3128:	
  1966                           
  1967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  1968  005F  3000               	movlw	0
  1969  0060  052F               	andwf	sprintf@flag^(0+128),w
  1970  0061  00A5               	movwf	??_sprintf^(0+128)
  1971  0062  3007               	movlw	7
  1972  0063  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1973  0064  00A6               	movwf	(??_sprintf+1)^(0+128)
  1974  0065  0825               	movf	??_sprintf^(0+128),w
  1975  0066  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1976  0067  1903               	btfsc	3,2
  1977  0068  2D74               	goto	i1l3268
  1978                           
  1979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  1980  0069  3006               	movlw	6
  1981  006A  00B1               	movwf	sprintf@prec^(0+128)
  1982  006B  3000               	movlw	0
  1983  006C  00B2               	movwf	(sprintf@prec^(0+128)+1)
  1984                           
  1985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1986  006D  082E               	movf	sprintf@ap^(0+128),w
  1987  006E  0084               	movwf	4
  1988  006F  1383               	bcf	3,7	;select IRP bank0
  1989  0070  0800               	movf	0,w
  1990  0071  00BE               	movwf	sprintf@fval^(0+128)
  1991  0072  0A84               	incf	4,f
  1992  0073  0800               	movf	0,w
  1993  0074  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1994  0075  0A84               	incf	4,f
  1995  0076  0800               	movf	0,w
  1996  0077  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1997  0078  0A84               	incf	4,f
  1998  0079  0800               	movf	0,w
  1999  007A  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2000  007B  3004               	movlw	4
  2001  007C  00A5               	movwf	??_sprintf^(0+128)
  2002  007D  0825               	movf	??_sprintf^(0+128),w
  2003  007E  07AE               	addwf	sprintf@ap^(0+128),f
  2004                           
  2005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  2006  007F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2007  0080  00F3               	movwf	___flge@ff1+3
  2008  0081  0840               	movf	(sprintf@fval+2)^(0+128),w
  2009  0082  00F2               	movwf	___flge@ff1+2
  2010  0083  083F               	movf	(sprintf@fval+1)^(0+128),w
  2011  0084  00F1               	movwf	___flge@ff1+1
  2012  0085  083E               	movf	sprintf@fval^(0+128),w
  2013  0086  00F0               	movwf	___flge@ff1
  2014  0087  3000               	movlw	0
  2015  0088  00F7               	movwf	___flge@ff2+3
  2016  0089  3000               	movlw	0
  2017  008A  00F6               	movwf	___flge@ff2+2
  2018  008B  3000               	movlw	0
  2019  008C  00F5               	movwf	___flge@ff2+1
  2020  008D  3000               	movlw	0
  2021  008E  00F4               	movwf	___flge@ff2
  2022  008F  160A  118A  2288  120A  118A  	fcall	___flge
  2023  0094  1803               	btfsc	3,0
  2024  0095  28B3               	goto	i1l3142
  2025                           
  2026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  2027  0096  1683               	bsf	3,5	;RP0=1, select bank1
  2028  0097  1303               	bcf	3,6	;RP1=0, select bank1
  2029  0098  0841               	movf	(sprintf@fval+3)^(0+128),w
  2030  0099  00F3               	movwf	___flneg@f1+3
  2031  009A  0840               	movf	(sprintf@fval+2)^(0+128),w
  2032  009B  00F2               	movwf	___flneg@f1+2
  2033  009C  083F               	movf	(sprintf@fval+1)^(0+128),w
  2034  009D  00F1               	movwf	___flneg@f1+1
  2035  009E  083E               	movf	sprintf@fval^(0+128),w
  2036  009F  00F0               	movwf	___flneg@f1
  2037  00A0  160A  158A  25B1  120A  118A  	fcall	___flneg
  2038  00A5  0873               	movf	?___flneg+3,w
  2039  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  2040  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  2041  00A8  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2042  00A9  0872               	movf	?___flneg+2,w
  2043  00AA  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2044  00AB  0871               	movf	?___flneg+1,w
  2045  00AC  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2046  00AD  0870               	movf	?___flneg,w
  2047  00AE  00BE               	movwf	sprintf@fval^(0+128)
  2048                           
  2049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  2050  00AF  3003               	movlw	3
  2051  00B0  04AF               	iorwf	sprintf@flag^(0+128),f
  2052  00B1  3000               	movlw	0
  2053  00B2  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2054  00B3                     i1l3142:	
  2055                           
  2056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  2057  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  2058  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  2059  00B5  01B7               	clrf	sprintf@eexp^(0+128)
  2060  00B6  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2061                           
  2062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  2063  00B7  0841               	movf	(sprintf@fval+3)^(0+128),w
  2064  00B8  00F3               	movwf	___fleq@ff1+3
  2065  00B9  0840               	movf	(sprintf@fval+2)^(0+128),w
  2066  00BA  00F2               	movwf	___fleq@ff1+2
  2067  00BB  083F               	movf	(sprintf@fval+1)^(0+128),w
  2068  00BC  00F1               	movwf	___fleq@ff1+1
  2069  00BD  083E               	movf	sprintf@fval^(0+128),w
  2070  00BE  00F0               	movwf	___fleq@ff1
  2071  00BF  3000               	movlw	0
  2072  00C0  00F7               	movwf	___fleq@ff2+3
  2073  00C1  3000               	movlw	0
  2074  00C2  00F6               	movwf	___fleq@ff2+2
  2075  00C3  3000               	movlw	0
  2076  00C4  00F5               	movwf	___fleq@ff2+1
  2077  00C5  3000               	movlw	0
  2078  00C6  00F4               	movwf	___fleq@ff2
  2079  00C7  160A  158A  276E  120A  118A  	fcall	___fleq
  2080  00CC  1803               	btfsc	3,0
  2081  00CD  29B7               	goto	i1l3172
  2082                           
  2083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2084  00CE  1003               	clrc
  2085  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  2086  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  2087  00D1  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2088  00D2  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2089  00D3  3E82               	addlw	130
  2090  00D4  00B7               	movwf	sprintf@eexp^(0+128)
  2091  00D5  30FF               	movlw	255
  2092  00D6  1803               	skipnc
  2093  00D7  3000               	movlw	0
  2094  00D8  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  2095                           
  2096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  2097  00D9  30FF               	movlw	255
  2098  00DA  07B7               	addwf	sprintf@eexp^(0+128),f
  2099  00DB  1803               	skipnc
  2100  00DC  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2101  00DD  30FF               	movlw	255
  2102  00DE  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2103                           
  2104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  2105  00DF  3003               	movlw	3
  2106  00E0  00F0               	movwf	___wmul@multiplier
  2107  00E1  3000               	movlw	0
  2108  00E2  00F1               	movwf	___wmul@multiplier+1
  2109  00E3  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2110  00E4  00F3               	movwf	___wmul@multiplicand+1
  2111  00E5  0837               	movf	sprintf@eexp^(0+128),w
  2112  00E6  00F2               	movwf	___wmul@multiplicand
  2113  00E7  160A  158A  266F  120A  118A  	fcall	___wmul
  2114  00EC  0871               	movf	?___wmul+1,w
  2115  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  2116  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  2117  00EF  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2118  00F0  0870               	movf	?___wmul,w
  2119  00F1  00B7               	movwf	sprintf@eexp^(0+128)
  2120                           
  2121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  2122  00F2  300A               	movlw	10
  2123  00F3  00F7               	movwf	___awdiv@divisor
  2124  00F4  3000               	movlw	0
  2125  00F5  00F8               	movwf	___awdiv@divisor+1
  2126  00F6  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2127  00F7  00FA               	movwf	___awdiv@dividend+1
  2128  00F8  0837               	movf	sprintf@eexp^(0+128),w
  2129  00F9  00F9               	movwf	___awdiv@dividend
  2130  00FA  160A  118A  2101  120A  118A  	fcall	___awdiv
  2131  00FF  0878               	movf	?___awdiv+1,w
  2132  0100  1683               	bsf	3,5	;RP0=1, select bank1
  2133  0101  1303               	bcf	3,6	;RP1=0, select bank1
  2134  0102  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2135  0103  0877               	movf	?___awdiv,w
  2136  0104  00B7               	movwf	sprintf@eexp^(0+128)
  2137                           
  2138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  2139  0105  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  2140  0106  290D               	goto	i1l3158
  2141                           
  2142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  2143  0107  30FF               	movlw	255
  2144  0108  07B7               	addwf	sprintf@eexp^(0+128),f
  2145  0109  1803               	skipnc
  2146  010A  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2147  010B  30FF               	movlw	255
  2148  010C  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2149  010D                     i1l3158:	
  2150                           
  2151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  2152  010D  0337               	decf	sprintf@eexp^(0+128),w
  2153  010E  3AFF               	xorlw	255
  2154  010F  120A  158A  24B7  120A  118A  	fcall	_scale
  2155  0114  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0115  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0116  0843               	movf	?_scale+3,w
  2158  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2159  0118  1303               	bcf	3,6	;RP1=0, select bank1
  2160  0119  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2161  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2162  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2163  011C  0842               	movf	?_scale+2,w
  2164  011D  1683               	bsf	3,5	;RP0=1, select bank1
  2165  011E  1303               	bcf	3,6	;RP1=0, select bank1
  2166  011F  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2167  0120  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0121  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0122  0841               	movf	?_scale+1,w
  2170  0123  1683               	bsf	3,5	;RP0=1, select bank1
  2171  0124  1303               	bcf	3,6	;RP1=0, select bank1
  2172  0125  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2173  0126  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0127  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0128  0840               	movf	?_scale,w
  2176  0129  1683               	bsf	3,5	;RP0=1, select bank1
  2177  012A  1303               	bcf	3,6	;RP1=0, select bank1
  2178  012B  00B9               	movwf	sprintf@tmpval^(0+128)
  2179                           
  2180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  2181  012C  0841               	movf	(sprintf@fval+3)^(0+128),w
  2182  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2183  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2184  012F  00A9               	movwf	___flmul@b+3
  2185  0130  1683               	bsf	3,5	;RP0=1, select bank1
  2186  0131  1303               	bcf	3,6	;RP1=0, select bank1
  2187  0132  0840               	movf	(sprintf@fval+2)^(0+128),w
  2188  0133  1283               	bcf	3,5	;RP0=0, select bank0
  2189  0134  1303               	bcf	3,6	;RP1=0, select bank0
  2190  0135  00A8               	movwf	___flmul@b+2
  2191  0136  1683               	bsf	3,5	;RP0=1, select bank1
  2192  0137  1303               	bcf	3,6	;RP1=0, select bank1
  2193  0138  083F               	movf	(sprintf@fval+1)^(0+128),w
  2194  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2195  013A  1303               	bcf	3,6	;RP1=0, select bank0
  2196  013B  00A7               	movwf	___flmul@b+1
  2197  013C  1683               	bsf	3,5	;RP0=1, select bank1
  2198  013D  1303               	bcf	3,6	;RP1=0, select bank1
  2199  013E  083E               	movf	sprintf@fval^(0+128),w
  2200  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2202  0141  00A6               	movwf	___flmul@b
  2203  0142  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0143  1303               	bcf	3,6	;RP1=0, select bank1
  2205  0144  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2206  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0146  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0147  00AD               	movwf	___flmul@a+3
  2209  0148  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0149  1303               	bcf	3,6	;RP1=0, select bank1
  2211  014A  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2212  014B  1283               	bcf	3,5	;RP0=0, select bank0
  2213  014C  1303               	bcf	3,6	;RP1=0, select bank0
  2214  014D  00AC               	movwf	___flmul@a+2
  2215  014E  1683               	bsf	3,5	;RP0=1, select bank1
  2216  014F  1303               	bcf	3,6	;RP1=0, select bank1
  2217  0150  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2218  0151  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0152  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0153  00AB               	movwf	___flmul@a+1
  2221  0154  1683               	bsf	3,5	;RP0=1, select bank1
  2222  0155  1303               	bcf	3,6	;RP1=0, select bank1
  2223  0156  0839               	movf	sprintf@tmpval^(0+128),w
  2224  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0158  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0159  00AA               	movwf	___flmul@a
  2227  015A  120A  158A  21A2  120A  118A  	fcall	___flmul
  2228  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0160  1303               	bcf	3,6	;RP1=0, select bank0
  2230  0161  0829               	movf	?___flmul+3,w
  2231  0162  1683               	bsf	3,5	;RP0=1, select bank1
  2232  0163  1303               	bcf	3,6	;RP1=0, select bank1
  2233  0164  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2234  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0166  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0167  0828               	movf	?___flmul+2,w
  2237  0168  1683               	bsf	3,5	;RP0=1, select bank1
  2238  0169  1303               	bcf	3,6	;RP1=0, select bank1
  2239  016A  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2240  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2241  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2242  016D  0827               	movf	?___flmul+1,w
  2243  016E  1683               	bsf	3,5	;RP0=1, select bank1
  2244  016F  1303               	bcf	3,6	;RP1=0, select bank1
  2245  0170  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2246  0171  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0172  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0173  0826               	movf	?___flmul,w
  2249  0174  1683               	bsf	3,5	;RP0=1, select bank1
  2250  0175  1303               	bcf	3,6	;RP1=0, select bank1
  2251  0176  00B9               	movwf	sprintf@tmpval^(0+128)
  2252                           
  2253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  2254  0177  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2255  0178  00F3               	movwf	___flge@ff1+3
  2256  0179  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2257  017A  00F2               	movwf	___flge@ff1+2
  2258  017B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2259  017C  00F1               	movwf	___flge@ff1+1
  2260  017D  0839               	movf	sprintf@tmpval^(0+128),w
  2261  017E  00F0               	movwf	___flge@ff1
  2262  017F  303F               	movlw	63
  2263  0180  00F7               	movwf	___flge@ff2+3
  2264  0181  3080               	movlw	128
  2265  0182  00F6               	movwf	___flge@ff2+2
  2266  0183  3000               	movlw	0
  2267  0184  00F5               	movwf	___flge@ff2+1
  2268  0185  3000               	movlw	0
  2269  0186  00F4               	movwf	___flge@ff2
  2270  0187  160A  118A  2288  120A  118A  	fcall	___flge
  2271  018C  1803               	btfsc	3,0
  2272  018D  2996               	goto	i1l3166
  2273                           
  2274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2275  018E  30FF               	movlw	255
  2276  018F  1683               	bsf	3,5	;RP0=1, select bank1
  2277  0190  1303               	bcf	3,6	;RP1=0, select bank1
  2278  0191  07B7               	addwf	sprintf@eexp^(0+128),f
  2279  0192  1803               	skipnc
  2280  0193  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2281  0194  30FF               	movlw	255
  2282  0195  29B6               	goto	L6
  2283  0196                     i1l3166:	
  2284  0196  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0197  1303               	bcf	3,6	;RP1=0, select bank1
  2286  0198  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2287  0199  00F3               	movwf	___flge@ff1+3
  2288  019A  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2289  019B  00F2               	movwf	___flge@ff1+2
  2290  019C  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2291  019D  00F1               	movwf	___flge@ff1+1
  2292  019E  0839               	movf	sprintf@tmpval^(0+128),w
  2293  019F  00F0               	movwf	___flge@ff1
  2294  01A0  3041               	movlw	65
  2295  01A1  00F7               	movwf	___flge@ff2+3
  2296  01A2  3020               	movlw	32
  2297  01A3  00F6               	movwf	___flge@ff2+2
  2298  01A4  3000               	movlw	0
  2299  01A5  00F5               	movwf	___flge@ff2+1
  2300  01A6  3000               	movlw	0
  2301  01A7  00F4               	movwf	___flge@ff2
  2302  01A8  160A  118A  2288  120A  118A  	fcall	___flge
  2303  01AD  1C03               	btfss	3,0
  2304  01AE  29B7               	goto	i1l3172
  2305                           
  2306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  2307  01AF  3001               	movlw	1
  2308  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  2309  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  2310  01B2  07B7               	addwf	sprintf@eexp^(0+128),f
  2311  01B3  1803               	skipnc
  2312  01B4  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2313  01B5  3000               	movlw	0
  2314  01B6                     L6:	
  2315  01B6  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2316  01B7                     i1l3172:	
  2317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  2318                           
  2319                           
  2320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  2321  01B7  3006               	movlw	6
  2322  01B8  160A  118A  25FF  120A  118A  	fcall	_fround
  2323  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2324  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2325  01BF  0843               	movf	?_fround+3,w
  2326  01C0  00D7               	movwf	___fladd@b+3
  2327  01C1  0842               	movf	?_fround+2,w
  2328  01C2  00D6               	movwf	___fladd@b+2
  2329  01C3  0841               	movf	?_fround+1,w
  2330  01C4  00D5               	movwf	___fladd@b+1
  2331  01C5  0840               	movf	?_fround,w
  2332  01C6  00D4               	movwf	___fladd@b
  2333  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2334  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2335  01C9  0841               	movf	(sprintf@fval+3)^(0+128),w
  2336  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2337  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2338  01CC  00DB               	movwf	___fladd@a+3
  2339  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  2340  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  2341  01CF  0840               	movf	(sprintf@fval+2)^(0+128),w
  2342  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2343  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2344  01D2  00DA               	movwf	___fladd@a+2
  2345  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2346  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  2347  01D5  083F               	movf	(sprintf@fval+1)^(0+128),w
  2348  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2349  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2350  01D8  00D9               	movwf	___fladd@a+1
  2351  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  2352  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  2353  01DB  083E               	movf	sprintf@fval^(0+128),w
  2354  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2355  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  2356  01DE  00D8               	movwf	___fladd@a
  2357  01DF  120A  118A  258F  120A  118A  	fcall	___fladd
  2358  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2359  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2360  01E6  0857               	movf	?___fladd+3,w
  2361  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  2362  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  2363  01E9  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2364  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2365  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2366  01EC  0856               	movf	?___fladd+2,w
  2367  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2368  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2369  01EF  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2370  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2371  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2372  01F2  0855               	movf	?___fladd+1,w
  2373  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2374  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2375  01F5  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2376  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2377  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2378  01F8  0854               	movf	?___fladd,w
  2379  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2380  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2381  01FB  00BE               	movwf	sprintf@fval^(0+128)
  2382                           
  2383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2384  01FC  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2385  01FD  3A80               	xorlw	128
  2386  01FE  00FF               	movwf	127
  2387  01FF  3080               	movlw	128
  2388  0200  027F               	subwf	127,w
  2389  0201  1D03               	skipz
  2390  0202  2A05               	goto	u542_25
  2391  0203  300A               	movlw	10
  2392  0204  0237               	subwf	sprintf@eexp^(0+128),w
  2393  0205                     u542_25:	
  2394  0205  1803               	skipnc
  2395  0206  2A52               	goto	i1l3182
  2396  0207  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0208  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0209  0841               	movf	(sprintf@fval+3)^(0+128),w
  2399  020A  00F3               	movwf	___fleq@ff1+3
  2400  020B  0840               	movf	(sprintf@fval+2)^(0+128),w
  2401  020C  00F2               	movwf	___fleq@ff1+2
  2402  020D  083F               	movf	(sprintf@fval+1)^(0+128),w
  2403  020E  00F1               	movwf	___fleq@ff1+1
  2404  020F  083E               	movf	sprintf@fval^(0+128),w
  2405  0210  00F0               	movwf	___fleq@ff1
  2406  0211  3000               	movlw	0
  2407  0212  00F7               	movwf	___fleq@ff2+3
  2408  0213  3000               	movlw	0
  2409  0214  00F6               	movwf	___fleq@ff2+2
  2410  0215  3000               	movlw	0
  2411  0216  00F5               	movwf	___fleq@ff2+1
  2412  0217  3000               	movlw	0
  2413  0218  00F4               	movwf	___fleq@ff2
  2414  0219  160A  158A  276E  120A  118A  	fcall	___fleq
  2415  021E  1803               	btfsc	3,0
  2416  021F  2ABB               	goto	i1l3196
  2417  0220  1683               	bsf	3,5	;RP0=1, select bank1
  2418  0221  1303               	bcf	3,6	;RP1=0, select bank1
  2419  0222  0841               	movf	(sprintf@fval+3)^(0+128),w
  2420  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0225  00D6               	movwf	___fltol@f1+3
  2423  0226  1683               	bsf	3,5	;RP0=1, select bank1
  2424  0227  1303               	bcf	3,6	;RP1=0, select bank1
  2425  0228  0840               	movf	(sprintf@fval+2)^(0+128),w
  2426  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2427  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2428  022B  00D5               	movwf	___fltol@f1+2
  2429  022C  1683               	bsf	3,5	;RP0=1, select bank1
  2430  022D  1303               	bcf	3,6	;RP1=0, select bank1
  2431  022E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2432  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0231  00D4               	movwf	___fltol@f1+1
  2435  0232  1683               	bsf	3,5	;RP0=1, select bank1
  2436  0233  1303               	bcf	3,6	;RP1=0, select bank1
  2437  0234  083E               	movf	sprintf@fval^(0+128),w
  2438  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0237  00D3               	movwf	___fltol@f1
  2441  0238  160A  118A  221B  120A  118A  	fcall	___fltol
  2442  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2443  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2444  023F  0856               	movf	?___fltol+3,w
  2445  0240  0455               	iorwf	?___fltol+2,w
  2446  0241  0454               	iorwf	?___fltol+1,w
  2447  0242  0453               	iorwf	?___fltol,w
  2448  0243  1D03               	skipz
  2449  0244  2ABB               	goto	i1l3196
  2450  0245  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0246  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0247  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2453  0248  3A80               	xorlw	128
  2454  0249  00FF               	movwf	127
  2455  024A  3080               	movlw	128
  2456  024B  027F               	subwf	127,w
  2457  024C  1D03               	skipz
  2458  024D  2A50               	goto	u545_25
  2459  024E  3002               	movlw	2
  2460  024F  0237               	subwf	sprintf@eexp^(0+128),w
  2461  0250                     u545_25:	
  2462  0250  1C03               	skipc
  2463  0251  2ABB               	goto	i1l3196
  2464  0252                     i1l3182:	
  2465                           
  2466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  2467  0252  1683               	bsf	3,5	;RP0=1, select bank1
  2468  0253  1303               	bcf	3,6	;RP1=0, select bank1
  2469  0254  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2470  0255  00F3               	movwf	___flge@ff1+3
  2471  0256  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2472  0257  00F2               	movwf	___flge@ff1+2
  2473  0258  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2474  0259  00F1               	movwf	___flge@ff1+1
  2475  025A  0839               	movf	sprintf@tmpval^(0+128),w
  2476  025B  00F0               	movwf	___flge@ff1
  2477  025C  3040               	movlw	64
  2478  025D  00F7               	movwf	___flge@ff2+3
  2479  025E  3089               	movlw	137
  2480  025F  00F6               	movwf	___flge@ff2+2
  2481  0260  3070               	movlw	112
  2482  0261  00F5               	movwf	___flge@ff2+1
  2483  0262  305F               	movlw	95
  2484  0263  00F4               	movwf	___flge@ff2
  2485  0264  160A  118A  2288  120A  118A  	fcall	___flge
  2486  0269  1803               	btfsc	3,0
  2487  026A  2A6D               	goto	i1l3186
  2488                           
  2489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2490  026B  30F7               	movlw	247
  2491  026C  2A6E               	goto	L1
  2492  026D                     i1l3186:	
  2493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  2494                           
  2495                           
  2496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2497  026D  30F8               	movlw	248
  2498  026E                     L1:	
  2499  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2500  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2501  0270  07B7               	addwf	sprintf@eexp^(0+128),f
  2502  0271  1803               	skipnc
  2503  0272  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2504  0273  30FF               	movlw	255
  2505  0274  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2506                           
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2508  0275  0837               	movf	sprintf@eexp^(0+128),w
  2509  0276  120A  158A  24B7  120A  118A  	fcall	_scale
  2510  027B  1283               	bcf	3,5	;RP0=0, select bank0
  2511  027C  1303               	bcf	3,6	;RP1=0, select bank0
  2512  027D  0843               	movf	?_scale+3,w
  2513  027E  1683               	bsf	3,5	;RP0=1, select bank1
  2514  027F  1303               	bcf	3,6	;RP1=0, select bank1
  2515  0280  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2516  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0283  0842               	movf	?_scale+2,w
  2519  0284  1683               	bsf	3,5	;RP0=1, select bank1
  2520  0285  1303               	bcf	3,6	;RP1=0, select bank1
  2521  0286  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2522  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0289  0841               	movf	?_scale+1,w
  2525  028A  1683               	bsf	3,5	;RP0=1, select bank1
  2526  028B  1303               	bcf	3,6	;RP1=0, select bank1
  2527  028C  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2528  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2529  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2530  028F  0840               	movf	?_scale,w
  2531  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2532  0291  1303               	bcf	3,6	;RP1=0, select bank1
  2533  0292  00B9               	movwf	sprintf@tmpval^(0+128)
  2534  0293  0841               	movf	(sprintf@fval+3)^(0+128),w
  2535  0294  00F3               	movwf	__div_to_l_@f1+3
  2536  0295  0840               	movf	(sprintf@fval+2)^(0+128),w
  2537  0296  00F2               	movwf	__div_to_l_@f1+2
  2538  0297  083F               	movf	(sprintf@fval+1)^(0+128),w
  2539  0298  00F1               	movwf	__div_to_l_@f1+1
  2540  0299  083E               	movf	sprintf@fval^(0+128),w
  2541  029A  00F0               	movwf	__div_to_l_@f1
  2542  029B  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2543  029C  00F7               	movwf	__div_to_l_@f2+3
  2544  029D  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2545  029E  00F6               	movwf	__div_to_l_@f2+2
  2546  029F  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2547  02A0  00F5               	movwf	__div_to_l_@f2+1
  2548  02A1  0839               	movf	sprintf@tmpval^(0+128),w
  2549  02A2  00F4               	movwf	__div_to_l_@f2
  2550  02A3  120A  158A  20F8  120A  118A  	fcall	__div_to_l_
  2551  02A8  0873               	movf	?__div_to_l_+3,w
  2552  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2553  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2554  02AB  00B6               	movwf	(sprintf@val+3)^(0+128)
  2555  02AC  0872               	movf	?__div_to_l_+2,w
  2556  02AD  00B5               	movwf	(sprintf@val+2)^(0+128)
  2557  02AE  0871               	movf	?__div_to_l_+1,w
  2558  02AF  00B4               	movwf	(sprintf@val+1)^(0+128)
  2559  02B0  0870               	movf	?__div_to_l_,w
  2560  02B1  00B3               	movwf	sprintf@val^(0+128)
  2561                           
  2562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  2563  02B2  3000               	movlw	0
  2564  02B3  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2565  02B4  3000               	movlw	0
  2566  02B5  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2567  02B6  3000               	movlw	0
  2568  02B7  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2569  02B8  3000               	movlw	0
  2570  02B9  00BE               	movwf	sprintf@fval^(0+128)
  2571                           
  2572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  2573  02BA  2B3F               	goto	i1l3202
  2574  02BB                     i1l3196:	
  2575                           
  2576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  2577  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2578  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2579  02BD  0841               	movf	(sprintf@fval+3)^(0+128),w
  2580  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2581  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2582  02C0  00D6               	movwf	___fltol@f1+3
  2583  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2584  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2585  02C3  0840               	movf	(sprintf@fval+2)^(0+128),w
  2586  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2587  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2588  02C6  00D5               	movwf	___fltol@f1+2
  2589  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2590  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2591  02C9  083F               	movf	(sprintf@fval+1)^(0+128),w
  2592  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2593  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2594  02CC  00D4               	movwf	___fltol@f1+1
  2595  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2596  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2597  02CF  083E               	movf	sprintf@fval^(0+128),w
  2598  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2599  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2600  02D2  00D3               	movwf	___fltol@f1
  2601  02D3  160A  118A  221B  120A  118A  	fcall	___fltol
  2602  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2603  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2604  02DA  0856               	movf	?___fltol+3,w
  2605  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2606  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2607  02DD  00B6               	movwf	(sprintf@val+3)^(0+128)
  2608  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2609  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2610  02E0  0855               	movf	?___fltol+2,w
  2611  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2612  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  2613  02E3  00B5               	movwf	(sprintf@val+2)^(0+128)
  2614  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2615  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2616  02E6  0854               	movf	?___fltol+1,w
  2617  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2618  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2619  02E9  00B4               	movwf	(sprintf@val+1)^(0+128)
  2620  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2621  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2622  02EC  0853               	movf	?___fltol,w
  2623  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  2624  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  2625  02EF  00B3               	movwf	sprintf@val^(0+128)
  2626                           
  2627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  2628  02F0  0836               	movf	(sprintf@val+3)^(0+128),w
  2629  02F1  00F5               	movwf	___xxtofl@val+3
  2630  02F2  0835               	movf	(sprintf@val+2)^(0+128),w
  2631  02F3  00F4               	movwf	___xxtofl@val+2
  2632  02F4  0834               	movf	(sprintf@val+1)^(0+128),w
  2633  02F5  00F3               	movwf	___xxtofl@val+1
  2634  02F6  0833               	movf	sprintf@val^(0+128),w
  2635  02F7  00F2               	movwf	___xxtofl@val
  2636  02F8  3000               	movlw	0
  2637  02F9  160A  118A  23B7  120A  118A  	fcall	___xxtofl
  2638  02FE  0875               	movf	?___xxtofl+3,w
  2639  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2640  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2641  0301  00EB               	movwf	___flsub@a+3
  2642  0302  0874               	movf	?___xxtofl+2,w
  2643  0303  00EA               	movwf	___flsub@a+2
  2644  0304  0873               	movf	?___xxtofl+1,w
  2645  0305  00E9               	movwf	___flsub@a+1
  2646  0306  0872               	movf	?___xxtofl,w
  2647  0307  00E8               	movwf	___flsub@a
  2648  0308  1683               	bsf	3,5	;RP0=1, select bank1
  2649  0309  1303               	bcf	3,6	;RP1=0, select bank1
  2650  030A  0841               	movf	(sprintf@fval+3)^(0+128),w
  2651  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2652  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2653  030D  00EF               	movwf	___flsub@b+3
  2654  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2655  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2656  0310  0840               	movf	(sprintf@fval+2)^(0+128),w
  2657  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0313  00EE               	movwf	___flsub@b+2
  2660  0314  1683               	bsf	3,5	;RP0=1, select bank1
  2661  0315  1303               	bcf	3,6	;RP1=0, select bank1
  2662  0316  083F               	movf	(sprintf@fval+1)^(0+128),w
  2663  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0319  00ED               	movwf	___flsub@b+1
  2666  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2667  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2668  031C  083E               	movf	sprintf@fval^(0+128),w
  2669  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2670  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2671  031F  00EC               	movwf	___flsub@b
  2672  0320  160A  158A  2690  120A  118A  	fcall	___flsub
  2673  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0327  086B               	movf	?___flsub+3,w
  2676  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2677  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2678  032A  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2679  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2680  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2681  032D  086A               	movf	?___flsub+2,w
  2682  032E  1683               	bsf	3,5	;RP0=1, select bank1
  2683  032F  1303               	bcf	3,6	;RP1=0, select bank1
  2684  0330  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2685  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2686  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2687  0333  0869               	movf	?___flsub+1,w
  2688  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2689  0335  1303               	bcf	3,6	;RP1=0, select bank1
  2690  0336  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2691  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0339  0868               	movf	?___flsub,w
  2694  033A  1683               	bsf	3,5	;RP0=1, select bank1
  2695  033B  1303               	bcf	3,6	;RP1=0, select bank1
  2696  033C  00BE               	movwf	sprintf@fval^(0+128)
  2697                           
  2698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  2699  033D  01B7               	clrf	sprintf@eexp^(0+128)
  2700  033E  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2701  033F                     i1l3202:	
  2702                           
  2703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2704  033F  01C2               	clrf	sprintf@c^(0+128)
  2705  0340  0AC2               	incf	sprintf@c^(0+128),f
  2706  0341                     i1l3208:	
  2707                           
  2708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  2709  0341  0842               	movf	sprintf@c^(0+128),w
  2710  0342  00A5               	movwf	??_sprintf^(0+128)
  2711  0343  3001               	movlw	1
  2712  0344                     u547_25:	
  2713  0344  1003               	clrc
  2714  0345  0DA5               	rlf	??_sprintf^(0+128),f
  2715  0346  3EFF               	addlw	-1
  2716  0347  1D03               	skipz
  2717  0348  2B44               	goto	u547_25
  2718  0349  1003               	clrc
  2719  034A  0D25               	rlf	??_sprintf^(0+128),w
  2720  034B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2721  034C  0084               	movwf	4
  2722  034D  160A  118A  2000  120A  118A  	fcall	stringdir
  2723  0352  00A6               	movwf	(??_sprintf+1)^(0+128)
  2724  0353  160A  118A  2000  120A  118A  	fcall	stringdir
  2725  0358  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2726  0359  160A  118A  2000  120A  118A  	fcall	stringdir
  2727  035E  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2728  035F  160A  118A  2000  120A  118A  	fcall	stringdir
  2729  0364  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2730  0365  0829               	movf	(??_sprintf+4)^(0+128),w
  2731  0366  0236               	subwf	(sprintf@val+3)^(0+128),w
  2732  0367  1D03               	skipz
  2733  0368  2B73               	goto	u548_25
  2734  0369  0828               	movf	(??_sprintf+3)^(0+128),w
  2735  036A  0235               	subwf	(sprintf@val+2)^(0+128),w
  2736  036B  1D03               	skipz
  2737  036C  2B73               	goto	u548_25
  2738  036D  0827               	movf	(??_sprintf+2)^(0+128),w
  2739  036E  0234               	subwf	(sprintf@val+1)^(0+128),w
  2740  036F  1D03               	skipz
  2741  0370  2B73               	goto	u548_25
  2742  0371  0826               	movf	(??_sprintf+1)^(0+128),w
  2743  0372  0233               	subwf	sprintf@val^(0+128),w
  2744  0373                     u548_25:	
  2745  0373  1C03               	btfss	3,0
  2746  0374  2B7D               	goto	i1l3214
  2747  0375  3001               	movlw	1
  2748  0376  00A5               	movwf	??_sprintf^(0+128)
  2749  0377  0825               	movf	??_sprintf^(0+128),w
  2750  0378  07C2               	addwf	sprintf@c^(0+128),f
  2751  0379  300A               	movlw	10
  2752  037A  0642               	xorwf	sprintf@c^(0+128),w
  2753  037B  1D03               	btfss	3,2
  2754  037C  2B41               	goto	i1l3208
  2755  037D                     i1l3214:	
  2756                           
  2757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  2758  037D  3003               	movlw	3
  2759  037E  052F               	andwf	sprintf@flag^(0+128),w
  2760  037F  00A5               	movwf	??_sprintf^(0+128)
  2761  0380  3000               	movlw	0
  2762  0381  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2763  0382  00A6               	movwf	(??_sprintf+1)^(0+128)
  2764  0383  0825               	movf	??_sprintf^(0+128),w
  2765  0384  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2766  0385  1903               	btfsc	3,2
  2767  0386  2B92               	goto	i1l267
  2768                           
  2769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  2770  0387  302D               	movlw	45
  2771  0388                     L2:	
  2772  0388  00A5               	movwf	??_sprintf^(0+128)
  2773  0389  083D               	movf	sprintf@sp^(0+128),w
  2774  038A  0084               	movwf	4
  2775  038B  0825               	movf	??_sprintf^(0+128),w
  2776  038C  1383               	bcf	3,7	;select IRP bank0
  2777  038D  0080               	movwf	0
  2778  038E  3001               	movlw	1
  2779  038F  00A5               	movwf	??_sprintf^(0+128)
  2780  0390  0825               	movf	??_sprintf^(0+128),w
  2781  0391  07BD               	addwf	sprintf@sp^(0+128),f
  2782  0392                     i1l267:	
  2783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  2784                           
  2785                           
  2786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  2787  0392  3001               	movlw	1
  2788  0393  02C2               	subwf	sprintf@c^(0+128),f
  2789  0394  0A42               	incf	sprintf@c^(0+128),w
  2790  0395  1903               	btfsc	3,2
  2791  0396  2C07               	goto	i1l3232
  2792                           
  2793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  2794  0397  0842               	movf	sprintf@c^(0+128),w
  2795  0398  00A5               	movwf	??_sprintf^(0+128)
  2796  0399  3001               	movlw	1
  2797  039A                     u551_25:	
  2798  039A  1003               	clrc
  2799  039B  0DA5               	rlf	??_sprintf^(0+128),f
  2800  039C  3EFF               	addlw	-1
  2801  039D  1D03               	skipz
  2802  039E  2B9A               	goto	u551_25
  2803  039F  1003               	clrc
  2804  03A0  0D25               	rlf	??_sprintf^(0+128),w
  2805  03A1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2806  03A2  0084               	movwf	4
  2807  03A3  160A  118A  2000  120A  118A  	fcall	stringdir
  2808  03A8  00F0               	movwf	___lldiv@divisor
  2809  03A9  160A  118A  2000  120A  118A  	fcall	stringdir
  2810  03AE  00F1               	movwf	___lldiv@divisor+1
  2811  03AF  160A  118A  2000  120A  118A  	fcall	stringdir
  2812  03B4  00F2               	movwf	___lldiv@divisor+2
  2813  03B5  160A  118A  2000  120A  118A  	fcall	stringdir
  2814  03BA  00F3               	movwf	___lldiv@divisor+3
  2815  03BB  0836               	movf	(sprintf@val+3)^(0+128),w
  2816  03BC  00F7               	movwf	___lldiv@dividend+3
  2817  03BD  0835               	movf	(sprintf@val+2)^(0+128),w
  2818  03BE  00F6               	movwf	___lldiv@dividend+2
  2819  03BF  0834               	movf	(sprintf@val+1)^(0+128),w
  2820  03C0  00F5               	movwf	___lldiv@dividend+1
  2821  03C1  0833               	movf	sprintf@val^(0+128),w
  2822  03C2  00F4               	movwf	___lldiv@dividend
  2823  03C3  160A  118A  215C  120A  118A  	fcall	___lldiv
  2824  03C8  0873               	movf	?___lldiv+3,w
  2825  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2826  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  2827  03CB  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2828  03CC  0872               	movf	?___lldiv+2,w
  2829  03CD  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2830  03CE  0871               	movf	?___lldiv+1,w
  2831  03CF  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2832  03D0  0870               	movf	?___lldiv,w
  2833  03D1  00B9               	movwf	sprintf@tmpval^(0+128)
  2834                           
  2835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  2836  03D2  3000               	movlw	0
  2837  03D3  00F3               	movwf	___llmod@divisor+3
  2838  03D4  3000               	movlw	0
  2839  03D5  00F2               	movwf	___llmod@divisor+2
  2840  03D6  3000               	movlw	0
  2841  03D7  00F1               	movwf	___llmod@divisor+1
  2842  03D8  300A               	movlw	10
  2843  03D9  00F0               	movwf	___llmod@divisor
  2844  03DA  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2845  03DB  00F7               	movwf	___llmod@dividend+3
  2846  03DC  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2847  03DD  00F6               	movwf	___llmod@dividend+2
  2848  03DE  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2849  03DF  00F5               	movwf	___llmod@dividend+1
  2850  03E0  0839               	movf	sprintf@tmpval^(0+128),w
  2851  03E1  00F4               	movwf	___llmod@dividend
  2852  03E2  120A  158A  2003  120A  118A  	fcall	___llmod
  2853  03E7  0873               	movf	?___llmod+3,w
  2854  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2855  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2856  03EA  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2857  03EB  0872               	movf	?___llmod+2,w
  2858  03EC  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2859  03ED  0871               	movf	?___llmod+1,w
  2860  03EE  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2861  03EF  0870               	movf	?___llmod,w
  2862  03F0  00B9               	movwf	sprintf@tmpval^(0+128)
  2863                           
  2864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2865  03F1  0839               	movf	sprintf@tmpval^(0+128),w
  2866  03F2  3E30               	addlw	48
  2867  03F3  2B88               	goto	L2
  2868  03F4                     i1l3226:	
  2869                           
  2870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  2871  03F4  3030               	movlw	48
  2872  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2873  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  2874  03F7  00A5               	movwf	??_sprintf^(0+128)
  2875  03F8  083D               	movf	sprintf@sp^(0+128),w
  2876  03F9  0084               	movwf	4
  2877  03FA  0825               	movf	??_sprintf^(0+128),w
  2878  03FB  1383               	bcf	3,7	;select IRP bank0
  2879  03FC  0080               	movwf	0
  2880  03FD  3001               	movlw	1
  2881  03FE  00A5               	movwf	??_sprintf^(0+128)
  2882  03FF  0825               	movf	??_sprintf^(0+128),w
  2883  0400  07BD               	addwf	sprintf@sp^(0+128),f
  2884                           
  2885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  2886  0401  30FF               	movlw	255
  2887  0402  07B7               	addwf	sprintf@eexp^(0+128),f
  2888  0403  1803               	skipnc
  2889  0404  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2890  0405  30FF               	movlw	255
  2891  0406  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2892  0407                     i1l3232:	
  2893                           
  2894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  2895  0407  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2896  0408  3A80               	xorlw	128
  2897  0409  00FF               	movwf	127
  2898  040A  3080               	movlw	128
  2899  040B  027F               	subwf	127,w
  2900  040C  1D03               	skipz
  2901  040D  2C10               	goto	u553_25
  2902  040E  3001               	movlw	1
  2903  040F  0237               	subwf	sprintf@eexp^(0+128),w
  2904  0410                     u553_25:	
  2905  0410  1803               	skipnc
  2906  0411  2BF4               	goto	i1l3226
  2907                           
  2908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2909  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2910  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2911  0414  0832               	movf	(sprintf@prec+1)^(0+128),w
  2912  0415  3A80               	xorlw	128
  2913  0416  00FF               	movwf	127
  2914  0417  3080               	movlw	128
  2915  0418  027F               	subwf	127,w
  2916  0419  1D03               	skipz
  2917  041A  2C1D               	goto	u554_25
  2918  041B  3009               	movlw	9
  2919  041C  0231               	subwf	sprintf@prec^(0+128),w
  2920  041D                     u554_25:	
  2921  041D  1C03               	skipc
  2922  041E  2C23               	goto	i1l3238
  2923                           
  2924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2925  041F  3008               	movlw	8
  2926  0420  1683               	bsf	3,5	;RP0=1, select bank1
  2927  0421  1303               	bcf	3,6	;RP1=0, select bank1
  2928  0422  2C26               	goto	L3
  2929  0423                     i1l3238:	
  2930                           
  2931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  2932  0423  1683               	bsf	3,5	;RP0=1, select bank1
  2933  0424  1303               	bcf	3,6	;RP1=0, select bank1
  2934  0425  0831               	movf	sprintf@prec^(0+128),w
  2935  0426                     L3:	
  2936  0426  00A5               	movwf	??_sprintf^(0+128)
  2937  0427  0825               	movf	??_sprintf^(0+128),w
  2938  0428  00C2               	movwf	sprintf@c^(0+128)
  2939                           
  2940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  2941  0429  0842               	movf	sprintf@c^(0+128),w
  2942  042A  00A5               	movwf	??_sprintf^(0+128)
  2943  042B  01A6               	clrf	(??_sprintf^(0+128)+1)
  2944  042C  0825               	movf	??_sprintf^(0+128),w
  2945  042D  02B1               	subwf	sprintf@prec^(0+128),f
  2946  042E  0826               	movf	(??_sprintf+1)^(0+128),w
  2947  042F  1C03               	skipc
  2948  0430  03B2               	decf	(sprintf@prec+1)^(0+128),f
  2949  0431  02B2               	subwf	(sprintf@prec+1)^(0+128),f
  2950                           
  2951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  2952  0432  0842               	movf	sprintf@c^(0+128),w
  2953  0433  1903               	btfsc	3,2
  2954  0434  2C40               	goto	i1l3246
  2955                           
  2956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  2957  0435  302E               	movlw	46
  2958  0436  00A5               	movwf	??_sprintf^(0+128)
  2959  0437  083D               	movf	sprintf@sp^(0+128),w
  2960  0438  0084               	movwf	4
  2961  0439  0825               	movf	??_sprintf^(0+128),w
  2962  043A  1383               	bcf	3,7	;select IRP bank0
  2963  043B  0080               	movwf	0
  2964  043C  3001               	movlw	1
  2965  043D  00A5               	movwf	??_sprintf^(0+128)
  2966  043E  0825               	movf	??_sprintf^(0+128),w
  2967  043F  07BD               	addwf	sprintf@sp^(0+128),f
  2968  0440                     i1l3246:	
  2969                           
  2970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2971  0440  0842               	movf	sprintf@c^(0+128),w
  2972  0441  120A  158A  24B7  120A  118A  	fcall	_scale
  2973  0446  1283               	bcf	3,5	;RP0=0, select bank0
  2974  0447  1303               	bcf	3,6	;RP1=0, select bank0
  2975  0448  0843               	movf	?_scale+3,w
  2976  0449  1683               	bsf	3,5	;RP0=1, select bank1
  2977  044A  1303               	bcf	3,6	;RP1=0, select bank1
  2978  044B  00AD               	movwf	(_sprintf$808+3)^(0+128)
  2979  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2980  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2981  044E  0842               	movf	?_scale+2,w
  2982  044F  1683               	bsf	3,5	;RP0=1, select bank1
  2983  0450  1303               	bcf	3,6	;RP1=0, select bank1
  2984  0451  00AC               	movwf	(_sprintf$808+2)^(0+128)
  2985  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0454  0841               	movf	?_scale+1,w
  2988  0455  1683               	bsf	3,5	;RP0=1, select bank1
  2989  0456  1303               	bcf	3,6	;RP1=0, select bank1
  2990  0457  00AB               	movwf	(_sprintf$808+1)^(0+128)
  2991  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2993  045A  0840               	movf	?_scale,w
  2994  045B  1683               	bsf	3,5	;RP0=1, select bank1
  2995  045C  1303               	bcf	3,6	;RP1=0, select bank1
  2996  045D  00AA               	movwf	_sprintf$808^(0+128)
  2997                           
  2998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2999  045E  082D               	movf	(_sprintf$808+3)^(0+128),w
  3000  045F  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0460  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0461  00AD               	movwf	___flmul@a+3
  3003  0462  1683               	bsf	3,5	;RP0=1, select bank1
  3004  0463  1303               	bcf	3,6	;RP1=0, select bank1
  3005  0464  082C               	movf	(_sprintf$808+2)^(0+128),w
  3006  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0467  00AC               	movwf	___flmul@a+2
  3009  0468  1683               	bsf	3,5	;RP0=1, select bank1
  3010  0469  1303               	bcf	3,6	;RP1=0, select bank1
  3011  046A  082B               	movf	(_sprintf$808+1)^(0+128),w
  3012  046B  1283               	bcf	3,5	;RP0=0, select bank0
  3013  046C  1303               	bcf	3,6	;RP1=0, select bank0
  3014  046D  00AB               	movwf	___flmul@a+1
  3015  046E  1683               	bsf	3,5	;RP0=1, select bank1
  3016  046F  1303               	bcf	3,6	;RP1=0, select bank1
  3017  0470  082A               	movf	_sprintf$808^(0+128),w
  3018  0471  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0472  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0473  00AA               	movwf	___flmul@a
  3021  0474  1683               	bsf	3,5	;RP0=1, select bank1
  3022  0475  1303               	bcf	3,6	;RP1=0, select bank1
  3023  0476  0841               	movf	(sprintf@fval+3)^(0+128),w
  3024  0477  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0478  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0479  00A9               	movwf	___flmul@b+3
  3027  047A  1683               	bsf	3,5	;RP0=1, select bank1
  3028  047B  1303               	bcf	3,6	;RP1=0, select bank1
  3029  047C  0840               	movf	(sprintf@fval+2)^(0+128),w
  3030  047D  1283               	bcf	3,5	;RP0=0, select bank0
  3031  047E  1303               	bcf	3,6	;RP1=0, select bank0
  3032  047F  00A8               	movwf	___flmul@b+2
  3033  0480  1683               	bsf	3,5	;RP0=1, select bank1
  3034  0481  1303               	bcf	3,6	;RP1=0, select bank1
  3035  0482  083F               	movf	(sprintf@fval+1)^(0+128),w
  3036  0483  1283               	bcf	3,5	;RP0=0, select bank0
  3037  0484  1303               	bcf	3,6	;RP1=0, select bank0
  3038  0485  00A7               	movwf	___flmul@b+1
  3039  0486  1683               	bsf	3,5	;RP0=1, select bank1
  3040  0487  1303               	bcf	3,6	;RP1=0, select bank1
  3041  0488  083E               	movf	sprintf@fval^(0+128),w
  3042  0489  1283               	bcf	3,5	;RP0=0, select bank0
  3043  048A  1303               	bcf	3,6	;RP1=0, select bank0
  3044  048B  00A6               	movwf	___flmul@b
  3045  048C  120A  158A  21A2  120A  118A  	fcall	___flmul
  3046  0491  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0492  1303               	bcf	3,6	;RP1=0, select bank0
  3048  0493  0829               	movf	?___flmul+3,w
  3049  0494  00D6               	movwf	___fltol@f1+3
  3050  0495  0828               	movf	?___flmul+2,w
  3051  0496  00D5               	movwf	___fltol@f1+2
  3052  0497  0827               	movf	?___flmul+1,w
  3053  0498  00D4               	movwf	___fltol@f1+1
  3054  0499  0826               	movf	?___flmul,w
  3055  049A  00D3               	movwf	___fltol@f1
  3056  049B  160A  118A  221B  120A  118A  	fcall	___fltol
  3057  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  3058  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  3059  04A2  0856               	movf	?___fltol+3,w
  3060  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  3061  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  3062  04A5  00B6               	movwf	(sprintf@val+3)^(0+128)
  3063  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  3064  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  3065  04A8  0855               	movf	?___fltol+2,w
  3066  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  3067  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  3068  04AB  00B5               	movwf	(sprintf@val+2)^(0+128)
  3069  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  3070  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  3071  04AE  0854               	movf	?___fltol+1,w
  3072  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  3073  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  3074  04B1  00B4               	movwf	(sprintf@val+1)^(0+128)
  3075  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  3076  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  3077  04B4  0853               	movf	?___fltol,w
  3078  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  3079  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  3080  04B7                     L4:	
  3081  04B7  00B3               	movwf	sprintf@val^(0+128)
  3082                           
  3083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  3084  04B8  3001               	movlw	1
  3085  04B9  02C2               	subwf	sprintf@c^(0+128),f
  3086  04BA  0A42               	incf	sprintf@c^(0+128),w
  3087  04BB  1903               	btfsc	3,2
  3088  04BC  2D6F               	goto	i1l3266
  3089                           
  3090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  3091                           
  3092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  3093  04BD  0842               	movf	sprintf@c^(0+128),w
  3094  04BE  00A5               	movwf	??_sprintf^(0+128)
  3095  04BF  3001               	movlw	1
  3096  04C0                     u556_25:	
  3097  04C0  1003               	clrc
  3098  04C1  0DA5               	rlf	??_sprintf^(0+128),f
  3099  04C2  3EFF               	addlw	-1
  3100  04C3  1D03               	skipz
  3101  04C4  2CC0               	goto	u556_25
  3102  04C5  1003               	clrc
  3103  04C6  0D25               	rlf	??_sprintf^(0+128),w
  3104  04C7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3105  04C8  0084               	movwf	4
  3106  04C9  160A  118A  2000  120A  118A  	fcall	stringdir
  3107  04CE  00F0               	movwf	___lldiv@divisor
  3108  04CF  160A  118A  2000  120A  118A  	fcall	stringdir
  3109  04D4  00F1               	movwf	___lldiv@divisor+1
  3110  04D5  160A  118A  2000  120A  118A  	fcall	stringdir
  3111  04DA  00F2               	movwf	___lldiv@divisor+2
  3112  04DB  160A  118A  2000  120A  118A  	fcall	stringdir
  3113  04E0  00F3               	movwf	___lldiv@divisor+3
  3114  04E1  0836               	movf	(sprintf@val+3)^(0+128),w
  3115  04E2  00F7               	movwf	___lldiv@dividend+3
  3116  04E3  0835               	movf	(sprintf@val+2)^(0+128),w
  3117  04E4  00F6               	movwf	___lldiv@dividend+2
  3118  04E5  0834               	movf	(sprintf@val+1)^(0+128),w
  3119  04E6  00F5               	movwf	___lldiv@dividend+1
  3120  04E7  0833               	movf	sprintf@val^(0+128),w
  3121  04E8  00F4               	movwf	___lldiv@dividend
  3122  04E9  160A  118A  215C  120A  118A  	fcall	___lldiv
  3123  04EE  0873               	movf	?___lldiv+3,w
  3124  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  3125  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  3126  04F1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3127  04F2  0872               	movf	?___lldiv+2,w
  3128  04F3  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3129  04F4  0871               	movf	?___lldiv+1,w
  3130  04F5  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3131  04F6  0870               	movf	?___lldiv,w
  3132  04F7  00B9               	movwf	sprintf@tmpval^(0+128)
  3133                           
  3134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  3135  04F8  3000               	movlw	0
  3136  04F9  00F3               	movwf	___llmod@divisor+3
  3137  04FA  3000               	movlw	0
  3138  04FB  00F2               	movwf	___llmod@divisor+2
  3139  04FC  3000               	movlw	0
  3140  04FD  00F1               	movwf	___llmod@divisor+1
  3141  04FE  300A               	movlw	10
  3142  04FF  00F0               	movwf	___llmod@divisor
  3143  0500  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3144  0501  00F7               	movwf	___llmod@dividend+3
  3145  0502  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3146  0503  00F6               	movwf	___llmod@dividend+2
  3147  0504  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3148  0505  00F5               	movwf	___llmod@dividend+1
  3149  0506  0839               	movf	sprintf@tmpval^(0+128),w
  3150  0507  00F4               	movwf	___llmod@dividend
  3151  0508  120A  158A  2003  120A  118A  	fcall	___llmod
  3152  050D  0873               	movf	?___llmod+3,w
  3153  050E  1683               	bsf	3,5	;RP0=1, select bank1
  3154  050F  1303               	bcf	3,6	;RP1=0, select bank1
  3155  0510  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3156  0511  0872               	movf	?___llmod+2,w
  3157  0512  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3158  0513  0871               	movf	?___llmod+1,w
  3159  0514  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3160  0515  0870               	movf	?___llmod,w
  3161  0516  00B9               	movwf	sprintf@tmpval^(0+128)
  3162                           
  3163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3164  0517  0839               	movf	sprintf@tmpval^(0+128),w
  3165  0518  3E30               	addlw	48
  3166  0519  00A5               	movwf	??_sprintf^(0+128)
  3167  051A  083D               	movf	sprintf@sp^(0+128),w
  3168  051B  0084               	movwf	4
  3169  051C  0825               	movf	??_sprintf^(0+128),w
  3170  051D  1383               	bcf	3,7	;select IRP bank0
  3171  051E  0080               	movwf	0
  3172  051F  3001               	movlw	1
  3173  0520  00A5               	movwf	??_sprintf^(0+128)
  3174  0521  0825               	movf	??_sprintf^(0+128),w
  3175  0522  07BD               	addwf	sprintf@sp^(0+128),f
  3176                           
  3177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  3178  0523  0842               	movf	sprintf@c^(0+128),w
  3179  0524  00A5               	movwf	??_sprintf^(0+128)
  3180  0525  3001               	movlw	1
  3181  0526                     u557_25:	
  3182  0526  1003               	clrc
  3183  0527  0DA5               	rlf	??_sprintf^(0+128),f
  3184  0528  3EFF               	addlw	-1
  3185  0529  1D03               	skipz
  3186  052A  2D26               	goto	u557_25
  3187  052B  1003               	clrc
  3188  052C  0D25               	rlf	??_sprintf^(0+128),w
  3189  052D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3190  052E  0084               	movwf	4
  3191  052F  160A  118A  2000  120A  118A  	fcall	stringdir
  3192  0534  00F0               	movwf	___llmod@divisor
  3193  0535  160A  118A  2000  120A  118A  	fcall	stringdir
  3194  053A  00F1               	movwf	___llmod@divisor+1
  3195  053B  160A  118A  2000  120A  118A  	fcall	stringdir
  3196  0540  00F2               	movwf	___llmod@divisor+2
  3197  0541  160A  118A  2000  120A  118A  	fcall	stringdir
  3198  0546  00F3               	movwf	___llmod@divisor+3
  3199  0547  0836               	movf	(sprintf@val+3)^(0+128),w
  3200  0548  00F7               	movwf	___llmod@dividend+3
  3201  0549  0835               	movf	(sprintf@val+2)^(0+128),w
  3202  054A  00F6               	movwf	___llmod@dividend+2
  3203  054B  0834               	movf	(sprintf@val+1)^(0+128),w
  3204  054C  00F5               	movwf	___llmod@dividend+1
  3205  054D  0833               	movf	sprintf@val^(0+128),w
  3206  054E  00F4               	movwf	___llmod@dividend
  3207  054F  120A  158A  2003  120A  118A  	fcall	___llmod
  3208  0554  0873               	movf	?___llmod+3,w
  3209  0555  1683               	bsf	3,5	;RP0=1, select bank1
  3210  0556  1303               	bcf	3,6	;RP1=0, select bank1
  3211  0557  00B6               	movwf	(sprintf@val+3)^(0+128)
  3212  0558  0872               	movf	?___llmod+2,w
  3213  0559  00B5               	movwf	(sprintf@val+2)^(0+128)
  3214  055A  0871               	movf	?___llmod+1,w
  3215  055B  00B4               	movwf	(sprintf@val+1)^(0+128)
  3216  055C  0870               	movf	?___llmod,w
  3217  055D  2CB7               	goto	L4
  3218  055E                     i1l3260:	
  3219                           
  3220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  3221  055E  3030               	movlw	48
  3222  055F  00A5               	movwf	??_sprintf^(0+128)
  3223  0560  083D               	movf	sprintf@sp^(0+128),w
  3224  0561  0084               	movwf	4
  3225  0562  0825               	movf	??_sprintf^(0+128),w
  3226  0563  1383               	bcf	3,7	;select IRP bank0
  3227  0564  0080               	movwf	0
  3228  0565  3001               	movlw	1
  3229  0566  00A5               	movwf	??_sprintf^(0+128)
  3230  0567  0825               	movf	??_sprintf^(0+128),w
  3231  0568  07BD               	addwf	sprintf@sp^(0+128),f
  3232                           
  3233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  3234  0569  30FF               	movlw	255
  3235  056A  07B1               	addwf	sprintf@prec^(0+128),f
  3236  056B  1803               	skipnc
  3237  056C  0AB2               	incf	(sprintf@prec+1)^(0+128),f
  3238  056D  30FF               	movlw	255
  3239  056E  07B2               	addwf	(sprintf@prec+1)^(0+128),f
  3240  056F                     i1l3266:	
  3241                           
  3242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  3243  056F  0831               	movf	sprintf@prec^(0+128),w
  3244  0570  0432               	iorwf	(sprintf@prec+1)^(0+128),w
  3245  0571  1903               	btfsc	3,2
  3246  0572  282A               	goto	i1l3274
  3247  0573  2D5E               	goto	i1l3260
  3248  0574                     i1l3268:	
  3249                           
  3250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  3251  0574  3003               	movlw	3
  3252  0575  052F               	andwf	sprintf@flag^(0+128),w
  3253  0576  00A5               	movwf	??_sprintf^(0+128)
  3254  0577  3000               	movlw	0
  3255  0578  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3256  0579  00A6               	movwf	(??_sprintf+1)^(0+128)
  3257  057A  0825               	movf	??_sprintf^(0+128),w
  3258  057B  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3259  057C  1903               	btfsc	3,2
  3260  057D  282A               	goto	i1l3274
  3261                           
  3262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  3263  057E  302D               	movlw	45
  3264  057F                     L5:	
  3265  057F  00A5               	movwf	??_sprintf^(0+128)
  3266  0580  083D               	movf	sprintf@sp^(0+128),w
  3267  0581  0084               	movwf	4
  3268  0582  0825               	movf	??_sprintf^(0+128),w
  3269  0583  1383               	bcf	3,7	;select IRP bank0
  3270  0584  0080               	movwf	0
  3271  0585  3001               	movlw	1
  3272  0586  00A5               	movwf	??_sprintf^(0+128)
  3273  0587  0825               	movf	??_sprintf^(0+128),w
  3274  0588  07BD               	addwf	sprintf@sp^(0+128),f
  3275  0589  282A               	goto	i1l3274
  3276  058A                     i1l3276:	
  3277                           
  3278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  3279  058A  083D               	movf	sprintf@sp^(0+128),w
  3280  058B  0084               	movwf	4
  3281  058C  1383               	bcf	3,7	;select IRP bank0
  3282  058D  0180               	clrf	0
  3283  058E  0008               	return
  3284  058F                     __end_of_sprintf:	
  3285                           
  3286                           	psect	text8
  3287  0CB7                     __ptext8:	
  3288 ;; *************** function _scale *****************
  3289 ;; Defined at:
  3290 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  scl             1    wreg     char 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  scl             1   50[BANK0 ] char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  4   32[BANK0 ] char 
  3297 ;; Registers used:
  3298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         0       4       0       0       0
  3305 ;;      Locals:         0       5       0       0       0
  3306 ;;      Temps:          0      10       0       0       0
  3307 ;;      Totals:         0      19       0       0       0
  3308 ;;Total ram usage:       19 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    2
  3311 ;; This function calls:
  3312 ;;		___awdiv
  3313 ;;		___awmod
  3314 ;;		___flmul
  3315 ;; This function is called by:
  3316 ;;		_sprintf
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           
  3321                           ;psect for function _scale
  3322  0CB7                     _scale:	
  3323                           
  3324                           ;incstack = 0
  3325 ;; using string table level
  3326                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3327                           ;scale@scl stored from wreg
  3328  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0CB9  00D2               	movwf	scale@scl
  3331                           
  3332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3333  0CBA  1FD2               	btfss	scale@scl,7
  3334  0CBB  2E5F               	goto	i1l2746
  3335                           
  3336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3337  0CBC  09D2               	comf	scale@scl,f
  3338  0CBD  0AD2               	incf	scale@scl,f
  3339                           
  3340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3341  0CBE  0852               	movf	scale@scl,w
  3342  0CBF  3A80               	xorlw	128
  3343  0CC0  3E12               	addlw	-238
  3344  0CC1  1C03               	skipc
  3345  0CC2  2DA9               	goto	i1l2736
  3346                           
  3347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3348  0CC3  300A               	movlw	10
  3349  0CC4  00F7               	movwf	___awdiv@divisor
  3350  0CC5  3000               	movlw	0
  3351  0CC6  00F8               	movwf	___awdiv@divisor+1
  3352  0CC7  0852               	movf	scale@scl,w
  3353  0CC8  00F2               	movwf	___awmod@dividend
  3354  0CC9  01F3               	clrf	___awmod@dividend+1
  3355  0CCA  1BF2               	btfsc	___awmod@dividend,7
  3356  0CCB  03F3               	decf	___awmod@dividend+1,f
  3357  0CCC  3064               	movlw	100
  3358  0CCD  00F0               	movwf	___awmod@divisor
  3359  0CCE  3000               	movlw	0
  3360  0CCF  00F1               	movwf	___awmod@divisor+1
  3361  0CD0  160A  118A  20B6  120A  158A  	fcall	___awmod
  3362  0CD5  0871               	movf	?___awmod+1,w
  3363  0CD6  00FA               	movwf	___awdiv@dividend+1
  3364  0CD7  0870               	movf	?___awmod,w
  3365  0CD8  00F9               	movwf	___awdiv@dividend
  3366  0CD9  160A  118A  2101  120A  158A  	fcall	___awdiv
  3367  0CDE  0877               	movf	?___awdiv,w
  3368  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0CE1  00C4               	movwf	??_scale
  3371  0CE2  3001               	movlw	1
  3372  0CE3                     u434_25:	
  3373  0CE3  1003               	clrc
  3374  0CE4  0DC4               	rlf	??_scale,f
  3375  0CE5  3EFF               	addlw	-1
  3376  0CE6  1D03               	skipz
  3377  0CE7  2CE3               	goto	u434_25
  3378  0CE8  1003               	clrc
  3379  0CE9  0D44               	rlf	??_scale,w
  3380  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3381  0CEB  0084               	movwf	4
  3382  0CEC  160A  118A  2000  120A  158A  	fcall	stringdir
  3383  0CF1  00C5               	movwf	??_scale+1
  3384  0CF2  160A  118A  2000  120A  158A  	fcall	stringdir
  3385  0CF7  00C6               	movwf	??_scale+2
  3386  0CF8  160A  118A  2000  120A  158A  	fcall	stringdir
  3387  0CFD  00C7               	movwf	??_scale+3
  3388  0CFE  160A  118A  2000  120A  158A  	fcall	stringdir
  3389  0D03  00C8               	movwf	??_scale+4
  3390  0D04  0848               	movf	??_scale+4,w
  3391  0D05  00A9               	movwf	___flmul@b+3
  3392  0D06  0847               	movf	??_scale+3,w
  3393  0D07  00A8               	movwf	___flmul@b+2
  3394  0D08  0846               	movf	??_scale+2,w
  3395  0D09  00A7               	movwf	___flmul@b+1
  3396  0D0A  0845               	movf	??_scale+1,w
  3397  0D0B  00A6               	movwf	___flmul@b
  3398  0D0C  3064               	movlw	100
  3399  0D0D  00F7               	movwf	___awdiv@divisor
  3400  0D0E  3000               	movlw	0
  3401  0D0F  00F8               	movwf	___awdiv@divisor+1
  3402  0D10  0852               	movf	scale@scl,w
  3403  0D11  00F9               	movwf	___awdiv@dividend
  3404  0D12  01FA               	clrf	___awdiv@dividend+1
  3405  0D13  1BF9               	btfsc	___awdiv@dividend,7
  3406  0D14  03FA               	decf	___awdiv@dividend+1,f
  3407  0D15  160A  118A  2101  120A  158A  	fcall	___awdiv
  3408  0D1A  0877               	movf	?___awdiv,w
  3409  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3411  0D1D  00C9               	movwf	??_scale+5
  3412  0D1E  3001               	movlw	1
  3413  0D1F                     u435_25:	
  3414  0D1F  1003               	clrc
  3415  0D20  0DC9               	rlf	??_scale+5,f
  3416  0D21  3EFF               	addlw	-1
  3417  0D22  1D03               	skipz
  3418  0D23  2D1F               	goto	u435_25
  3419  0D24  1003               	clrc
  3420  0D25  0D49               	rlf	??_scale+5,w
  3421  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3422  0D27  0084               	movwf	4
  3423  0D28  160A  118A  2000  120A  158A  	fcall	stringdir
  3424  0D2D  00CA               	movwf	??_scale+6
  3425  0D2E  160A  118A  2000  120A  158A  	fcall	stringdir
  3426  0D33  00CB               	movwf	??_scale+7
  3427  0D34  160A  118A  2000  120A  158A  	fcall	stringdir
  3428  0D39  00CC               	movwf	??_scale+8
  3429  0D3A  160A  118A  2000  120A  158A  	fcall	stringdir
  3430  0D3F  00CD               	movwf	??_scale+9
  3431  0D40  084D               	movf	??_scale+9,w
  3432  0D41  00AD               	movwf	___flmul@a+3
  3433  0D42  084C               	movf	??_scale+8,w
  3434  0D43  00AC               	movwf	___flmul@a+2
  3435  0D44  084B               	movf	??_scale+7,w
  3436  0D45  00AB               	movwf	___flmul@a+1
  3437  0D46  084A               	movf	??_scale+6,w
  3438  0D47  00AA               	movwf	___flmul@a
  3439  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  3440  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0D4F  0829               	movf	?___flmul+3,w
  3443  0D50  00D1               	movwf	_scale$807+3
  3444  0D51  0828               	movf	?___flmul+2,w
  3445  0D52  00D0               	movwf	_scale$807+2
  3446  0D53  0827               	movf	?___flmul+1,w
  3447  0D54  00CF               	movwf	_scale$807+1
  3448  0D55  0826               	movf	?___flmul,w
  3449  0D56  00CE               	movwf	_scale$807
  3450                           
  3451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3452  0D57  300A               	movlw	10
  3453  0D58  00F0               	movwf	___awmod@divisor
  3454  0D59  3000               	movlw	0
  3455  0D5A  00F1               	movwf	___awmod@divisor+1
  3456  0D5B  0852               	movf	scale@scl,w
  3457  0D5C  00F2               	movwf	___awmod@dividend
  3458  0D5D  01F3               	clrf	___awmod@dividend+1
  3459  0D5E  1BF2               	btfsc	___awmod@dividend,7
  3460  0D5F  03F3               	decf	___awmod@dividend+1,f
  3461  0D60  160A  118A  20B6  120A  158A  	fcall	___awmod
  3462  0D65  0870               	movf	?___awmod,w
  3463  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0D68  00C4               	movwf	??_scale
  3466  0D69  3001               	movlw	1
  3467  0D6A                     u436_25:	
  3468  0D6A  1003               	clrc
  3469  0D6B  0DC4               	rlf	??_scale,f
  3470  0D6C  3EFF               	addlw	-1
  3471  0D6D  1D03               	skipz
  3472  0D6E  2D6A               	goto	u436_25
  3473  0D6F  1003               	clrc
  3474  0D70  0D44               	rlf	??_scale,w
  3475  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3476  0D72  0084               	movwf	4
  3477  0D73  160A  118A  2000  120A  158A  	fcall	stringdir
  3478  0D78  00C5               	movwf	??_scale+1
  3479  0D79  160A  118A  2000  120A  158A  	fcall	stringdir
  3480  0D7E  00C6               	movwf	??_scale+2
  3481  0D7F  160A  118A  2000  120A  158A  	fcall	stringdir
  3482  0D84  00C7               	movwf	??_scale+3
  3483  0D85  160A  118A  2000  120A  158A  	fcall	stringdir
  3484  0D8A  00C8               	movwf	??_scale+4
  3485  0D8B  0848               	movf	??_scale+4,w
  3486  0D8C  00A9               	movwf	___flmul@b+3
  3487  0D8D  0847               	movf	??_scale+3,w
  3488  0D8E  00A8               	movwf	___flmul@b+2
  3489  0D8F  0846               	movf	??_scale+2,w
  3490  0D90  00A7               	movwf	___flmul@b+1
  3491  0D91  0845               	movf	??_scale+1,w
  3492  0D92  00A6               	movwf	___flmul@b
  3493  0D93  0851               	movf	_scale$807+3,w
  3494  0D94  00AD               	movwf	___flmul@a+3
  3495  0D95  0850               	movf	_scale$807+2,w
  3496  0D96  00AC               	movwf	___flmul@a+2
  3497  0D97  084F               	movf	_scale$807+1,w
  3498  0D98  00AB               	movwf	___flmul@a+1
  3499  0D99  084E               	movf	_scale$807,w
  3500  0D9A  00AA               	movwf	___flmul@a
  3501  0D9B  120A  158A  21A2   	fcall	___flmul
  3502  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3504  0DA0  0829               	movf	?___flmul+3,w
  3505  0DA1  00C3               	movwf	?_scale+3
  3506  0DA2  0828               	movf	?___flmul+2,w
  3507  0DA3  00C2               	movwf	?_scale+2
  3508  0DA4  0827               	movf	?___flmul+1,w
  3509  0DA5  00C1               	movwf	?_scale+1
  3510  0DA6  0826               	movf	?___flmul,w
  3511  0DA7  00C0               	movwf	?_scale
  3512  0DA8  0008               	return
  3513  0DA9                     i1l2736:	
  3514  0DA9  0852               	movf	scale@scl,w
  3515  0DAA  3A80               	xorlw	128
  3516  0DAB  3E75               	addlw	-139
  3517  0DAC  1C03               	skipc
  3518  0DAD  2E34               	goto	i1l2742
  3519                           
  3520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3521  0DAE  300A               	movlw	10
  3522  0DAF  00F0               	movwf	___awmod@divisor
  3523  0DB0  3000               	movlw	0
  3524  0DB1  00F1               	movwf	___awmod@divisor+1
  3525  0DB2  0852               	movf	scale@scl,w
  3526  0DB3  00F2               	movwf	___awmod@dividend
  3527  0DB4  01F3               	clrf	___awmod@dividend+1
  3528  0DB5  1BF2               	btfsc	___awmod@dividend,7
  3529  0DB6  03F3               	decf	___awmod@dividend+1,f
  3530  0DB7  160A  118A  20B6  120A  158A  	fcall	___awmod
  3531  0DBC  0870               	movf	?___awmod,w
  3532  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  3534  0DBF  00C4               	movwf	??_scale
  3535  0DC0  3001               	movlw	1
  3536  0DC1                     u438_25:	
  3537  0DC1  1003               	clrc
  3538  0DC2  0DC4               	rlf	??_scale,f
  3539  0DC3  3EFF               	addlw	-1
  3540  0DC4  1D03               	skipz
  3541  0DC5  2DC1               	goto	u438_25
  3542  0DC6  1003               	clrc
  3543  0DC7  0D44               	rlf	??_scale,w
  3544  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3545  0DC9  0084               	movwf	4
  3546  0DCA  160A  118A  2000  120A  158A  	fcall	stringdir
  3547  0DCF  00C5               	movwf	??_scale+1
  3548  0DD0  160A  118A  2000  120A  158A  	fcall	stringdir
  3549  0DD5  00C6               	movwf	??_scale+2
  3550  0DD6  160A  118A  2000  120A  158A  	fcall	stringdir
  3551  0DDB  00C7               	movwf	??_scale+3
  3552  0DDC  160A  118A  2000  120A  158A  	fcall	stringdir
  3553  0DE1  00C8               	movwf	??_scale+4
  3554  0DE2  0848               	movf	??_scale+4,w
  3555  0DE3  00A9               	movwf	___flmul@b+3
  3556  0DE4  0847               	movf	??_scale+3,w
  3557  0DE5  00A8               	movwf	___flmul@b+2
  3558  0DE6  0846               	movf	??_scale+2,w
  3559  0DE7  00A7               	movwf	___flmul@b+1
  3560  0DE8  0845               	movf	??_scale+1,w
  3561  0DE9  00A6               	movwf	___flmul@b
  3562  0DEA  300A               	movlw	10
  3563  0DEB  00F7               	movwf	___awdiv@divisor
  3564  0DEC  3000               	movlw	0
  3565  0DED  00F8               	movwf	___awdiv@divisor+1
  3566  0DEE  0852               	movf	scale@scl,w
  3567  0DEF  00F9               	movwf	___awdiv@dividend
  3568  0DF0  01FA               	clrf	___awdiv@dividend+1
  3569  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  3570  0DF2  03FA               	decf	___awdiv@dividend+1,f
  3571  0DF3  160A  118A  2101  120A  158A  	fcall	___awdiv
  3572  0DF8  0877               	movf	?___awdiv,w
  3573  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0DFB  00C9               	movwf	??_scale+5
  3576  0DFC  3001               	movlw	1
  3577  0DFD                     u439_25:	
  3578  0DFD  1003               	clrc
  3579  0DFE  0DC9               	rlf	??_scale+5,f
  3580  0DFF  3EFF               	addlw	-1
  3581  0E00  1D03               	skipz
  3582  0E01  2DFD               	goto	u439_25
  3583  0E02  1003               	clrc
  3584  0E03  0D49               	rlf	??_scale+5,w
  3585  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3586  0E05  0084               	movwf	4
  3587  0E06  160A  118A  2000  120A  158A  	fcall	stringdir
  3588  0E0B  00CA               	movwf	??_scale+6
  3589  0E0C  160A  118A  2000  120A  158A  	fcall	stringdir
  3590  0E11  00CB               	movwf	??_scale+7
  3591  0E12  160A  118A  2000  120A  158A  	fcall	stringdir
  3592  0E17  00CC               	movwf	??_scale+8
  3593  0E18  160A  118A  2000  120A  158A  	fcall	stringdir
  3594  0E1D  00CD               	movwf	??_scale+9
  3595  0E1E  084D               	movf	??_scale+9,w
  3596  0E1F  00AD               	movwf	___flmul@a+3
  3597  0E20  084C               	movf	??_scale+8,w
  3598  0E21  00AC               	movwf	___flmul@a+2
  3599  0E22  084B               	movf	??_scale+7,w
  3600  0E23  00AB               	movwf	___flmul@a+1
  3601  0E24  084A               	movf	??_scale+6,w
  3602  0E25  00AA               	movwf	___flmul@a
  3603  0E26  120A  158A  21A2   	fcall	___flmul
  3604  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3605  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3606  0E2B  0829               	movf	?___flmul+3,w
  3607  0E2C  00C3               	movwf	?_scale+3
  3608  0E2D  0828               	movf	?___flmul+2,w
  3609  0E2E  00C2               	movwf	?_scale+2
  3610  0E2F  0827               	movf	?___flmul+1,w
  3611  0E30  00C1               	movwf	?_scale+1
  3612  0E31  0826               	movf	?___flmul,w
  3613  0E32  00C0               	movwf	?_scale
  3614  0E33  0008               	return
  3615  0E34                     i1l2742:	
  3616                           
  3617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3618  0E34  0852               	movf	scale@scl,w
  3619  0E35  00C4               	movwf	??_scale
  3620  0E36  3001               	movlw	1
  3621  0E37                     u440_25:	
  3622  0E37  1003               	clrc
  3623  0E38  0DC4               	rlf	??_scale,f
  3624  0E39  3EFF               	addlw	-1
  3625  0E3A  1D03               	skipz
  3626  0E3B  2E37               	goto	u440_25
  3627  0E3C  1003               	clrc
  3628  0E3D  0D44               	rlf	??_scale,w
  3629  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3630  0E3F  0084               	movwf	4
  3631  0E40  160A  118A  2000  120A  158A  	fcall	stringdir
  3632  0E45  00C5               	movwf	??_scale+1
  3633  0E46  160A  118A  2000  120A  158A  	fcall	stringdir
  3634  0E4B  00C6               	movwf	??_scale+2
  3635  0E4C  160A  118A  2000  120A  158A  	fcall	stringdir
  3636  0E51  00C7               	movwf	??_scale+3
  3637  0E52  160A  118A  2000   	fcall	stringdir
  3638  0E55  00C8               	movwf	??_scale+4
  3639  0E56  0848               	movf	??_scale+4,w
  3640  0E57  00C3               	movwf	?_scale+3
  3641  0E58  0847               	movf	??_scale+3,w
  3642  0E59  00C2               	movwf	?_scale+2
  3643  0E5A  0846               	movf	??_scale+2,w
  3644  0E5B  00C1               	movwf	?_scale+1
  3645  0E5C  0845               	movf	??_scale+1,w
  3646  0E5D  00C0               	movwf	?_scale
  3647  0E5E  0008               	return
  3648  0E5F                     i1l2746:	
  3649                           
  3650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3651  0E5F  0852               	movf	scale@scl,w
  3652  0E60  3A80               	xorlw	128
  3653  0E61  3E12               	addlw	-238
  3654  0E62  1C03               	skipc
  3655  0E63  2F4A               	goto	i1l2754
  3656                           
  3657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3658  0E64  300A               	movlw	10
  3659  0E65  00F7               	movwf	___awdiv@divisor
  3660  0E66  3000               	movlw	0
  3661  0E67  00F8               	movwf	___awdiv@divisor+1
  3662  0E68  0852               	movf	scale@scl,w
  3663  0E69  00F2               	movwf	___awmod@dividend
  3664  0E6A  01F3               	clrf	___awmod@dividend+1
  3665  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3666  0E6C  03F3               	decf	___awmod@dividend+1,f
  3667  0E6D  3064               	movlw	100
  3668  0E6E  00F0               	movwf	___awmod@divisor
  3669  0E6F  3000               	movlw	0
  3670  0E70  00F1               	movwf	___awmod@divisor+1
  3671  0E71  160A  118A  20B6  120A  158A  	fcall	___awmod
  3672  0E76  0871               	movf	?___awmod+1,w
  3673  0E77  00FA               	movwf	___awdiv@dividend+1
  3674  0E78  0870               	movf	?___awmod,w
  3675  0E79  00F9               	movwf	___awdiv@dividend
  3676  0E7A  160A  118A  2101  120A  158A  	fcall	___awdiv
  3677  0E7F  0877               	movf	?___awdiv,w
  3678  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3679  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3680  0E82  00C4               	movwf	??_scale
  3681  0E83  3001               	movlw	1
  3682  0E84                     u442_25:	
  3683  0E84  1003               	clrc
  3684  0E85  0DC4               	rlf	??_scale,f
  3685  0E86  3EFF               	addlw	-1
  3686  0E87  1D03               	skipz
  3687  0E88  2E84               	goto	u442_25
  3688  0E89  1003               	clrc
  3689  0E8A  0D44               	rlf	??_scale,w
  3690  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3691  0E8C  0084               	movwf	4
  3692  0E8D  160A  118A  2000  120A  158A  	fcall	stringdir
  3693  0E92  00C5               	movwf	??_scale+1
  3694  0E93  160A  118A  2000  120A  158A  	fcall	stringdir
  3695  0E98  00C6               	movwf	??_scale+2
  3696  0E99  160A  118A  2000  120A  158A  	fcall	stringdir
  3697  0E9E  00C7               	movwf	??_scale+3
  3698  0E9F  160A  118A  2000  120A  158A  	fcall	stringdir
  3699  0EA4  00C8               	movwf	??_scale+4
  3700  0EA5  0848               	movf	??_scale+4,w
  3701  0EA6  00A9               	movwf	___flmul@b+3
  3702  0EA7  0847               	movf	??_scale+3,w
  3703  0EA8  00A8               	movwf	___flmul@b+2
  3704  0EA9  0846               	movf	??_scale+2,w
  3705  0EAA  00A7               	movwf	___flmul@b+1
  3706  0EAB  0845               	movf	??_scale+1,w
  3707  0EAC  00A6               	movwf	___flmul@b
  3708  0EAD  3064               	movlw	100
  3709  0EAE  00F7               	movwf	___awdiv@divisor
  3710  0EAF  3000               	movlw	0
  3711  0EB0  00F8               	movwf	___awdiv@divisor+1
  3712  0EB1  0852               	movf	scale@scl,w
  3713  0EB2  00F9               	movwf	___awdiv@dividend
  3714  0EB3  01FA               	clrf	___awdiv@dividend+1
  3715  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3716  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3717  0EB6  160A  118A  2101  120A  158A  	fcall	___awdiv
  3718  0EBB  0877               	movf	?___awdiv,w
  3719  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3720  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3721  0EBE  00C9               	movwf	??_scale+5
  3722  0EBF  3001               	movlw	1
  3723  0EC0                     u443_25:	
  3724  0EC0  1003               	clrc
  3725  0EC1  0DC9               	rlf	??_scale+5,f
  3726  0EC2  3EFF               	addlw	-1
  3727  0EC3  1D03               	skipz
  3728  0EC4  2EC0               	goto	u443_25
  3729  0EC5  1003               	clrc
  3730  0EC6  0D49               	rlf	??_scale+5,w
  3731  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3732  0EC8  0084               	movwf	4
  3733  0EC9  160A  118A  2000  120A  158A  	fcall	stringdir
  3734  0ECE  00CA               	movwf	??_scale+6
  3735  0ECF  160A  118A  2000  120A  158A  	fcall	stringdir
  3736  0ED4  00CB               	movwf	??_scale+7
  3737  0ED5  160A  118A  2000  120A  158A  	fcall	stringdir
  3738  0EDA  00CC               	movwf	??_scale+8
  3739  0EDB  160A  118A  2000  120A  158A  	fcall	stringdir
  3740  0EE0  00CD               	movwf	??_scale+9
  3741  0EE1  084D               	movf	??_scale+9,w
  3742  0EE2  00AD               	movwf	___flmul@a+3
  3743  0EE3  084C               	movf	??_scale+8,w
  3744  0EE4  00AC               	movwf	___flmul@a+2
  3745  0EE5  084B               	movf	??_scale+7,w
  3746  0EE6  00AB               	movwf	___flmul@a+1
  3747  0EE7  084A               	movf	??_scale+6,w
  3748  0EE8  00AA               	movwf	___flmul@a
  3749  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3750  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0EF0  0829               	movf	?___flmul+3,w
  3753  0EF1  00D1               	movwf	_scale$807+3
  3754  0EF2  0828               	movf	?___flmul+2,w
  3755  0EF3  00D0               	movwf	_scale$807+2
  3756  0EF4  0827               	movf	?___flmul+1,w
  3757  0EF5  00CF               	movwf	_scale$807+1
  3758  0EF6  0826               	movf	?___flmul,w
  3759  0EF7  00CE               	movwf	_scale$807
  3760                           
  3761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3762  0EF8  300A               	movlw	10
  3763  0EF9  00F0               	movwf	___awmod@divisor
  3764  0EFA  3000               	movlw	0
  3765  0EFB  00F1               	movwf	___awmod@divisor+1
  3766  0EFC  0852               	movf	scale@scl,w
  3767  0EFD  00F2               	movwf	___awmod@dividend
  3768  0EFE  01F3               	clrf	___awmod@dividend+1
  3769  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3770  0F00  03F3               	decf	___awmod@dividend+1,f
  3771  0F01  160A  118A  20B6  120A  158A  	fcall	___awmod
  3772  0F06  0870               	movf	?___awmod,w
  3773  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0F09  00C4               	movwf	??_scale
  3776  0F0A  3001               	movlw	1
  3777  0F0B                     u444_25:	
  3778  0F0B  1003               	clrc
  3779  0F0C  0DC4               	rlf	??_scale,f
  3780  0F0D  3EFF               	addlw	-1
  3781  0F0E  1D03               	skipz
  3782  0F0F  2F0B               	goto	u444_25
  3783  0F10  1003               	clrc
  3784  0F11  0D44               	rlf	??_scale,w
  3785  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3786  0F13  0084               	movwf	4
  3787  0F14  160A  118A  2000  120A  158A  	fcall	stringdir
  3788  0F19  00C5               	movwf	??_scale+1
  3789  0F1A  160A  118A  2000  120A  158A  	fcall	stringdir
  3790  0F1F  00C6               	movwf	??_scale+2
  3791  0F20  160A  118A  2000  120A  158A  	fcall	stringdir
  3792  0F25  00C7               	movwf	??_scale+3
  3793  0F26  160A  118A  2000  120A  158A  	fcall	stringdir
  3794  0F2B  00C8               	movwf	??_scale+4
  3795  0F2C  0848               	movf	??_scale+4,w
  3796  0F2D  00A9               	movwf	___flmul@b+3
  3797  0F2E  0847               	movf	??_scale+3,w
  3798  0F2F  00A8               	movwf	___flmul@b+2
  3799  0F30  0846               	movf	??_scale+2,w
  3800  0F31  00A7               	movwf	___flmul@b+1
  3801  0F32  0845               	movf	??_scale+1,w
  3802  0F33  00A6               	movwf	___flmul@b
  3803  0F34  0851               	movf	_scale$807+3,w
  3804  0F35  00AD               	movwf	___flmul@a+3
  3805  0F36  0850               	movf	_scale$807+2,w
  3806  0F37  00AC               	movwf	___flmul@a+2
  3807  0F38  084F               	movf	_scale$807+1,w
  3808  0F39  00AB               	movwf	___flmul@a+1
  3809  0F3A  084E               	movf	_scale$807,w
  3810  0F3B  00AA               	movwf	___flmul@a
  3811  0F3C  120A  158A  21A2   	fcall	___flmul
  3812  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3813  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3814  0F41  0829               	movf	?___flmul+3,w
  3815  0F42  00C3               	movwf	?_scale+3
  3816  0F43  0828               	movf	?___flmul+2,w
  3817  0F44  00C2               	movwf	?_scale+2
  3818  0F45  0827               	movf	?___flmul+1,w
  3819  0F46  00C1               	movwf	?_scale+1
  3820  0F47  0826               	movf	?___flmul,w
  3821  0F48  00C0               	movwf	?_scale
  3822  0F49  0008               	return
  3823  0F4A                     i1l2754:	
  3824  0F4A  0852               	movf	scale@scl,w
  3825  0F4B  3A80               	xorlw	128
  3826  0F4C  3E75               	addlw	-139
  3827  0F4D  1C03               	skipc
  3828  0F4E  2FD5               	goto	i1l2760
  3829                           
  3830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3831  0F4F  300A               	movlw	10
  3832  0F50  00F0               	movwf	___awmod@divisor
  3833  0F51  3000               	movlw	0
  3834  0F52  00F1               	movwf	___awmod@divisor+1
  3835  0F53  0852               	movf	scale@scl,w
  3836  0F54  00F2               	movwf	___awmod@dividend
  3837  0F55  01F3               	clrf	___awmod@dividend+1
  3838  0F56  1BF2               	btfsc	___awmod@dividend,7
  3839  0F57  03F3               	decf	___awmod@dividend+1,f
  3840  0F58  160A  118A  20B6  120A  158A  	fcall	___awmod
  3841  0F5D  0870               	movf	?___awmod,w
  3842  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0F60  00C4               	movwf	??_scale
  3845  0F61  3001               	movlw	1
  3846  0F62                     u446_25:	
  3847  0F62  1003               	clrc
  3848  0F63  0DC4               	rlf	??_scale,f
  3849  0F64  3EFF               	addlw	-1
  3850  0F65  1D03               	skipz
  3851  0F66  2F62               	goto	u446_25
  3852  0F67  1003               	clrc
  3853  0F68  0D44               	rlf	??_scale,w
  3854  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3855  0F6A  0084               	movwf	4
  3856  0F6B  160A  118A  2000  120A  158A  	fcall	stringdir
  3857  0F70  00C5               	movwf	??_scale+1
  3858  0F71  160A  118A  2000  120A  158A  	fcall	stringdir
  3859  0F76  00C6               	movwf	??_scale+2
  3860  0F77  160A  118A  2000  120A  158A  	fcall	stringdir
  3861  0F7C  00C7               	movwf	??_scale+3
  3862  0F7D  160A  118A  2000  120A  158A  	fcall	stringdir
  3863  0F82  00C8               	movwf	??_scale+4
  3864  0F83  0848               	movf	??_scale+4,w
  3865  0F84  00A9               	movwf	___flmul@b+3
  3866  0F85  0847               	movf	??_scale+3,w
  3867  0F86  00A8               	movwf	___flmul@b+2
  3868  0F87  0846               	movf	??_scale+2,w
  3869  0F88  00A7               	movwf	___flmul@b+1
  3870  0F89  0845               	movf	??_scale+1,w
  3871  0F8A  00A6               	movwf	___flmul@b
  3872  0F8B  300A               	movlw	10
  3873  0F8C  00F7               	movwf	___awdiv@divisor
  3874  0F8D  3000               	movlw	0
  3875  0F8E  00F8               	movwf	___awdiv@divisor+1
  3876  0F8F  0852               	movf	scale@scl,w
  3877  0F90  00F9               	movwf	___awdiv@dividend
  3878  0F91  01FA               	clrf	___awdiv@dividend+1
  3879  0F92  1BF9               	btfsc	___awdiv@dividend,7
  3880  0F93  03FA               	decf	___awdiv@dividend+1,f
  3881  0F94  160A  118A  2101  120A  158A  	fcall	___awdiv
  3882  0F99  0877               	movf	?___awdiv,w
  3883  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3884  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3885  0F9C  00C9               	movwf	??_scale+5
  3886  0F9D  3001               	movlw	1
  3887  0F9E                     u447_25:	
  3888  0F9E  1003               	clrc
  3889  0F9F  0DC9               	rlf	??_scale+5,f
  3890  0FA0  3EFF               	addlw	-1
  3891  0FA1  1D03               	skipz
  3892  0FA2  2F9E               	goto	u447_25
  3893  0FA3  1003               	clrc
  3894  0FA4  0D49               	rlf	??_scale+5,w
  3895  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3896  0FA6  0084               	movwf	4
  3897  0FA7  160A  118A  2000  120A  158A  	fcall	stringdir
  3898  0FAC  00CA               	movwf	??_scale+6
  3899  0FAD  160A  118A  2000  120A  158A  	fcall	stringdir
  3900  0FB2  00CB               	movwf	??_scale+7
  3901  0FB3  160A  118A  2000  120A  158A  	fcall	stringdir
  3902  0FB8  00CC               	movwf	??_scale+8
  3903  0FB9  160A  118A  2000  120A  158A  	fcall	stringdir
  3904  0FBE  00CD               	movwf	??_scale+9
  3905  0FBF  084D               	movf	??_scale+9,w
  3906  0FC0  00AD               	movwf	___flmul@a+3
  3907  0FC1  084C               	movf	??_scale+8,w
  3908  0FC2  00AC               	movwf	___flmul@a+2
  3909  0FC3  084B               	movf	??_scale+7,w
  3910  0FC4  00AB               	movwf	___flmul@a+1
  3911  0FC5  084A               	movf	??_scale+6,w
  3912  0FC6  00AA               	movwf	___flmul@a
  3913  0FC7  120A  158A  21A2   	fcall	___flmul
  3914  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3915  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3916  0FCC  0829               	movf	?___flmul+3,w
  3917  0FCD  00C3               	movwf	?_scale+3
  3918  0FCE  0828               	movf	?___flmul+2,w
  3919  0FCF  00C2               	movwf	?_scale+2
  3920  0FD0  0827               	movf	?___flmul+1,w
  3921  0FD1  00C1               	movwf	?_scale+1
  3922  0FD2  0826               	movf	?___flmul,w
  3923  0FD3  00C0               	movwf	?_scale
  3924  0FD4  0008               	return
  3925  0FD5                     i1l2760:	
  3926                           
  3927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3928  0FD5  0852               	movf	scale@scl,w
  3929  0FD6  00C4               	movwf	??_scale
  3930  0FD7  3001               	movlw	1
  3931  0FD8                     u448_25:	
  3932  0FD8  1003               	clrc
  3933  0FD9  0DC4               	rlf	??_scale,f
  3934  0FDA  3EFF               	addlw	-1
  3935  0FDB  1D03               	skipz
  3936  0FDC  2FD8               	goto	u448_25
  3937  0FDD  1003               	clrc
  3938  0FDE  0D44               	rlf	??_scale,w
  3939  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3940  0FE0  0084               	movwf	4
  3941  0FE1  160A  118A  2000  120A  158A  	fcall	stringdir
  3942  0FE6  00C5               	movwf	??_scale+1
  3943  0FE7  160A  118A  2000  120A  158A  	fcall	stringdir
  3944  0FEC  00C6               	movwf	??_scale+2
  3945  0FED  160A  118A  2000  120A  158A  	fcall	stringdir
  3946  0FF2  00C7               	movwf	??_scale+3
  3947  0FF3  160A  118A  2000   	fcall	stringdir
  3948  0FF6  00C8               	movwf	??_scale+4
  3949  0FF7  0848               	movf	??_scale+4,w
  3950  0FF8  00C3               	movwf	?_scale+3
  3951  0FF9  0847               	movf	??_scale+3,w
  3952  0FFA  00C2               	movwf	?_scale+2
  3953  0FFB  0846               	movf	??_scale+2,w
  3954  0FFC  00C1               	movwf	?_scale+1
  3955  0FFD  0845               	movf	??_scale+1,w
  3956  0FFE  00C0               	movwf	?_scale
  3957  0FFF  0008               	return
  3958  1000                     __end_of_scale:	
  3959                           
  3960                           	psect	text9
  3961  10B6                     __ptext9:	
  3962 ;; *************** function ___awmod *****************
  3963 ;; Defined at:
  3964 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  divisor         2    0[COMMON] int 
  3967 ;;  dividend        2    2[COMMON] int 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  sign            1    6[COMMON] unsigned char 
  3970 ;;  counter         1    5[COMMON] unsigned char 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  2    0[COMMON] int 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3980 ;;      Params:         4       0       0       0       0
  3981 ;;      Locals:         2       0       0       0       0
  3982 ;;      Temps:          1       0       0       0       0
  3983 ;;      Totals:         7       0       0       0       0
  3984 ;;Total ram usage:        7 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_scale
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           
  3994                           ;psect for function ___awmod
  3995  10B6                     ___awmod:	
  3996                           
  3997                           ;incstack = 0
  3998                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3999  10B6  01F6               	clrf	___awmod@sign
  4000  10B7  1FF3               	btfss	___awmod@dividend+1,7
  4001  10B8  28C0               	goto	i1l2254
  4002  10B9  09F2               	comf	___awmod@dividend,f
  4003  10BA  09F3               	comf	___awmod@dividend+1,f
  4004  10BB  0AF2               	incf	___awmod@dividend,f
  4005  10BC  1903               	skipnz
  4006  10BD  0AF3               	incf	___awmod@dividend+1,f
  4007  10BE  01F6               	clrf	___awmod@sign
  4008  10BF  0AF6               	incf	___awmod@sign,f
  4009  10C0                     i1l2254:	
  4010  10C0  1FF1               	btfss	___awmod@divisor+1,7
  4011  10C1  28C7               	goto	i1l2258
  4012  10C2  09F0               	comf	___awmod@divisor,f
  4013  10C3  09F1               	comf	___awmod@divisor+1,f
  4014  10C4  0AF0               	incf	___awmod@divisor,f
  4015  10C5  1903               	skipnz
  4016  10C6  0AF1               	incf	___awmod@divisor+1,f
  4017  10C7                     i1l2258:	
  4018  10C7  0870               	movf	___awmod@divisor,w
  4019  10C8  0471               	iorwf	___awmod@divisor+1,w
  4020  10C9  1903               	btfsc	3,2
  4021  10CA  28F4               	goto	i1l2276
  4022  10CB  01F5               	clrf	___awmod@counter
  4023  10CC  0AF5               	incf	___awmod@counter,f
  4024  10CD                     i1l2266:	
  4025  10CD  1BF1               	btfsc	___awmod@divisor+1,7
  4026  10CE  28DB               	goto	i1l2268
  4027  10CF  3001               	movlw	1
  4028  10D0                     u317_25:	
  4029  10D0  1003               	clrc
  4030  10D1  0DF0               	rlf	___awmod@divisor,f
  4031  10D2  0DF1               	rlf	___awmod@divisor+1,f
  4032  10D3  3EFF               	addlw	-1
  4033  10D4  1D03               	skipz
  4034  10D5  28D0               	goto	u317_25
  4035  10D6  3001               	movlw	1
  4036  10D7  00F4               	movwf	??___awmod
  4037  10D8  0874               	movf	??___awmod,w
  4038  10D9  07F5               	addwf	___awmod@counter,f
  4039  10DA  28CD               	goto	i1l2266
  4040  10DB                     i1l2268:	
  4041  10DB  0871               	movf	___awmod@divisor+1,w
  4042  10DC  0273               	subwf	___awmod@dividend+1,w
  4043  10DD  1D03               	skipz
  4044  10DE  28E1               	goto	u319_25
  4045  10DF  0870               	movf	___awmod@divisor,w
  4046  10E0  0272               	subwf	___awmod@dividend,w
  4047  10E1                     u319_25:	
  4048  10E1  1C03               	skipc
  4049  10E2  28E9               	goto	i1l2272
  4050  10E3  0870               	movf	___awmod@divisor,w
  4051  10E4  02F2               	subwf	___awmod@dividend,f
  4052  10E5  0871               	movf	___awmod@divisor+1,w
  4053  10E6  1C03               	skipc
  4054  10E7  03F3               	decf	___awmod@dividend+1,f
  4055  10E8  02F3               	subwf	___awmod@dividend+1,f
  4056  10E9                     i1l2272:	
  4057  10E9  3001               	movlw	1
  4058  10EA                     u320_25:	
  4059  10EA  1003               	clrc
  4060  10EB  0CF1               	rrf	___awmod@divisor+1,f
  4061  10EC  0CF0               	rrf	___awmod@divisor,f
  4062  10ED  3EFF               	addlw	-1
  4063  10EE  1D03               	skipz
  4064  10EF  28EA               	goto	u320_25
  4065  10F0  3001               	movlw	1
  4066  10F1  02F5               	subwf	___awmod@counter,f
  4067  10F2  1D03               	btfss	3,2
  4068  10F3  28DB               	goto	i1l2268
  4069  10F4                     i1l2276:	
  4070  10F4  0876               	movf	___awmod@sign,w
  4071  10F5  1903               	btfsc	3,2
  4072  10F6  28FC               	goto	i1l2280
  4073  10F7  09F2               	comf	___awmod@dividend,f
  4074  10F8  09F3               	comf	___awmod@dividend+1,f
  4075  10F9  0AF2               	incf	___awmod@dividend,f
  4076  10FA  1903               	skipnz
  4077  10FB  0AF3               	incf	___awmod@dividend+1,f
  4078  10FC                     i1l2280:	
  4079  10FC  0873               	movf	___awmod@dividend+1,w
  4080  10FD  00F1               	movwf	?___awmod+1
  4081  10FE  0872               	movf	___awmod@dividend,w
  4082  10FF  00F0               	movwf	?___awmod
  4083  1100  0008               	return
  4084  1101                     __end_of___awmod:	
  4085                           
  4086                           	psect	text10
  4087  1101                     __ptext10:	
  4088 ;; *************** function ___awdiv *****************
  4089 ;; Defined at:
  4090 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  divisor         2    7[COMMON] int 
  4093 ;;  dividend        2    9[COMMON] int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  quotient        2    2[BANK0 ] int 
  4096 ;;  sign            1    1[BANK0 ] unsigned char 
  4097 ;;  counter         1    0[BANK0 ] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  2    7[COMMON] int 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4107 ;;      Params:         4       0       0       0       0
  4108 ;;      Locals:         0       4       0       0       0
  4109 ;;      Temps:          1       0       0       0       0
  4110 ;;      Totals:         5       4       0       0       0
  4111 ;;Total ram usage:        9 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_scale
  4117 ;;		_sprintf
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           
  4122                           ;psect for function ___awdiv
  4123  1101                     ___awdiv:	
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4127  1101  1283               	bcf	3,5	;RP0=0, select bank0
  4128  1102  1303               	bcf	3,6	;RP1=0, select bank0
  4129  1103  01A1               	clrf	___awdiv@sign
  4130  1104  1FF8               	btfss	___awdiv@divisor+1,7
  4131  1105  290D               	goto	i1l2210
  4132  1106  09F7               	comf	___awdiv@divisor,f
  4133  1107  09F8               	comf	___awdiv@divisor+1,f
  4134  1108  0AF7               	incf	___awdiv@divisor,f
  4135  1109  1903               	skipnz
  4136  110A  0AF8               	incf	___awdiv@divisor+1,f
  4137  110B  01A1               	clrf	___awdiv@sign
  4138  110C  0AA1               	incf	___awdiv@sign,f
  4139  110D                     i1l2210:	
  4140  110D  1FFA               	btfss	___awdiv@dividend+1,7
  4141  110E  2918               	goto	i1l2216
  4142  110F  09F9               	comf	___awdiv@dividend,f
  4143  1110  09FA               	comf	___awdiv@dividend+1,f
  4144  1111  0AF9               	incf	___awdiv@dividend,f
  4145  1112  1903               	skipnz
  4146  1113  0AFA               	incf	___awdiv@dividend+1,f
  4147  1114  3001               	movlw	1
  4148  1115  00FB               	movwf	??___awdiv
  4149  1116  087B               	movf	??___awdiv,w
  4150  1117  06A1               	xorwf	___awdiv@sign,f
  4151  1118                     i1l2216:	
  4152  1118  01A2               	clrf	___awdiv@quotient
  4153  1119  01A3               	clrf	___awdiv@quotient+1
  4154  111A  0877               	movf	___awdiv@divisor,w
  4155  111B  0478               	iorwf	___awdiv@divisor+1,w
  4156  111C  1903               	btfsc	3,2
  4157  111D  294F               	goto	i1l2238
  4158  111E  01A0               	clrf	___awdiv@counter
  4159  111F  0AA0               	incf	___awdiv@counter,f
  4160  1120                     i1l2226:	
  4161  1120  1BF8               	btfsc	___awdiv@divisor+1,7
  4162  1121  292E               	goto	i1l2228
  4163  1122  3001               	movlw	1
  4164  1123                     u307_25:	
  4165  1123  1003               	clrc
  4166  1124  0DF7               	rlf	___awdiv@divisor,f
  4167  1125  0DF8               	rlf	___awdiv@divisor+1,f
  4168  1126  3EFF               	addlw	-1
  4169  1127  1D03               	skipz
  4170  1128  2923               	goto	u307_25
  4171  1129  3001               	movlw	1
  4172  112A  00FB               	movwf	??___awdiv
  4173  112B  087B               	movf	??___awdiv,w
  4174  112C  07A0               	addwf	___awdiv@counter,f
  4175  112D  2920               	goto	i1l2226
  4176  112E                     i1l2228:	
  4177  112E  3001               	movlw	1
  4178  112F                     u309_25:	
  4179  112F  1003               	clrc
  4180  1130  0DA2               	rlf	___awdiv@quotient,f
  4181  1131  0DA3               	rlf	___awdiv@quotient+1,f
  4182  1132  3EFF               	addlw	-1
  4183  1133  1D03               	skipz
  4184  1134  292F               	goto	u309_25
  4185  1135  0878               	movf	___awdiv@divisor+1,w
  4186  1136  027A               	subwf	___awdiv@dividend+1,w
  4187  1137  1D03               	skipz
  4188  1138  293B               	goto	u310_25
  4189  1139  0877               	movf	___awdiv@divisor,w
  4190  113A  0279               	subwf	___awdiv@dividend,w
  4191  113B                     u310_25:	
  4192  113B  1C03               	skipc
  4193  113C  2944               	goto	i1l2234
  4194  113D  0877               	movf	___awdiv@divisor,w
  4195  113E  02F9               	subwf	___awdiv@dividend,f
  4196  113F  0878               	movf	___awdiv@divisor+1,w
  4197  1140  1C03               	skipc
  4198  1141  03FA               	decf	___awdiv@dividend+1,f
  4199  1142  02FA               	subwf	___awdiv@dividend+1,f
  4200  1143  1422               	bsf	___awdiv@quotient,0
  4201  1144                     i1l2234:	
  4202  1144  3001               	movlw	1
  4203  1145                     u311_25:	
  4204  1145  1003               	clrc
  4205  1146  0CF8               	rrf	___awdiv@divisor+1,f
  4206  1147  0CF7               	rrf	___awdiv@divisor,f
  4207  1148  3EFF               	addlw	-1
  4208  1149  1D03               	skipz
  4209  114A  2945               	goto	u311_25
  4210  114B  3001               	movlw	1
  4211  114C  02A0               	subwf	___awdiv@counter,f
  4212  114D  1D03               	btfss	3,2
  4213  114E  292E               	goto	i1l2228
  4214  114F                     i1l2238:	
  4215  114F  0821               	movf	___awdiv@sign,w
  4216  1150  1903               	btfsc	3,2
  4217  1151  2957               	goto	i1l2242
  4218  1152  09A2               	comf	___awdiv@quotient,f
  4219  1153  09A3               	comf	___awdiv@quotient+1,f
  4220  1154  0AA2               	incf	___awdiv@quotient,f
  4221  1155  1903               	skipnz
  4222  1156  0AA3               	incf	___awdiv@quotient+1,f
  4223  1157                     i1l2242:	
  4224  1157  0823               	movf	___awdiv@quotient+1,w
  4225  1158  00F8               	movwf	?___awdiv+1
  4226  1159  0822               	movf	___awdiv@quotient,w
  4227  115A  00F7               	movwf	?___awdiv
  4228  115B  0008               	return
  4229  115C                     __end_of___awdiv:	
  4230                           
  4231                           	psect	text11
  4232  15FF                     __ptext11:	
  4233 ;; *************** function _fround *****************
  4234 ;; Defined at:
  4235 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  prec            1    wreg     unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  prec            1   51[BANK0 ] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  4   32[BANK0 ] unsigned char 
  4242 ;; Registers used:
  4243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4249 ;;      Params:         0       4       0       0       0
  4250 ;;      Locals:         0       9       0       0       0
  4251 ;;      Temps:          0       7       0       0       0
  4252 ;;      Totals:         0      20       0       0       0
  4253 ;;Total ram usage:       20 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    2
  4256 ;; This function calls:
  4257 ;;		___flmul
  4258 ;;		___lwdiv
  4259 ;;		___lwmod
  4260 ;; This function is called by:
  4261 ;;		_sprintf
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           
  4266                           ;psect for function _fround
  4267  15FF                     _fround:	
  4268                           
  4269                           ;incstack = 0
  4270 ;; using string table level
  4271                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4272                           ;fround@prec stored from wreg
  4273  15FF  1283               	bcf	3,5	;RP0=0, select bank0
  4274  1600  1303               	bcf	3,6	;RP1=0, select bank0
  4275  1601  00D3               	movwf	fround@prec
  4276                           
  4277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4278  1602  306E               	movlw	110
  4279  1603  0253               	subwf	fround@prec,w
  4280  1604  1C03               	skipc
  4281  1605  2F11               	goto	i1l2714
  4282                           
  4283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4284  1606  303F               	movlw	63
  4285  1607  00A9               	movwf	___flmul@b+3
  4286  1608  3000               	movlw	0
  4287  1609  00A8               	movwf	___flmul@b+2
  4288  160A  3000               	movlw	0
  4289  160B  00A7               	movwf	___flmul@b+1
  4290  160C  3000               	movlw	0
  4291  160D  00A6               	movwf	___flmul@b
  4292  160E  3064               	movlw	100
  4293  160F  00F6               	movwf	___lwdiv@divisor
  4294  1610  3000               	movlw	0
  4295  1611  00F7               	movwf	___lwdiv@divisor+1
  4296  1612  0853               	movf	fround@prec,w
  4297  1613  00C4               	movwf	??_fround
  4298  1614  01C5               	clrf	??_fround+1
  4299  1615  0844               	movf	??_fround,w
  4300  1616  00F8               	movwf	___lwdiv@dividend
  4301  1617  0845               	movf	??_fround+1,w
  4302  1618  00F9               	movwf	___lwdiv@dividend+1
  4303  1619  120A  118A  27BE  160A  118A  	fcall	___lwdiv
  4304  161E  0876               	movf	?___lwdiv,w
  4305  161F  1283               	bcf	3,5	;RP0=0, select bank0
  4306  1620  1303               	bcf	3,6	;RP1=0, select bank0
  4307  1621  00C6               	movwf	??_fround+2
  4308  1622  3001               	movlw	1
  4309  1623                     u425_25:	
  4310  1623  1003               	clrc
  4311  1624  0DC6               	rlf	??_fround+2,f
  4312  1625  3EFF               	addlw	-1
  4313  1626  1D03               	skipz
  4314  1627  2E23               	goto	u425_25
  4315  1628  1003               	clrc
  4316  1629  0D46               	rlf	??_fround+2,w
  4317  162A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4318  162B  0084               	movwf	4
  4319  162C  160A  118A  2000  160A  118A  	fcall	stringdir
  4320  1631  00C7               	movwf	??_fround+3
  4321  1632  160A  118A  2000  160A  118A  	fcall	stringdir
  4322  1637  00C8               	movwf	??_fround+4
  4323  1638  160A  118A  2000  160A  118A  	fcall	stringdir
  4324  163D  00C9               	movwf	??_fround+5
  4325  163E  160A  118A  2000  160A  118A  	fcall	stringdir
  4326  1643  00CA               	movwf	??_fround+6
  4327  1644  084A               	movf	??_fround+6,w
  4328  1645  00AD               	movwf	___flmul@a+3
  4329  1646  0849               	movf	??_fround+5,w
  4330  1647  00AC               	movwf	___flmul@a+2
  4331  1648  0848               	movf	??_fround+4,w
  4332  1649  00AB               	movwf	___flmul@a+1
  4333  164A  0847               	movf	??_fround+3,w
  4334  164B  00AA               	movwf	___flmul@a
  4335  164C  120A  158A  21A2  160A  118A  	fcall	___flmul
  4336  1651  1283               	bcf	3,5	;RP0=0, select bank0
  4337  1652  1303               	bcf	3,6	;RP1=0, select bank0
  4338  1653  0829               	movf	?___flmul+3,w
  4339  1654  00D2               	movwf	_fround$805+3
  4340  1655  0828               	movf	?___flmul+2,w
  4341  1656  00D1               	movwf	_fround$805+2
  4342  1657  0827               	movf	?___flmul+1,w
  4343  1658  00D0               	movwf	_fround$805+1
  4344  1659  0826               	movf	?___flmul,w
  4345  165A  00CF               	movwf	_fround$805
  4346                           
  4347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4348  165B  300A               	movlw	10
  4349  165C  00F6               	movwf	___lwdiv@divisor
  4350  165D  3000               	movlw	0
  4351  165E  00F7               	movwf	___lwdiv@divisor+1
  4352  165F  0853               	movf	fround@prec,w
  4353  1660  00C4               	movwf	??_fround
  4354  1661  01C5               	clrf	??_fround+1
  4355  1662  0844               	movf	??_fround,w
  4356  1663  00F2               	movwf	___lwmod@dividend
  4357  1664  0845               	movf	??_fround+1,w
  4358  1665  00F3               	movwf	___lwmod@dividend+1
  4359  1666  3064               	movlw	100
  4360  1667  00F0               	movwf	___lwmod@divisor
  4361  1668  3000               	movlw	0
  4362  1669  00F1               	movwf	___lwmod@divisor+1
  4363  166A  160A  158A  2703  160A  118A  	fcall	___lwmod
  4364  166F  0871               	movf	?___lwmod+1,w
  4365  1670  00F9               	movwf	___lwdiv@dividend+1
  4366  1671  0870               	movf	?___lwmod,w
  4367  1672  00F8               	movwf	___lwdiv@dividend
  4368  1673  120A  118A  27BE  160A  118A  	fcall	___lwdiv
  4369  1678  0876               	movf	?___lwdiv,w
  4370  1679  1283               	bcf	3,5	;RP0=0, select bank0
  4371  167A  1303               	bcf	3,6	;RP1=0, select bank0
  4372  167B  00C6               	movwf	??_fround+2
  4373  167C  3001               	movlw	1
  4374  167D                     u426_25:	
  4375  167D  1003               	clrc
  4376  167E  0DC6               	rlf	??_fround+2,f
  4377  167F  3EFF               	addlw	-1
  4378  1680  1D03               	skipz
  4379  1681  2E7D               	goto	u426_25
  4380  1682  1003               	clrc
  4381  1683  0D46               	rlf	??_fround+2,w
  4382  1684  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4383  1685  0084               	movwf	4
  4384  1686  160A  118A  2000  160A  118A  	fcall	stringdir
  4385  168B  00C7               	movwf	??_fround+3
  4386  168C  160A  118A  2000  160A  118A  	fcall	stringdir
  4387  1691  00C8               	movwf	??_fround+4
  4388  1692  160A  118A  2000  160A  118A  	fcall	stringdir
  4389  1697  00C9               	movwf	??_fround+5
  4390  1698  160A  118A  2000  160A  118A  	fcall	stringdir
  4391  169D  00CA               	movwf	??_fround+6
  4392  169E  084A               	movf	??_fround+6,w
  4393  169F  00A9               	movwf	___flmul@b+3
  4394  16A0  0849               	movf	??_fround+5,w
  4395  16A1  00A8               	movwf	___flmul@b+2
  4396  16A2  0848               	movf	??_fround+4,w
  4397  16A3  00A7               	movwf	___flmul@b+1
  4398  16A4  0847               	movf	??_fround+3,w
  4399  16A5  00A6               	movwf	___flmul@b
  4400  16A6  0852               	movf	_fround$805+3,w
  4401  16A7  00AD               	movwf	___flmul@a+3
  4402  16A8  0851               	movf	_fround$805+2,w
  4403  16A9  00AC               	movwf	___flmul@a+2
  4404  16AA  0850               	movf	_fround$805+1,w
  4405  16AB  00AB               	movwf	___flmul@a+1
  4406  16AC  084F               	movf	_fround$805,w
  4407  16AD  00AA               	movwf	___flmul@a
  4408  16AE  120A  158A  21A2  160A  118A  	fcall	___flmul
  4409  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  4410  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  4411  16B5  0829               	movf	?___flmul+3,w
  4412  16B6  00CE               	movwf	_fround$806+3
  4413  16B7  0828               	movf	?___flmul+2,w
  4414  16B8  00CD               	movwf	_fround$806+2
  4415  16B9  0827               	movf	?___flmul+1,w
  4416  16BA  00CC               	movwf	_fround$806+1
  4417  16BB  0826               	movf	?___flmul,w
  4418  16BC  00CB               	movwf	_fround$806
  4419                           
  4420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4421  16BD  300A               	movlw	10
  4422  16BE  00F0               	movwf	___lwmod@divisor
  4423  16BF  3000               	movlw	0
  4424  16C0  00F1               	movwf	___lwmod@divisor+1
  4425  16C1  0853               	movf	fround@prec,w
  4426  16C2  00C4               	movwf	??_fround
  4427  16C3  01C5               	clrf	??_fround+1
  4428  16C4  0844               	movf	??_fround,w
  4429  16C5  00F2               	movwf	___lwmod@dividend
  4430  16C6  0845               	movf	??_fround+1,w
  4431  16C7  00F3               	movwf	___lwmod@dividend+1
  4432  16C8  160A  158A  2703  160A  118A  	fcall	___lwmod
  4433  16CD  0870               	movf	?___lwmod,w
  4434  16CE  1283               	bcf	3,5	;RP0=0, select bank0
  4435  16CF  1303               	bcf	3,6	;RP1=0, select bank0
  4436  16D0  00C6               	movwf	??_fround+2
  4437  16D1  3001               	movlw	1
  4438  16D2                     u427_25:	
  4439  16D2  1003               	clrc
  4440  16D3  0DC6               	rlf	??_fround+2,f
  4441  16D4  3EFF               	addlw	-1
  4442  16D5  1D03               	skipz
  4443  16D6  2ED2               	goto	u427_25
  4444  16D7  1003               	clrc
  4445  16D8  0D46               	rlf	??_fround+2,w
  4446  16D9  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4447  16DA  0084               	movwf	4
  4448  16DB  160A  118A  2000  160A  118A  	fcall	stringdir
  4449  16E0  00C7               	movwf	??_fround+3
  4450  16E1  160A  118A  2000  160A  118A  	fcall	stringdir
  4451  16E6  00C8               	movwf	??_fround+4
  4452  16E7  160A  118A  2000  160A  118A  	fcall	stringdir
  4453  16EC  00C9               	movwf	??_fround+5
  4454  16ED  160A  118A  2000  160A  118A  	fcall	stringdir
  4455  16F2  00CA               	movwf	??_fround+6
  4456  16F3  084A               	movf	??_fround+6,w
  4457  16F4  00A9               	movwf	___flmul@b+3
  4458  16F5  0849               	movf	??_fround+5,w
  4459  16F6  00A8               	movwf	___flmul@b+2
  4460  16F7  0848               	movf	??_fround+4,w
  4461  16F8  00A7               	movwf	___flmul@b+1
  4462  16F9  0847               	movf	??_fround+3,w
  4463  16FA  00A6               	movwf	___flmul@b
  4464  16FB  084E               	movf	_fround$806+3,w
  4465  16FC  00AD               	movwf	___flmul@a+3
  4466  16FD  084D               	movf	_fround$806+2,w
  4467  16FE  00AC               	movwf	___flmul@a+2
  4468  16FF  084C               	movf	_fround$806+1,w
  4469  1700  00AB               	movwf	___flmul@a+1
  4470  1701  084B               	movf	_fround$806,w
  4471  1702  00AA               	movwf	___flmul@a
  4472  1703  120A  158A  21A2   	fcall	___flmul
  4473  1706  1283               	bcf	3,5	;RP0=0, select bank0
  4474  1707  1303               	bcf	3,6	;RP1=0, select bank0
  4475  1708  0829               	movf	?___flmul+3,w
  4476  1709  00C3               	movwf	?_fround+3
  4477  170A  0828               	movf	?___flmul+2,w
  4478  170B  00C2               	movwf	?_fround+2
  4479  170C  0827               	movf	?___flmul+1,w
  4480  170D  00C1               	movwf	?_fround+1
  4481  170E  0826               	movf	?___flmul,w
  4482  170F  00C0               	movwf	?_fround
  4483  1710  0008               	return
  4484  1711                     i1l2714:	
  4485  1711  300B               	movlw	11
  4486  1712  0253               	subwf	fround@prec,w
  4487  1713  1C03               	skipc
  4488  1714  2FBE               	goto	i1l2720
  4489                           
  4490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4491  1715  303F               	movlw	63
  4492  1716  00A9               	movwf	___flmul@b+3
  4493  1717  3000               	movlw	0
  4494  1718  00A8               	movwf	___flmul@b+2
  4495  1719  3000               	movlw	0
  4496  171A  00A7               	movwf	___flmul@b+1
  4497  171B  3000               	movlw	0
  4498  171C  00A6               	movwf	___flmul@b
  4499  171D  300A               	movlw	10
  4500  171E  00F6               	movwf	___lwdiv@divisor
  4501  171F  3000               	movlw	0
  4502  1720  00F7               	movwf	___lwdiv@divisor+1
  4503  1721  0853               	movf	fround@prec,w
  4504  1722  00C4               	movwf	??_fround
  4505  1723  01C5               	clrf	??_fround+1
  4506  1724  0844               	movf	??_fround,w
  4507  1725  00F8               	movwf	___lwdiv@dividend
  4508  1726  0845               	movf	??_fround+1,w
  4509  1727  00F9               	movwf	___lwdiv@dividend+1
  4510  1728  120A  118A  27BE  160A  118A  	fcall	___lwdiv
  4511  172D  0876               	movf	?___lwdiv,w
  4512  172E  1283               	bcf	3,5	;RP0=0, select bank0
  4513  172F  1303               	bcf	3,6	;RP1=0, select bank0
  4514  1730  00C6               	movwf	??_fround+2
  4515  1731  3001               	movlw	1
  4516  1732                     u429_25:	
  4517  1732  1003               	clrc
  4518  1733  0DC6               	rlf	??_fround+2,f
  4519  1734  3EFF               	addlw	-1
  4520  1735  1D03               	skipz
  4521  1736  2F32               	goto	u429_25
  4522  1737  1003               	clrc
  4523  1738  0D46               	rlf	??_fround+2,w
  4524  1739  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4525  173A  0084               	movwf	4
  4526  173B  160A  118A  2000  160A  118A  	fcall	stringdir
  4527  1740  00C7               	movwf	??_fround+3
  4528  1741  160A  118A  2000  160A  118A  	fcall	stringdir
  4529  1746  00C8               	movwf	??_fround+4
  4530  1747  160A  118A  2000  160A  118A  	fcall	stringdir
  4531  174C  00C9               	movwf	??_fround+5
  4532  174D  160A  118A  2000  160A  118A  	fcall	stringdir
  4533  1752  00CA               	movwf	??_fround+6
  4534  1753  084A               	movf	??_fround+6,w
  4535  1754  00AD               	movwf	___flmul@a+3
  4536  1755  0849               	movf	??_fround+5,w
  4537  1756  00AC               	movwf	___flmul@a+2
  4538  1757  0848               	movf	??_fround+4,w
  4539  1758  00AB               	movwf	___flmul@a+1
  4540  1759  0847               	movf	??_fround+3,w
  4541  175A  00AA               	movwf	___flmul@a
  4542  175B  120A  158A  21A2  160A  118A  	fcall	___flmul
  4543  1760  1283               	bcf	3,5	;RP0=0, select bank0
  4544  1761  1303               	bcf	3,6	;RP1=0, select bank0
  4545  1762  0829               	movf	?___flmul+3,w
  4546  1763  00D2               	movwf	_fround$805+3
  4547  1764  0828               	movf	?___flmul+2,w
  4548  1765  00D1               	movwf	_fround$805+2
  4549  1766  0827               	movf	?___flmul+1,w
  4550  1767  00D0               	movwf	_fround$805+1
  4551  1768  0826               	movf	?___flmul,w
  4552  1769  00CF               	movwf	_fround$805
  4553                           
  4554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4555  176A  300A               	movlw	10
  4556  176B  00F0               	movwf	___lwmod@divisor
  4557  176C  3000               	movlw	0
  4558  176D  00F1               	movwf	___lwmod@divisor+1
  4559  176E  0853               	movf	fround@prec,w
  4560  176F  00C4               	movwf	??_fround
  4561  1770  01C5               	clrf	??_fround+1
  4562  1771  0844               	movf	??_fround,w
  4563  1772  00F2               	movwf	___lwmod@dividend
  4564  1773  0845               	movf	??_fround+1,w
  4565  1774  00F3               	movwf	___lwmod@dividend+1
  4566  1775  160A  158A  2703  160A  118A  	fcall	___lwmod
  4567  177A  0870               	movf	?___lwmod,w
  4568  177B  1283               	bcf	3,5	;RP0=0, select bank0
  4569  177C  1303               	bcf	3,6	;RP1=0, select bank0
  4570  177D  00C6               	movwf	??_fround+2
  4571  177E  3001               	movlw	1
  4572  177F                     u430_25:	
  4573  177F  1003               	clrc
  4574  1780  0DC6               	rlf	??_fround+2,f
  4575  1781  3EFF               	addlw	-1
  4576  1782  1D03               	skipz
  4577  1783  2F7F               	goto	u430_25
  4578  1784  1003               	clrc
  4579  1785  0D46               	rlf	??_fround+2,w
  4580  1786  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4581  1787  0084               	movwf	4
  4582  1788  160A  118A  2000  160A  118A  	fcall	stringdir
  4583  178D  00C7               	movwf	??_fround+3
  4584  178E  160A  118A  2000  160A  118A  	fcall	stringdir
  4585  1793  00C8               	movwf	??_fround+4
  4586  1794  160A  118A  2000  160A  118A  	fcall	stringdir
  4587  1799  00C9               	movwf	??_fround+5
  4588  179A  160A  118A  2000  160A  118A  	fcall	stringdir
  4589  179F  00CA               	movwf	??_fround+6
  4590  17A0  084A               	movf	??_fround+6,w
  4591  17A1  00A9               	movwf	___flmul@b+3
  4592  17A2  0849               	movf	??_fround+5,w
  4593  17A3  00A8               	movwf	___flmul@b+2
  4594  17A4  0848               	movf	??_fround+4,w
  4595  17A5  00A7               	movwf	___flmul@b+1
  4596  17A6  0847               	movf	??_fround+3,w
  4597  17A7  00A6               	movwf	___flmul@b
  4598  17A8  0852               	movf	_fround$805+3,w
  4599  17A9  00AD               	movwf	___flmul@a+3
  4600  17AA  0851               	movf	_fround$805+2,w
  4601  17AB  00AC               	movwf	___flmul@a+2
  4602  17AC  0850               	movf	_fround$805+1,w
  4603  17AD  00AB               	movwf	___flmul@a+1
  4604  17AE  084F               	movf	_fround$805,w
  4605  17AF  00AA               	movwf	___flmul@a
  4606  17B0  120A  158A  21A2   	fcall	___flmul
  4607  17B3  1283               	bcf	3,5	;RP0=0, select bank0
  4608  17B4  1303               	bcf	3,6	;RP1=0, select bank0
  4609  17B5  0829               	movf	?___flmul+3,w
  4610  17B6  00C3               	movwf	?_fround+3
  4611  17B7  0828               	movf	?___flmul+2,w
  4612  17B8  00C2               	movwf	?_fround+2
  4613  17B9  0827               	movf	?___flmul+1,w
  4614  17BA  00C1               	movwf	?_fround+1
  4615  17BB  0826               	movf	?___flmul,w
  4616  17BC  00C0               	movwf	?_fround
  4617  17BD  0008               	return
  4618  17BE                     i1l2720:	
  4619                           
  4620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4621  17BE  303F               	movlw	63
  4622  17BF  00A9               	movwf	___flmul@b+3
  4623  17C0  3000               	movlw	0
  4624  17C1  00A8               	movwf	___flmul@b+2
  4625  17C2  3000               	movlw	0
  4626  17C3  00A7               	movwf	___flmul@b+1
  4627  17C4  3000               	movlw	0
  4628  17C5  00A6               	movwf	___flmul@b
  4629  17C6  0853               	movf	fround@prec,w
  4630  17C7  00C4               	movwf	??_fround
  4631  17C8  3001               	movlw	1
  4632  17C9                     u431_25:	
  4633  17C9  1003               	clrc
  4634  17CA  0DC4               	rlf	??_fround,f
  4635  17CB  3EFF               	addlw	-1
  4636  17CC  1D03               	skipz
  4637  17CD  2FC9               	goto	u431_25
  4638  17CE  1003               	clrc
  4639  17CF  0D44               	rlf	??_fround,w
  4640  17D0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4641  17D1  0084               	movwf	4
  4642  17D2  160A  118A  2000  160A  118A  	fcall	stringdir
  4643  17D7  00C5               	movwf	??_fround+1
  4644  17D8  160A  118A  2000  160A  118A  	fcall	stringdir
  4645  17DD  00C6               	movwf	??_fround+2
  4646  17DE  160A  118A  2000  160A  118A  	fcall	stringdir
  4647  17E3  00C7               	movwf	??_fround+3
  4648  17E4  160A  118A  2000  160A  118A  	fcall	stringdir
  4649  17E9  00C8               	movwf	??_fround+4
  4650  17EA  0848               	movf	??_fround+4,w
  4651  17EB  00AD               	movwf	___flmul@a+3
  4652  17EC  0847               	movf	??_fround+3,w
  4653  17ED  00AC               	movwf	___flmul@a+2
  4654  17EE  0846               	movf	??_fround+2,w
  4655  17EF  00AB               	movwf	___flmul@a+1
  4656  17F0  0845               	movf	??_fround+1,w
  4657  17F1  00AA               	movwf	___flmul@a
  4658  17F2  120A  158A  21A2   	fcall	___flmul
  4659  17F5  1283               	bcf	3,5	;RP0=0, select bank0
  4660  17F6  1303               	bcf	3,6	;RP1=0, select bank0
  4661  17F7  0829               	movf	?___flmul+3,w
  4662  17F8  00C3               	movwf	?_fround+3
  4663  17F9  0828               	movf	?___flmul+2,w
  4664  17FA  00C2               	movwf	?_fround+2
  4665  17FB  0827               	movf	?___flmul+1,w
  4666  17FC  00C1               	movwf	?_fround+1
  4667  17FD  0826               	movf	?___flmul,w
  4668  17FE  00C0               	movwf	?_fround
  4669  17FF  0008               	return
  4670  1800                     __end_of_fround:	
  4671                           
  4672                           	psect	text12
  4673  1F03                     __ptext12:	
  4674 ;; *************** function ___lwmod *****************
  4675 ;; Defined at:
  4676 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  divisor         2    0[COMMON] unsigned int 
  4679 ;;  dividend        2    2[COMMON] unsigned int 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  counter         1    5[COMMON] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  2    0[COMMON] unsigned int 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4691 ;;      Params:         4       0       0       0       0
  4692 ;;      Locals:         1       0       0       0       0
  4693 ;;      Temps:          1       0       0       0       0
  4694 ;;      Totals:         6       0       0       0       0
  4695 ;;Total ram usage:        6 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_fround
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           
  4705                           ;psect for function ___lwmod
  4706  1F03                     ___lwmod:	
  4707                           
  4708                           ;incstack = 0
  4709                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4710  1F03  0870               	movf	___lwmod@divisor,w
  4711  1F04  0471               	iorwf	___lwmod@divisor+1,w
  4712  1F05  1903               	btfsc	3,2
  4713  1F06  2F30               	goto	i1l2328
  4714  1F07  01F5               	clrf	___lwmod@counter
  4715  1F08  0AF5               	incf	___lwmod@counter,f
  4716  1F09                     i1l2318:	
  4717  1F09  1BF1               	btfsc	___lwmod@divisor+1,7
  4718  1F0A  2F17               	goto	i1l2320
  4719  1F0B  3001               	movlw	1
  4720  1F0C                     u331_25:	
  4721  1F0C  1003               	clrc
  4722  1F0D  0DF0               	rlf	___lwmod@divisor,f
  4723  1F0E  0DF1               	rlf	___lwmod@divisor+1,f
  4724  1F0F  3EFF               	addlw	-1
  4725  1F10  1D03               	skipz
  4726  1F11  2F0C               	goto	u331_25
  4727  1F12  3001               	movlw	1
  4728  1F13  00F4               	movwf	??___lwmod
  4729  1F14  0874               	movf	??___lwmod,w
  4730  1F15  07F5               	addwf	___lwmod@counter,f
  4731  1F16  2F09               	goto	i1l2318
  4732  1F17                     i1l2320:	
  4733  1F17  0871               	movf	___lwmod@divisor+1,w
  4734  1F18  0273               	subwf	___lwmod@dividend+1,w
  4735  1F19  1D03               	skipz
  4736  1F1A  2F1D               	goto	u333_25
  4737  1F1B  0870               	movf	___lwmod@divisor,w
  4738  1F1C  0272               	subwf	___lwmod@dividend,w
  4739  1F1D                     u333_25:	
  4740  1F1D  1C03               	skipc
  4741  1F1E  2F25               	goto	i1l2324
  4742  1F1F  0870               	movf	___lwmod@divisor,w
  4743  1F20  02F2               	subwf	___lwmod@dividend,f
  4744  1F21  0871               	movf	___lwmod@divisor+1,w
  4745  1F22  1C03               	skipc
  4746  1F23  03F3               	decf	___lwmod@dividend+1,f
  4747  1F24  02F3               	subwf	___lwmod@dividend+1,f
  4748  1F25                     i1l2324:	
  4749  1F25  3001               	movlw	1
  4750  1F26                     u334_25:	
  4751  1F26  1003               	clrc
  4752  1F27  0CF1               	rrf	___lwmod@divisor+1,f
  4753  1F28  0CF0               	rrf	___lwmod@divisor,f
  4754  1F29  3EFF               	addlw	-1
  4755  1F2A  1D03               	skipz
  4756  1F2B  2F26               	goto	u334_25
  4757  1F2C  3001               	movlw	1
  4758  1F2D  02F5               	subwf	___lwmod@counter,f
  4759  1F2E  1D03               	btfss	3,2
  4760  1F2F  2F17               	goto	i1l2320
  4761  1F30                     i1l2328:	
  4762  1F30  0873               	movf	___lwmod@dividend+1,w
  4763  1F31  00F1               	movwf	?___lwmod+1
  4764  1F32  0872               	movf	___lwmod@dividend,w
  4765  1F33  00F0               	movwf	?___lwmod
  4766  1F34  0008               	return
  4767  1F35                     __end_of___lwmod:	
  4768                           
  4769                           	psect	text13
  4770  07BE                     __ptext13:	
  4771 ;; *************** function ___lwdiv *****************
  4772 ;; Defined at:
  4773 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  divisor         2    6[COMMON] unsigned int 
  4776 ;;  dividend        2    8[COMMON] unsigned int 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  quotient        2   11[COMMON] unsigned int 
  4779 ;;  counter         1   13[COMMON] unsigned char 
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  2    6[COMMON] unsigned int 
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4789 ;;      Params:         4       0       0       0       0
  4790 ;;      Locals:         3       0       0       0       0
  4791 ;;      Temps:          1       0       0       0       0
  4792 ;;      Totals:         8       0       0       0       0
  4793 ;;Total ram usage:        8 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_fround
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           
  4803                           ;psect for function ___lwdiv
  4804  07BE                     ___lwdiv:	
  4805                           
  4806                           ;incstack = 0
  4807                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4808  07BE  01FB               	clrf	___lwdiv@quotient
  4809  07BF  01FC               	clrf	___lwdiv@quotient+1
  4810  07C0  0876               	movf	___lwdiv@divisor,w
  4811  07C1  0477               	iorwf	___lwdiv@divisor+1,w
  4812  07C2  1903               	btfsc	3,2
  4813  07C3  2FF5               	goto	i1l2306
  4814  07C4  01FD               	clrf	___lwdiv@counter
  4815  07C5  0AFD               	incf	___lwdiv@counter,f
  4816  07C6                     i1l2294:	
  4817  07C6  1BF7               	btfsc	___lwdiv@divisor+1,7
  4818  07C7  2FD4               	goto	i1l2296
  4819  07C8  3001               	movlw	1
  4820  07C9                     u324_25:	
  4821  07C9  1003               	clrc
  4822  07CA  0DF6               	rlf	___lwdiv@divisor,f
  4823  07CB  0DF7               	rlf	___lwdiv@divisor+1,f
  4824  07CC  3EFF               	addlw	-1
  4825  07CD  1D03               	skipz
  4826  07CE  2FC9               	goto	u324_25
  4827  07CF  3001               	movlw	1
  4828  07D0  00FA               	movwf	??___lwdiv
  4829  07D1  087A               	movf	??___lwdiv,w
  4830  07D2  07FD               	addwf	___lwdiv@counter,f
  4831  07D3  2FC6               	goto	i1l2294
  4832  07D4                     i1l2296:	
  4833  07D4  3001               	movlw	1
  4834  07D5                     u326_25:	
  4835  07D5  1003               	clrc
  4836  07D6  0DFB               	rlf	___lwdiv@quotient,f
  4837  07D7  0DFC               	rlf	___lwdiv@quotient+1,f
  4838  07D8  3EFF               	addlw	-1
  4839  07D9  1D03               	skipz
  4840  07DA  2FD5               	goto	u326_25
  4841  07DB  0877               	movf	___lwdiv@divisor+1,w
  4842  07DC  0279               	subwf	___lwdiv@dividend+1,w
  4843  07DD  1D03               	skipz
  4844  07DE  2FE1               	goto	u327_25
  4845  07DF  0876               	movf	___lwdiv@divisor,w
  4846  07E0  0278               	subwf	___lwdiv@dividend,w
  4847  07E1                     u327_25:	
  4848  07E1  1C03               	skipc
  4849  07E2  2FEA               	goto	i1l2302
  4850  07E3  0876               	movf	___lwdiv@divisor,w
  4851  07E4  02F8               	subwf	___lwdiv@dividend,f
  4852  07E5  0877               	movf	___lwdiv@divisor+1,w
  4853  07E6  1C03               	skipc
  4854  07E7  03F9               	decf	___lwdiv@dividend+1,f
  4855  07E8  02F9               	subwf	___lwdiv@dividend+1,f
  4856  07E9  147B               	bsf	___lwdiv@quotient,0
  4857  07EA                     i1l2302:	
  4858  07EA  3001               	movlw	1
  4859  07EB                     u328_25:	
  4860  07EB  1003               	clrc
  4861  07EC  0CF7               	rrf	___lwdiv@divisor+1,f
  4862  07ED  0CF6               	rrf	___lwdiv@divisor,f
  4863  07EE  3EFF               	addlw	-1
  4864  07EF  1D03               	skipz
  4865  07F0  2FEB               	goto	u328_25
  4866  07F1  3001               	movlw	1
  4867  07F2  02FD               	subwf	___lwdiv@counter,f
  4868  07F3  1D03               	btfss	3,2
  4869  07F4  2FD4               	goto	i1l2296
  4870  07F5                     i1l2306:	
  4871  07F5  087C               	movf	___lwdiv@quotient+1,w
  4872  07F6  00F7               	movwf	?___lwdiv+1
  4873  07F7  087B               	movf	___lwdiv@quotient,w
  4874  07F8  00F6               	movwf	?___lwdiv
  4875  07F9  0008               	return
  4876  07FA                     __end_of___lwdiv:	
  4877                           
  4878                           	psect	text14
  4879  09A2                     __ptext14:	
  4880 ;; *************** function ___flmul *****************
  4881 ;; Defined at:
  4882 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  b               4    6[BANK0 ] unsigned int 
  4885 ;;  a               4   10[BANK0 ] unsigned int 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;  prod            4   26[BANK0 ] struct .
  4888 ;;  grs             4   20[BANK0 ] unsigned long 
  4889 ;;  temp            2   30[BANK0 ] struct .
  4890 ;;  bexp            1   25[BANK0 ] unsigned char 
  4891 ;;  aexp            1   24[BANK0 ] unsigned char 
  4892 ;;  sign            1   19[BANK0 ] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  4    6[BANK0 ] unsigned char 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4902 ;;      Params:         0       8       0       0       0
  4903 ;;      Locals:         0      13       0       0       0
  4904 ;;      Temps:          0       5       0       0       0
  4905 ;;      Totals:         0      26       0       0       0
  4906 ;;Total ram usage:       26 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    1
  4909 ;; This function calls:
  4910 ;;		__Umul8_16
  4911 ;; This function is called by:
  4912 ;;		_my_isr_routine
  4913 ;;		_fround
  4914 ;;		_scale
  4915 ;;		_sprintf
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           
  4920                           ;psect for function ___flmul
  4921  09A2                     ___flmul:	
  4922                           
  4923                           ;incstack = 0
  4924                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4925  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  4926  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  4927  09A4  0829               	movf	___flmul@b+3,w
  4928  09A5  3980               	andlw	128
  4929  09A6  00AE               	movwf	??___flmul
  4930  09A7  082E               	movf	??___flmul,w
  4931  09A8  00B3               	movwf	___flmul@sign
  4932  09A9  0829               	movf	___flmul@b+3,w
  4933  09AA  00AE               	movwf	??___flmul
  4934  09AB  072E               	addwf	??___flmul,w
  4935  09AC  00AF               	movwf	??___flmul+1
  4936  09AD  082F               	movf	??___flmul+1,w
  4937  09AE  00B9               	movwf	___flmul@bexp
  4938  09AF  1BA8               	btfsc	___flmul@b+2,7
  4939  09B0  1439               	bsf	___flmul@bexp,0
  4940  09B1  0839               	movf	___flmul@bexp,w
  4941  09B2  1903               	btfsc	3,2
  4942  09B3  29C1               	goto	i1l2542
  4943  09B4  0A39               	incf	___flmul@bexp,w
  4944  09B5  1D03               	btfss	3,2
  4945  09B6  29BF               	goto	i1l2540
  4946  09B7  3000               	movlw	0
  4947  09B8  00A9               	movwf	___flmul@b+3
  4948  09B9  3000               	movlw	0
  4949  09BA  00A8               	movwf	___flmul@b+2
  4950  09BB  3000               	movlw	0
  4951  09BC  00A7               	movwf	___flmul@b+1
  4952  09BD  3000               	movlw	0
  4953  09BE  00A6               	movwf	___flmul@b
  4954  09BF                     i1l2540:	
  4955  09BF  17A8               	bsf	___flmul@b+2,7
  4956  09C0  29C9               	goto	i1l2544
  4957  09C1                     i1l2542:	
  4958  09C1  3000               	movlw	0
  4959  09C2  00A9               	movwf	___flmul@b+3
  4960  09C3  3000               	movlw	0
  4961  09C4  00A8               	movwf	___flmul@b+2
  4962  09C5  3000               	movlw	0
  4963  09C6  00A7               	movwf	___flmul@b+1
  4964  09C7  3000               	movlw	0
  4965  09C8  00A6               	movwf	___flmul@b
  4966  09C9                     i1l2544:	
  4967  09C9  082D               	movf	___flmul@a+3,w
  4968  09CA  3980               	andlw	128
  4969  09CB  00AE               	movwf	??___flmul
  4970  09CC  082E               	movf	??___flmul,w
  4971  09CD  06B3               	xorwf	___flmul@sign,f
  4972  09CE  082D               	movf	___flmul@a+3,w
  4973  09CF  00AE               	movwf	??___flmul
  4974  09D0  072E               	addwf	??___flmul,w
  4975  09D1  00AF               	movwf	??___flmul+1
  4976  09D2  082F               	movf	??___flmul+1,w
  4977  09D3  00B8               	movwf	___flmul@aexp
  4978  09D4  1BAC               	btfsc	___flmul@a+2,7
  4979  09D5  1438               	bsf	___flmul@aexp,0
  4980  09D6  0838               	movf	___flmul@aexp,w
  4981  09D7  1903               	btfsc	3,2
  4982  09D8  29E6               	goto	i1l2560
  4983  09D9  0A38               	incf	___flmul@aexp,w
  4984  09DA  1D03               	btfss	3,2
  4985  09DB  29E4               	goto	i1l2558
  4986  09DC  3000               	movlw	0
  4987  09DD  00AD               	movwf	___flmul@a+3
  4988  09DE  3000               	movlw	0
  4989  09DF  00AC               	movwf	___flmul@a+2
  4990  09E0  3000               	movlw	0
  4991  09E1  00AB               	movwf	___flmul@a+1
  4992  09E2  3000               	movlw	0
  4993  09E3  00AA               	movwf	___flmul@a
  4994  09E4                     i1l2558:	
  4995  09E4  17AC               	bsf	___flmul@a+2,7
  4996  09E5  29EE               	goto	i1l2562
  4997  09E6                     i1l2560:	
  4998  09E6  3000               	movlw	0
  4999  09E7  00AD               	movwf	___flmul@a+3
  5000  09E8  3000               	movlw	0
  5001  09E9  00AC               	movwf	___flmul@a+2
  5002  09EA  3000               	movlw	0
  5003  09EB  00AB               	movwf	___flmul@a+1
  5004  09EC  3000               	movlw	0
  5005  09ED  00AA               	movwf	___flmul@a
  5006  09EE                     i1l2562:	
  5007  09EE  0838               	movf	___flmul@aexp,w
  5008  09EF  1D03               	btfss	3,2
  5009  09F0  0839               	movf	___flmul@bexp,w
  5010  09F1  1D03               	btfss	3,2
  5011  09F2  29FC               	goto	i1l2570
  5012  09F3  3000               	movlw	0
  5013  09F4  00A9               	movwf	?___flmul+3
  5014  09F5  3000               	movlw	0
  5015  09F6  00A8               	movwf	?___flmul+2
  5016  09F7  3000               	movlw	0
  5017  09F8  00A7               	movwf	?___flmul+1
  5018  09F9  3000               	movlw	0
  5019  09FA  00A6               	movwf	?___flmul
  5020  09FB  0008               	return
  5021  09FC                     i1l2570:	
  5022  09FC  0826               	movf	___flmul@b,w
  5023  09FD  00AE               	movwf	??___flmul
  5024  09FE  082E               	movf	??___flmul,w
  5025  09FF  00F0               	movwf	__Umul8_16@multiplicand
  5026  0A00  082C               	movf	___flmul@a+2,w
  5027  0A01  160A  158A  26B2  120A  158A  	fcall	__Umul8_16
  5028  0A06  0871               	movf	?__Umul8_16+1,w
  5029  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  5030  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  5031  0A09  00BF               	movwf	___flmul@temp+1
  5032  0A0A  0870               	movf	?__Umul8_16,w
  5033  0A0B  00BE               	movwf	___flmul@temp
  5034  0A0C  083E               	movf	___flmul@temp,w
  5035  0A0D  00AE               	movwf	??___flmul
  5036  0A0E  01AF               	clrf	??___flmul+1
  5037  0A0F  01B0               	clrf	??___flmul+2
  5038  0A10  01B1               	clrf	??___flmul+3
  5039  0A11  0831               	movf	??___flmul+3,w
  5040  0A12  00B7               	movwf	___flmul@grs+3
  5041  0A13  0830               	movf	??___flmul+2,w
  5042  0A14  00B6               	movwf	___flmul@grs+2
  5043  0A15  082F               	movf	??___flmul+1,w
  5044  0A16  00B5               	movwf	___flmul@grs+1
  5045  0A17  082E               	movf	??___flmul,w
  5046  0A18  00B4               	movwf	___flmul@grs
  5047  0A19  083F               	movf	___flmul@temp+1,w
  5048  0A1A  00AE               	movwf	??___flmul
  5049  0A1B  01AF               	clrf	??___flmul+1
  5050  0A1C  01B0               	clrf	??___flmul+2
  5051  0A1D  01B1               	clrf	??___flmul+3
  5052  0A1E  0831               	movf	??___flmul+3,w
  5053  0A1F  00BD               	movwf	___flmul@prod+3
  5054  0A20  0830               	movf	??___flmul+2,w
  5055  0A21  00BC               	movwf	___flmul@prod+2
  5056  0A22  082F               	movf	??___flmul+1,w
  5057  0A23  00BB               	movwf	___flmul@prod+1
  5058  0A24  082E               	movf	??___flmul,w
  5059  0A25  00BA               	movwf	___flmul@prod
  5060  0A26  0827               	movf	___flmul@b+1,w
  5061  0A27  00AE               	movwf	??___flmul
  5062  0A28  082E               	movf	??___flmul,w
  5063  0A29  00F0               	movwf	__Umul8_16@multiplicand
  5064  0A2A  082B               	movf	___flmul@a+1,w
  5065  0A2B  160A  158A  26B2  120A  158A  	fcall	__Umul8_16
  5066  0A30  0871               	movf	?__Umul8_16+1,w
  5067  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  5068  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  5069  0A33  00BF               	movwf	___flmul@temp+1
  5070  0A34  0870               	movf	?__Umul8_16,w
  5071  0A35  00BE               	movwf	___flmul@temp
  5072  0A36  083E               	movf	___flmul@temp,w
  5073  0A37  00AE               	movwf	??___flmul
  5074  0A38  01AF               	clrf	??___flmul+1
  5075  0A39  01B0               	clrf	??___flmul+2
  5076  0A3A  01B1               	clrf	??___flmul+3
  5077  0A3B  082E               	movf	??___flmul,w
  5078  0A3C  07B4               	addwf	___flmul@grs,f
  5079  0A3D  082F               	movf	??___flmul+1,w
  5080  0A3E  1103               	clrz
  5081  0A3F  1803               	skipnc
  5082  0A40  3E01               	addlw	1
  5083  0A41  1D03               	btfss	3,2
  5084  0A42  07B5               	addwf	___flmul@grs+1,f
  5085  0A43  0830               	movf	??___flmul+2,w
  5086  0A44  1103               	clrz
  5087  0A45  1803               	skipnc
  5088  0A46  3E01               	addlw	1
  5089  0A47  1D03               	btfss	3,2
  5090  0A48  07B6               	addwf	___flmul@grs+2,f
  5091  0A49  0831               	movf	??___flmul+3,w
  5092  0A4A  1103               	clrz
  5093  0A4B  1803               	skipnc
  5094  0A4C  3E01               	addlw	1
  5095  0A4D  1D03               	btfss	3,2
  5096  0A4E  07B7               	addwf	___flmul@grs+3,f
  5097  0A4F  083F               	movf	___flmul@temp+1,w
  5098  0A50  00AE               	movwf	??___flmul
  5099  0A51  01AF               	clrf	??___flmul+1
  5100  0A52  01B0               	clrf	??___flmul+2
  5101  0A53  01B1               	clrf	??___flmul+3
  5102  0A54  082E               	movf	??___flmul,w
  5103  0A55  07BA               	addwf	___flmul@prod,f
  5104  0A56  082F               	movf	??___flmul+1,w
  5105  0A57  1103               	clrz
  5106  0A58  1803               	skipnc
  5107  0A59  3E01               	addlw	1
  5108  0A5A  1D03               	btfss	3,2
  5109  0A5B  07BB               	addwf	___flmul@prod+1,f
  5110  0A5C  0830               	movf	??___flmul+2,w
  5111  0A5D  1103               	clrz
  5112  0A5E  1803               	skipnc
  5113  0A5F  3E01               	addlw	1
  5114  0A60  1D03               	btfss	3,2
  5115  0A61  07BC               	addwf	___flmul@prod+2,f
  5116  0A62  0831               	movf	??___flmul+3,w
  5117  0A63  1103               	clrz
  5118  0A64  1803               	skipnc
  5119  0A65  3E01               	addlw	1
  5120  0A66  1D03               	btfss	3,2
  5121  0A67  07BD               	addwf	___flmul@prod+3,f
  5122  0A68  0828               	movf	___flmul@b+2,w
  5123  0A69  00AE               	movwf	??___flmul
  5124  0A6A  082E               	movf	??___flmul,w
  5125  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  5126  0A6C  082A               	movf	___flmul@a,w
  5127  0A6D  160A  158A  26B2  120A  158A  	fcall	__Umul8_16
  5128  0A72  0871               	movf	?__Umul8_16+1,w
  5129  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  5130  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  5131  0A75  00BF               	movwf	___flmul@temp+1
  5132  0A76  0870               	movf	?__Umul8_16,w
  5133  0A77  00BE               	movwf	___flmul@temp
  5134  0A78  083E               	movf	___flmul@temp,w
  5135  0A79  00AE               	movwf	??___flmul
  5136  0A7A  01AF               	clrf	??___flmul+1
  5137  0A7B  01B0               	clrf	??___flmul+2
  5138  0A7C  01B1               	clrf	??___flmul+3
  5139  0A7D  082E               	movf	??___flmul,w
  5140  0A7E  07B4               	addwf	___flmul@grs,f
  5141  0A7F  082F               	movf	??___flmul+1,w
  5142  0A80  1103               	clrz
  5143  0A81  1803               	skipnc
  5144  0A82  3E01               	addlw	1
  5145  0A83  1D03               	btfss	3,2
  5146  0A84  07B5               	addwf	___flmul@grs+1,f
  5147  0A85  0830               	movf	??___flmul+2,w
  5148  0A86  1103               	clrz
  5149  0A87  1803               	skipnc
  5150  0A88  3E01               	addlw	1
  5151  0A89  1D03               	btfss	3,2
  5152  0A8A  07B6               	addwf	___flmul@grs+2,f
  5153  0A8B  0831               	movf	??___flmul+3,w
  5154  0A8C  1103               	clrz
  5155  0A8D  1803               	skipnc
  5156  0A8E  3E01               	addlw	1
  5157  0A8F  1D03               	btfss	3,2
  5158  0A90  07B7               	addwf	___flmul@grs+3,f
  5159  0A91  083F               	movf	___flmul@temp+1,w
  5160  0A92  00AE               	movwf	??___flmul
  5161  0A93  01AF               	clrf	??___flmul+1
  5162  0A94  01B0               	clrf	??___flmul+2
  5163  0A95  01B1               	clrf	??___flmul+3
  5164  0A96  082E               	movf	??___flmul,w
  5165  0A97  07BA               	addwf	___flmul@prod,f
  5166  0A98  082F               	movf	??___flmul+1,w
  5167  0A99  1103               	clrz
  5168  0A9A  1803               	skipnc
  5169  0A9B  3E01               	addlw	1
  5170  0A9C  1D03               	btfss	3,2
  5171  0A9D  07BB               	addwf	___flmul@prod+1,f
  5172  0A9E  0830               	movf	??___flmul+2,w
  5173  0A9F  1103               	clrz
  5174  0AA0  1803               	skipnc
  5175  0AA1  3E01               	addlw	1
  5176  0AA2  1D03               	btfss	3,2
  5177  0AA3  07BC               	addwf	___flmul@prod+2,f
  5178  0AA4  0831               	movf	??___flmul+3,w
  5179  0AA5  1103               	clrz
  5180  0AA6  1803               	skipnc
  5181  0AA7  3E01               	addlw	1
  5182  0AA8  1D03               	btfss	3,2
  5183  0AA9  07BD               	addwf	___flmul@prod+3,f
  5184  0AAA  3008               	movlw	8
  5185  0AAB  00AE               	movwf	??___flmul
  5186  0AAC                     u394_25:	
  5187  0AAC  1003               	clrc
  5188  0AAD  0DB4               	rlf	___flmul@grs,f
  5189  0AAE  0DB5               	rlf	___flmul@grs+1,f
  5190  0AAF  0DB6               	rlf	___flmul@grs+2,f
  5191  0AB0  0DB7               	rlf	___flmul@grs+3,f
  5192  0AB1  0BAE               	decfsz	??___flmul,f
  5193  0AB2  2AAC               	goto	u394_25
  5194  0AB3  0827               	movf	___flmul@b+1,w
  5195  0AB4  00AE               	movwf	??___flmul
  5196  0AB5  082E               	movf	??___flmul,w
  5197  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  5198  0AB7  082A               	movf	___flmul@a,w
  5199  0AB8  160A  158A  26B2  120A  158A  	fcall	__Umul8_16
  5200  0ABD  0871               	movf	?__Umul8_16+1,w
  5201  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  5202  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  5203  0AC0  00BF               	movwf	___flmul@temp+1
  5204  0AC1  0870               	movf	?__Umul8_16,w
  5205  0AC2  00BE               	movwf	___flmul@temp
  5206  0AC3  083E               	movf	___flmul@temp,w
  5207  0AC4  00AE               	movwf	??___flmul
  5208  0AC5  083F               	movf	___flmul@temp+1,w
  5209  0AC6  00AF               	movwf	??___flmul+1
  5210  0AC7  01B0               	clrf	??___flmul+2
  5211  0AC8  01B1               	clrf	??___flmul+3
  5212  0AC9  082E               	movf	??___flmul,w
  5213  0ACA  07B4               	addwf	___flmul@grs,f
  5214  0ACB  082F               	movf	??___flmul+1,w
  5215  0ACC  1103               	clrz
  5216  0ACD  1803               	skipnc
  5217  0ACE  3E01               	addlw	1
  5218  0ACF  1D03               	btfss	3,2
  5219  0AD0  07B5               	addwf	___flmul@grs+1,f
  5220  0AD1  0830               	movf	??___flmul+2,w
  5221  0AD2  1103               	clrz
  5222  0AD3  1803               	skipnc
  5223  0AD4  3E01               	addlw	1
  5224  0AD5  1D03               	btfss	3,2
  5225  0AD6  07B6               	addwf	___flmul@grs+2,f
  5226  0AD7  0831               	movf	??___flmul+3,w
  5227  0AD8  1103               	clrz
  5228  0AD9  1803               	skipnc
  5229  0ADA  3E01               	addlw	1
  5230  0ADB  1D03               	btfss	3,2
  5231  0ADC  07B7               	addwf	___flmul@grs+3,f
  5232  0ADD  0826               	movf	___flmul@b,w
  5233  0ADE  00AE               	movwf	??___flmul
  5234  0ADF  082E               	movf	??___flmul,w
  5235  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5236  0AE1  082B               	movf	___flmul@a+1,w
  5237  0AE2  160A  158A  26B2  120A  158A  	fcall	__Umul8_16
  5238  0AE7  0871               	movf	?__Umul8_16+1,w
  5239  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5240  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5241  0AEA  00BF               	movwf	___flmul@temp+1
  5242  0AEB  0870               	movf	?__Umul8_16,w
  5243  0AEC  00BE               	movwf	___flmul@temp
  5244  0AED  083E               	movf	___flmul@temp,w
  5245  0AEE  00AE               	movwf	??___flmul
  5246  0AEF  083F               	movf	___flmul@temp+1,w
  5247  0AF0  00AF               	movwf	??___flmul+1
  5248  0AF1  01B0               	clrf	??___flmul+2
  5249  0AF2  01B1               	clrf	??___flmul+3
  5250  0AF3  082E               	movf	??___flmul,w
  5251  0AF4  07B4               	addwf	___flmul@grs,f
  5252  0AF5  082F               	movf	??___flmul+1,w
  5253  0AF6  1103               	clrz
  5254  0AF7  1803               	skipnc
  5255  0AF8  3E01               	addlw	1
  5256  0AF9  1D03               	btfss	3,2
  5257  0AFA  07B5               	addwf	___flmul@grs+1,f
  5258  0AFB  0830               	movf	??___flmul+2,w
  5259  0AFC  1103               	clrz
  5260  0AFD  1803               	skipnc
  5261  0AFE  3E01               	addlw	1
  5262  0AFF  1D03               	btfss	3,2
  5263  0B00  07B6               	addwf	___flmul@grs+2,f
  5264  0B01  0831               	movf	??___flmul+3,w
  5265  0B02  1103               	clrz
  5266  0B03  1803               	skipnc
  5267  0B04  3E01               	addlw	1
  5268  0B05  1D03               	btfss	3,2
  5269  0B06  07B7               	addwf	___flmul@grs+3,f
  5270  0B07  3008               	movlw	8
  5271  0B08  00AE               	movwf	??___flmul
  5272  0B09                     u397_25:	
  5273  0B09  1003               	clrc
  5274  0B0A  0DB4               	rlf	___flmul@grs,f
  5275  0B0B  0DB5               	rlf	___flmul@grs+1,f
  5276  0B0C  0DB6               	rlf	___flmul@grs+2,f
  5277  0B0D  0DB7               	rlf	___flmul@grs+3,f
  5278  0B0E  0BAE               	decfsz	??___flmul,f
  5279  0B0F  2B09               	goto	u397_25
  5280  0B10  0826               	movf	___flmul@b,w
  5281  0B11  00AE               	movwf	??___flmul
  5282  0B12  082E               	movf	??___flmul,w
  5283  0B13  00F0               	movwf	__Umul8_16@multiplicand
  5284  0B14  082A               	movf	___flmul@a,w
  5285  0B15  160A  158A  26B2  120A  158A  	fcall	__Umul8_16
  5286  0B1A  0871               	movf	?__Umul8_16+1,w
  5287  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5288  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5289  0B1D  00BF               	movwf	___flmul@temp+1
  5290  0B1E  0870               	movf	?__Umul8_16,w
  5291  0B1F  00BE               	movwf	___flmul@temp
  5292  0B20  083E               	movf	___flmul@temp,w
  5293  0B21  00AE               	movwf	??___flmul
  5294  0B22  083F               	movf	___flmul@temp+1,w
  5295  0B23  00AF               	movwf	??___flmul+1
  5296  0B24  01B0               	clrf	??___flmul+2
  5297  0B25  01B1               	clrf	??___flmul+3
  5298  0B26  082E               	movf	??___flmul,w
  5299  0B27  07B4               	addwf	___flmul@grs,f
  5300  0B28  082F               	movf	??___flmul+1,w
  5301  0B29  1103               	clrz
  5302  0B2A  1803               	skipnc
  5303  0B2B  3E01               	addlw	1
  5304  0B2C  1D03               	btfss	3,2
  5305  0B2D  07B5               	addwf	___flmul@grs+1,f
  5306  0B2E  0830               	movf	??___flmul+2,w
  5307  0B2F  1103               	clrz
  5308  0B30  1803               	skipnc
  5309  0B31  3E01               	addlw	1
  5310  0B32  1D03               	btfss	3,2
  5311  0B33  07B6               	addwf	___flmul@grs+2,f
  5312  0B34  0831               	movf	??___flmul+3,w
  5313  0B35  1103               	clrz
  5314  0B36  1803               	skipnc
  5315  0B37  3E01               	addlw	1
  5316  0B38  1D03               	btfss	3,2
  5317  0B39  07B7               	addwf	___flmul@grs+3,f
  5318  0B3A  0827               	movf	___flmul@b+1,w
  5319  0B3B  00AE               	movwf	??___flmul
  5320  0B3C  082E               	movf	??___flmul,w
  5321  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  5322  0B3E  082C               	movf	___flmul@a+2,w
  5323  0B3F  160A  158A  26B2  120A  158A  	fcall	__Umul8_16
  5324  0B44  0871               	movf	?__Umul8_16+1,w
  5325  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5326  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5327  0B47  00BF               	movwf	___flmul@temp+1
  5328  0B48  0870               	movf	?__Umul8_16,w
  5329  0B49  00BE               	movwf	___flmul@temp
  5330  0B4A  083E               	movf	___flmul@temp,w
  5331  0B4B  00AE               	movwf	??___flmul
  5332  0B4C  083F               	movf	___flmul@temp+1,w
  5333  0B4D  00AF               	movwf	??___flmul+1
  5334  0B4E  01B0               	clrf	??___flmul+2
  5335  0B4F  01B1               	clrf	??___flmul+3
  5336  0B50  082E               	movf	??___flmul,w
  5337  0B51  07BA               	addwf	___flmul@prod,f
  5338  0B52  082F               	movf	??___flmul+1,w
  5339  0B53  1103               	clrz
  5340  0B54  1803               	skipnc
  5341  0B55  3E01               	addlw	1
  5342  0B56  1D03               	btfss	3,2
  5343  0B57  07BB               	addwf	___flmul@prod+1,f
  5344  0B58  0830               	movf	??___flmul+2,w
  5345  0B59  1103               	clrz
  5346  0B5A  1803               	skipnc
  5347  0B5B  3E01               	addlw	1
  5348  0B5C  1D03               	btfss	3,2
  5349  0B5D  07BC               	addwf	___flmul@prod+2,f
  5350  0B5E  0831               	movf	??___flmul+3,w
  5351  0B5F  1103               	clrz
  5352  0B60  1803               	skipnc
  5353  0B61  3E01               	addlw	1
  5354  0B62  1D03               	btfss	3,2
  5355  0B63  07BD               	addwf	___flmul@prod+3,f
  5356  0B64  0828               	movf	___flmul@b+2,w
  5357  0B65  00AE               	movwf	??___flmul
  5358  0B66  082E               	movf	??___flmul,w
  5359  0B67  00F0               	movwf	__Umul8_16@multiplicand
  5360  0B68  082B               	movf	___flmul@a+1,w
  5361  0B69  160A  158A  26B2  120A  158A  	fcall	__Umul8_16
  5362  0B6E  0871               	movf	?__Umul8_16+1,w
  5363  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5364  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5365  0B71  00BF               	movwf	___flmul@temp+1
  5366  0B72  0870               	movf	?__Umul8_16,w
  5367  0B73  00BE               	movwf	___flmul@temp
  5368  0B74  083E               	movf	___flmul@temp,w
  5369  0B75  00AE               	movwf	??___flmul
  5370  0B76  083F               	movf	___flmul@temp+1,w
  5371  0B77  00AF               	movwf	??___flmul+1
  5372  0B78  01B0               	clrf	??___flmul+2
  5373  0B79  01B1               	clrf	??___flmul+3
  5374  0B7A  082E               	movf	??___flmul,w
  5375  0B7B  07BA               	addwf	___flmul@prod,f
  5376  0B7C  082F               	movf	??___flmul+1,w
  5377  0B7D  1103               	clrz
  5378  0B7E  1803               	skipnc
  5379  0B7F  3E01               	addlw	1
  5380  0B80  1D03               	btfss	3,2
  5381  0B81  07BB               	addwf	___flmul@prod+1,f
  5382  0B82  0830               	movf	??___flmul+2,w
  5383  0B83  1103               	clrz
  5384  0B84  1803               	skipnc
  5385  0B85  3E01               	addlw	1
  5386  0B86  1D03               	btfss	3,2
  5387  0B87  07BC               	addwf	___flmul@prod+2,f
  5388  0B88  0831               	movf	??___flmul+3,w
  5389  0B89  1103               	clrz
  5390  0B8A  1803               	skipnc
  5391  0B8B  3E01               	addlw	1
  5392  0B8C  1D03               	btfss	3,2
  5393  0B8D  07BD               	addwf	___flmul@prod+3,f
  5394  0B8E  0828               	movf	___flmul@b+2,w
  5395  0B8F  00AE               	movwf	??___flmul
  5396  0B90  082E               	movf	??___flmul,w
  5397  0B91  00F0               	movwf	__Umul8_16@multiplicand
  5398  0B92  082C               	movf	___flmul@a+2,w
  5399  0B93  160A  158A  26B2  120A  158A  	fcall	__Umul8_16
  5400  0B98  0871               	movf	?__Umul8_16+1,w
  5401  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5402  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5403  0B9B  00BF               	movwf	___flmul@temp+1
  5404  0B9C  0870               	movf	?__Umul8_16,w
  5405  0B9D  00BE               	movwf	___flmul@temp
  5406  0B9E  083E               	movf	___flmul@temp,w
  5407  0B9F  00AE               	movwf	??___flmul
  5408  0BA0  083F               	movf	___flmul@temp+1,w
  5409  0BA1  00AF               	movwf	??___flmul+1
  5410  0BA2  01B0               	clrf	??___flmul+2
  5411  0BA3  01B1               	clrf	??___flmul+3
  5412  0BA4  3008               	movlw	8
  5413  0BA5                     u401_25:	
  5414  0BA5  1003               	clrc
  5415  0BA6  0DAE               	rlf	??___flmul,f
  5416  0BA7  0DAF               	rlf	??___flmul+1,f
  5417  0BA8  0DB0               	rlf	??___flmul+2,f
  5418  0BA9  0DB1               	rlf	??___flmul+3,f
  5419  0BAA  3EFF               	addlw	-1
  5420  0BAB  1D03               	skipz
  5421  0BAC  2BA5               	goto	u401_25
  5422  0BAD  082E               	movf	??___flmul,w
  5423  0BAE  07BA               	addwf	___flmul@prod,f
  5424  0BAF  082F               	movf	??___flmul+1,w
  5425  0BB0  1103               	clrz
  5426  0BB1  1803               	skipnc
  5427  0BB2  3E01               	addlw	1
  5428  0BB3  1D03               	btfss	3,2
  5429  0BB4  07BB               	addwf	___flmul@prod+1,f
  5430  0BB5  0830               	movf	??___flmul+2,w
  5431  0BB6  1103               	clrz
  5432  0BB7  1803               	skipnc
  5433  0BB8  3E01               	addlw	1
  5434  0BB9  1D03               	btfss	3,2
  5435  0BBA  07BC               	addwf	___flmul@prod+2,f
  5436  0BBB  0831               	movf	??___flmul+3,w
  5437  0BBC  1103               	clrz
  5438  0BBD  1803               	skipnc
  5439  0BBE  3E01               	addlw	1
  5440  0BBF  1D03               	btfss	3,2
  5441  0BC0  07BD               	addwf	___flmul@prod+3,f
  5442  0BC1  0834               	movf	___flmul@grs,w
  5443  0BC2  00AE               	movwf	??___flmul
  5444  0BC3  0835               	movf	___flmul@grs+1,w
  5445  0BC4  00AF               	movwf	??___flmul+1
  5446  0BC5  0836               	movf	___flmul@grs+2,w
  5447  0BC6  00B0               	movwf	??___flmul+2
  5448  0BC7  0837               	movf	___flmul@grs+3,w
  5449  0BC8  00B1               	movwf	??___flmul+3
  5450  0BC9  3018               	movlw	24
  5451  0BCA                     u403_25:	
  5452  0BCA  1003               	clrc
  5453  0BCB  0CB1               	rrf	??___flmul+3,f
  5454  0BCC  0CB0               	rrf	??___flmul+2,f
  5455  0BCD  0CAF               	rrf	??___flmul+1,f
  5456  0BCE  0CAE               	rrf	??___flmul,f
  5457  0BCF  3EFF               	addlw	-1
  5458  0BD0  1D03               	skipz
  5459  0BD1  2BCA               	goto	u403_25
  5460  0BD2  082E               	movf	??___flmul,w
  5461  0BD3  07BA               	addwf	___flmul@prod,f
  5462  0BD4  082F               	movf	??___flmul+1,w
  5463  0BD5  1103               	clrz
  5464  0BD6  1803               	skipnc
  5465  0BD7  3E01               	addlw	1
  5466  0BD8  1D03               	btfss	3,2
  5467  0BD9  07BB               	addwf	___flmul@prod+1,f
  5468  0BDA  0830               	movf	??___flmul+2,w
  5469  0BDB  1103               	clrz
  5470  0BDC  1803               	skipnc
  5471  0BDD  3E01               	addlw	1
  5472  0BDE  1D03               	btfss	3,2
  5473  0BDF  07BC               	addwf	___flmul@prod+2,f
  5474  0BE0  0831               	movf	??___flmul+3,w
  5475  0BE1  1103               	clrz
  5476  0BE2  1803               	skipnc
  5477  0BE3  3E01               	addlw	1
  5478  0BE4  1D03               	btfss	3,2
  5479  0BE5  07BD               	addwf	___flmul@prod+3,f
  5480  0BE6  3008               	movlw	8
  5481  0BE7  00AE               	movwf	??___flmul
  5482  0BE8                     u405_25:	
  5483  0BE8  1003               	clrc
  5484  0BE9  0DB4               	rlf	___flmul@grs,f
  5485  0BEA  0DB5               	rlf	___flmul@grs+1,f
  5486  0BEB  0DB6               	rlf	___flmul@grs+2,f
  5487  0BEC  0DB7               	rlf	___flmul@grs+3,f
  5488  0BED  0BAE               	decfsz	??___flmul,f
  5489  0BEE  2BE8               	goto	u405_25
  5490  0BEF  0839               	movf	___flmul@bexp,w
  5491  0BF0  0738               	addwf	___flmul@aexp,w
  5492  0BF1  00AE               	movwf	??___flmul
  5493  0BF2  01AF               	clrf	??___flmul+1
  5494  0BF3  0DAF               	rlf	??___flmul+1,f
  5495  0BF4  082E               	movf	??___flmul,w
  5496  0BF5  3E82               	addlw	130
  5497  0BF6  00BE               	movwf	___flmul@temp
  5498  0BF7  082F               	movf	??___flmul+1,w
  5499  0BF8  1803               	skipnc
  5500  0BF9  3E01               	addlw	1
  5501  0BFA  3EFF               	addlw	255
  5502  0BFB  00BF               	movwf	___flmul@temp+1
  5503  0BFC                     i1l2622:	
  5504  0BFC  1BBC               	btfsc	___flmul@prod+2,7
  5505  0BFD  2C19               	goto	i1l2624
  5506  0BFE  3001               	movlw	1
  5507  0BFF  00AE               	movwf	??___flmul
  5508  0C00                     u406_25:	
  5509  0C00  1003               	clrc
  5510  0C01  0DBA               	rlf	___flmul@prod,f
  5511  0C02  0DBB               	rlf	___flmul@prod+1,f
  5512  0C03  0DBC               	rlf	___flmul@prod+2,f
  5513  0C04  0DBD               	rlf	___flmul@prod+3,f
  5514  0C05  0BAE               	decfsz	??___flmul,f
  5515  0C06  2C00               	goto	u406_25
  5516  0C07  1BB7               	btfsc	___flmul@grs+3,7
  5517  0C08  143A               	bsf	___flmul@prod,0
  5518  0C09  3001               	movlw	1
  5519  0C0A  00AE               	movwf	??___flmul
  5520  0C0B                     u408_25:	
  5521  0C0B  1003               	clrc
  5522  0C0C  0DB4               	rlf	___flmul@grs,f
  5523  0C0D  0DB5               	rlf	___flmul@grs+1,f
  5524  0C0E  0DB6               	rlf	___flmul@grs+2,f
  5525  0C0F  0DB7               	rlf	___flmul@grs+3,f
  5526  0C10  0BAE               	decfsz	??___flmul,f
  5527  0C11  2C0B               	goto	u408_25
  5528  0C12  30FF               	movlw	255
  5529  0C13  07BE               	addwf	___flmul@temp,f
  5530  0C14  1803               	skipnc
  5531  0C15  0ABF               	incf	___flmul@temp+1,f
  5532  0C16  30FF               	movlw	255
  5533  0C17  07BF               	addwf	___flmul@temp+1,f
  5534  0C18  2BFC               	goto	i1l2622
  5535  0C19                     i1l2624:	
  5536  0C19  01B8               	clrf	___flmul@aexp
  5537  0C1A  1FB7               	btfss	___flmul@grs+3,7
  5538  0C1B  2C32               	goto	i1l2634
  5539  0C1C  30FF               	movlw	255
  5540  0C1D  0534               	andwf	___flmul@grs,w
  5541  0C1E  00AE               	movwf	??___flmul
  5542  0C1F  30FF               	movlw	255
  5543  0C20  0535               	andwf	___flmul@grs+1,w
  5544  0C21  00AF               	movwf	??___flmul+1
  5545  0C22  30FF               	movlw	255
  5546  0C23  0536               	andwf	___flmul@grs+2,w
  5547  0C24  00B0               	movwf	??___flmul+2
  5548  0C25  307F               	movlw	127
  5549  0C26  0537               	andwf	___flmul@grs+3,w
  5550  0C27  00B1               	movwf	??___flmul+3
  5551  0C28  0831               	movf	??___flmul+3,w
  5552  0C29  0430               	iorwf	??___flmul+2,w
  5553  0C2A  042F               	iorwf	??___flmul+1,w
  5554  0C2B  042E               	iorwf	??___flmul,w
  5555  0C2C  1903               	skipnz
  5556  0C2D  183A               	btfsc	___flmul@prod,0
  5557  0C2E  2C30               	goto	i1l2630
  5558  0C2F  2C32               	goto	i1l2634
  5559  0C30                     i1l2630:	
  5560  0C30  01B8               	clrf	___flmul@aexp
  5561  0C31  0AB8               	incf	___flmul@aexp,f
  5562  0C32                     i1l2634:	
  5563  0C32  0838               	movf	___flmul@aexp,w
  5564  0C33  1903               	btfsc	3,2
  5565  0C34  2C64               	goto	i1l2644
  5566  0C35  3001               	movlw	1
  5567  0C36  07BA               	addwf	___flmul@prod,f
  5568  0C37  3000               	movlw	0
  5569  0C38  1803               	skipnc
  5570  0C39  3001               	movlw	1
  5571  0C3A  07BB               	addwf	___flmul@prod+1,f
  5572  0C3B  3000               	movlw	0
  5573  0C3C  1803               	skipnc
  5574  0C3D  3001               	movlw	1
  5575  0C3E  07BC               	addwf	___flmul@prod+2,f
  5576  0C3F  3000               	movlw	0
  5577  0C40  1803               	skipnc
  5578  0C41  3001               	movlw	1
  5579  0C42  07BD               	addwf	___flmul@prod+3,f
  5580  0C43  1C3D               	btfss	___flmul@prod+3,0
  5581  0C44  2C64               	goto	i1l2644
  5582  0C45  083A               	movf	___flmul@prod,w
  5583  0C46  00AE               	movwf	??___flmul
  5584  0C47  083B               	movf	___flmul@prod+1,w
  5585  0C48  00AF               	movwf	??___flmul+1
  5586  0C49  083C               	movf	___flmul@prod+2,w
  5587  0C4A  00B0               	movwf	??___flmul+2
  5588  0C4B  083D               	movf	___flmul@prod+3,w
  5589  0C4C  00B1               	movwf	??___flmul+3
  5590  0C4D  3001               	movlw	1
  5591  0C4E  00B2               	movwf	??___flmul+4
  5592  0C4F                     u415_25:	
  5593  0C4F  0D31               	rlf	??___flmul+3,w
  5594  0C50  0CB1               	rrf	??___flmul+3,f
  5595  0C51  0CB0               	rrf	??___flmul+2,f
  5596  0C52  0CAF               	rrf	??___flmul+1,f
  5597  0C53  0CAE               	rrf	??___flmul,f
  5598  0C54  0BB2               	decfsz	??___flmul+4,f
  5599  0C55  2C4F               	goto	u415_25
  5600  0C56  0831               	movf	??___flmul+3,w
  5601  0C57  00BD               	movwf	___flmul@prod+3
  5602  0C58  0830               	movf	??___flmul+2,w
  5603  0C59  00BC               	movwf	___flmul@prod+2
  5604  0C5A  082F               	movf	??___flmul+1,w
  5605  0C5B  00BB               	movwf	___flmul@prod+1
  5606  0C5C  082E               	movf	??___flmul,w
  5607  0C5D  00BA               	movwf	___flmul@prod
  5608  0C5E  3001               	movlw	1
  5609  0C5F  07BE               	addwf	___flmul@temp,f
  5610  0C60  1803               	skipnc
  5611  0C61  0ABF               	incf	___flmul@temp+1,f
  5612  0C62  3000               	movlw	0
  5613  0C63  07BF               	addwf	___flmul@temp+1,f
  5614  0C64                     i1l2644:	
  5615  0C64  083F               	movf	___flmul@temp+1,w
  5616  0C65  3A80               	xorlw	128
  5617  0C66  00FF               	movwf	127
  5618  0C67  3080               	movlw	128
  5619  0C68  027F               	subwf	127,w
  5620  0C69  1D03               	skipz
  5621  0C6A  2C6D               	goto	u416_25
  5622  0C6B  30FF               	movlw	255
  5623  0C6C  023E               	subwf	___flmul@temp,w
  5624  0C6D                     u416_25:	
  5625  0C6D  1C03               	skipc
  5626  0C6E  2C7A               	goto	i1l2648
  5627  0C6F  307F               	movlw	127
  5628  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5629  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5630  0C72  00BD               	movwf	___flmul@prod+3
  5631  0C73  3080               	movlw	128
  5632  0C74  00BC               	movwf	___flmul@prod+2
  5633  0C75  3000               	movlw	0
  5634  0C76  00BB               	movwf	___flmul@prod+1
  5635  0C77  3000               	movlw	0
  5636  0C78  00BA               	movwf	___flmul@prod
  5637  0C79  2CAA               	goto	i1l723
  5638  0C7A                     i1l2648:	
  5639  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5640  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5641  0C7C  083F               	movf	___flmul@temp+1,w
  5642  0C7D  3A80               	xorlw	128
  5643  0C7E  00FF               	movwf	127
  5644  0C7F  3080               	movlw	128
  5645  0C80  027F               	subwf	127,w
  5646  0C81  1D03               	skipz
  5647  0C82  2C85               	goto	u417_25
  5648  0C83  3001               	movlw	1
  5649  0C84  023E               	subwf	___flmul@temp,w
  5650  0C85                     u417_25:	
  5651  0C85  1803               	skipnc
  5652  0C86  2C93               	goto	i1l2654
  5653  0C87  3000               	movlw	0
  5654  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5655  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5656  0C8A  00BD               	movwf	___flmul@prod+3
  5657  0C8B  3000               	movlw	0
  5658  0C8C  00BC               	movwf	___flmul@prod+2
  5659  0C8D  3000               	movlw	0
  5660  0C8E  00BB               	movwf	___flmul@prod+1
  5661  0C8F  3000               	movlw	0
  5662  0C90  00BA               	movwf	___flmul@prod
  5663  0C91  01B3               	clrf	___flmul@sign
  5664  0C92  2CAA               	goto	i1l723
  5665  0C93                     i1l2654:	
  5666  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5667  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5668  0C95  083E               	movf	___flmul@temp,w
  5669  0C96  00AE               	movwf	??___flmul
  5670  0C97  082E               	movf	??___flmul,w
  5671  0C98  00B9               	movwf	___flmul@bexp
  5672  0C99  30FF               	movlw	255
  5673  0C9A  05BA               	andwf	___flmul@prod,f
  5674  0C9B  30FF               	movlw	255
  5675  0C9C  05BB               	andwf	___flmul@prod+1,f
  5676  0C9D  307F               	movlw	127
  5677  0C9E  05BC               	andwf	___flmul@prod+2,f
  5678  0C9F  3000               	movlw	0
  5679  0CA0  05BD               	andwf	___flmul@prod+3,f
  5680  0CA1  1839               	btfsc	___flmul@bexp,0
  5681  0CA2  17BC               	bsf	___flmul@prod+2,7
  5682  0CA3  0839               	movf	___flmul@bexp,w
  5683  0CA4  00AE               	movwf	??___flmul
  5684  0CA5  1003               	clrc
  5685  0CA6  0C2E               	rrf	??___flmul,w
  5686  0CA7  00AF               	movwf	??___flmul+1
  5687  0CA8  082F               	movf	??___flmul+1,w
  5688  0CA9  00BD               	movwf	___flmul@prod+3
  5689  0CAA                     i1l723:	
  5690  0CAA  0833               	movf	___flmul@sign,w
  5691  0CAB  00AE               	movwf	??___flmul
  5692  0CAC  082E               	movf	??___flmul,w
  5693  0CAD  04BD               	iorwf	___flmul@prod+3,f
  5694  0CAE  083D               	movf	___flmul@prod+3,w
  5695  0CAF  00A9               	movwf	?___flmul+3
  5696  0CB0  083C               	movf	___flmul@prod+2,w
  5697  0CB1  00A8               	movwf	?___flmul+2
  5698  0CB2  083B               	movf	___flmul@prod+1,w
  5699  0CB3  00A7               	movwf	?___flmul+1
  5700  0CB4  083A               	movf	___flmul@prod,w
  5701  0CB5  00A6               	movwf	?___flmul
  5702  0CB6  0008               	return
  5703  0CB7                     __end_of___flmul:	
  5704                           
  5705                           	psect	text15
  5706  1EB2                     __ptext15:	
  5707 ;; *************** function __Umul8_16 *****************
  5708 ;; Defined at:
  5709 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  multiplier      1    wreg     unsigned char 
  5712 ;;  multiplicand    1    0[COMMON] unsigned char 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  multiplier      1    8[COMMON] unsigned char 
  5715 ;;  word_mpld       2    6[COMMON] unsigned int 
  5716 ;;  product         2    4[COMMON] unsigned int 
  5717 ;; Return value:  Size  Location     Type
  5718 ;;                  2    0[COMMON] unsigned int 
  5719 ;; Registers used:
  5720 ;;		wreg, status,2, status,0
  5721 ;; Tracked objects:
  5722 ;;		On entry : 0/0
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5726 ;;      Params:         2       0       0       0       0
  5727 ;;      Locals:         5       0       0       0       0
  5728 ;;      Temps:          2       0       0       0       0
  5729 ;;      Totals:         9       0       0       0       0
  5730 ;;Total ram usage:        9 bytes
  5731 ;; Hardware stack levels used:    1
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		___flmul
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           
  5740                           ;psect for function __Umul8_16
  5741  1EB2                     __Umul8_16:	
  5742                           
  5743                           ;incstack = 0
  5744                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5745                           ;__Umul8_16@multiplier stored from wreg
  5746  1EB2  00F8               	movwf	__Umul8_16@multiplier
  5747  1EB3  01F4               	clrf	__Umul8_16@product
  5748  1EB4  01F5               	clrf	__Umul8_16@product+1
  5749  1EB5  0870               	movf	__Umul8_16@multiplicand,w
  5750  1EB6  00F2               	movwf	??__Umul8_16
  5751  1EB7  01F3               	clrf	??__Umul8_16+1
  5752  1EB8  0872               	movf	??__Umul8_16,w
  5753  1EB9  00F6               	movwf	__Umul8_16@word_mpld
  5754  1EBA  0873               	movf	??__Umul8_16+1,w
  5755  1EBB  00F7               	movwf	__Umul8_16@word_mpld+1
  5756  1EBC                     i1l2182:	
  5757  1EBC  1C78               	btfss	__Umul8_16@multiplier,0
  5758  1EBD  2EC4               	goto	i1l772
  5759  1EBE  0876               	movf	__Umul8_16@word_mpld,w
  5760  1EBF  07F4               	addwf	__Umul8_16@product,f
  5761  1EC0  1803               	skipnc
  5762  1EC1  0AF5               	incf	__Umul8_16@product+1,f
  5763  1EC2  0877               	movf	__Umul8_16@word_mpld+1,w
  5764  1EC3  07F5               	addwf	__Umul8_16@product+1,f
  5765  1EC4                     i1l772:	
  5766  1EC4  3001               	movlw	1
  5767  1EC5                     u298_25:	
  5768  1EC5  1003               	clrc
  5769  1EC6  0DF6               	rlf	__Umul8_16@word_mpld,f
  5770  1EC7  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5771  1EC8  3EFF               	addlw	-1
  5772  1EC9  1D03               	skipz
  5773  1ECA  2EC5               	goto	u298_25
  5774  1ECB  1003               	clrc
  5775  1ECC  0CF8               	rrf	__Umul8_16@multiplier,f
  5776  1ECD  0878               	movf	__Umul8_16@multiplier,w
  5777  1ECE  1D03               	btfss	3,2
  5778  1ECF  2EBC               	goto	i1l2182
  5779  1ED0  0875               	movf	__Umul8_16@product+1,w
  5780  1ED1  00F1               	movwf	?__Umul8_16+1
  5781  1ED2  0874               	movf	__Umul8_16@product,w
  5782  1ED3  00F0               	movwf	?__Umul8_16
  5783  1ED4  0008               	return
  5784  1ED5                     __end_of__Umul8_16:	
  5785                           
  5786                           	psect	text16
  5787  084F                     __ptext16:	
  5788 ;; *************** function __tdiv_to_l_ *****************
  5789 ;; Defined at:
  5790 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  f1              4    0[COMMON] float 
  5793 ;;  f2              4    4[COMMON] float 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  quot            4    0[BANK0 ] unsigned long 
  5796 ;;  exp1            1    5[BANK0 ] unsigned char 
  5797 ;;  cntr            1    4[BANK0 ] unsigned char 
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  4    0[COMMON] unsigned long 
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5807 ;;      Params:         8       0       0       0       0
  5808 ;;      Locals:         0       6       0       0       0
  5809 ;;      Temps:          4       0       0       0       0
  5810 ;;      Totals:        12       6       0       0       0
  5811 ;;Total ram usage:       18 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_sprintf
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           
  5821                           ;psect for function __tdiv_to_l_
  5822  084F                     __tdiv_to_l_:	
  5823                           
  5824                           ;incstack = 0
  5825                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5826  084F  0870               	movf	__tdiv_to_l_@f1,w
  5827  0850  00F8               	movwf	??__tdiv_to_l_
  5828  0851  0871               	movf	__tdiv_to_l_@f1+1,w
  5829  0852  00F9               	movwf	??__tdiv_to_l_+1
  5830  0853  0872               	movf	__tdiv_to_l_@f1+2,w
  5831  0854  00FA               	movwf	??__tdiv_to_l_+2
  5832  0855  1003               	clrc
  5833  0856  0D79               	rlf	??__tdiv_to_l_+1,w
  5834  0857  0D7A               	rlf	??__tdiv_to_l_+2,w
  5835  0858  00FB               	movwf	??__tdiv_to_l_+3
  5836  0859  087B               	movf	??__tdiv_to_l_+3,w
  5837  085A  1283               	bcf	3,5	;RP0=0, select bank0
  5838  085B  1303               	bcf	3,6	;RP1=0, select bank0
  5839  085C  00A5               	movwf	__tdiv_to_l_@exp1
  5840  085D  0825               	movf	__tdiv_to_l_@exp1,w
  5841  085E  1D03               	btfss	3,2
  5842  085F  2869               	goto	i1l2770
  5843  0860                     i1l2766:	
  5844  0860  3000               	movlw	0
  5845  0861  00F3               	movwf	?__tdiv_to_l_+3
  5846  0862  3000               	movlw	0
  5847  0863  00F2               	movwf	?__tdiv_to_l_+2
  5848  0864  3000               	movlw	0
  5849  0865  00F1               	movwf	?__tdiv_to_l_+1
  5850  0866  3000               	movlw	0
  5851  0867  00F0               	movwf	?__tdiv_to_l_
  5852  0868  0008               	return
  5853  0869                     i1l2770:	
  5854  0869  0874               	movf	__tdiv_to_l_@f2,w
  5855  086A  00F8               	movwf	??__tdiv_to_l_
  5856  086B  0875               	movf	__tdiv_to_l_@f2+1,w
  5857  086C  00F9               	movwf	??__tdiv_to_l_+1
  5858  086D  0876               	movf	__tdiv_to_l_@f2+2,w
  5859  086E  00FA               	movwf	??__tdiv_to_l_+2
  5860  086F  1003               	clrc
  5861  0870  0D79               	rlf	??__tdiv_to_l_+1,w
  5862  0871  0D7A               	rlf	??__tdiv_to_l_+2,w
  5863  0872  00FB               	movwf	??__tdiv_to_l_+3
  5864  0873  087B               	movf	??__tdiv_to_l_+3,w
  5865  0874  00A4               	movwf	__tdiv_to_l_@cntr
  5866  0875  0824               	movf	__tdiv_to_l_@cntr,w
  5867  0876  1903               	btfsc	3,2
  5868  0877  2860               	goto	i1l2766
  5869  0878  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5870  0879  30FF               	movlw	255
  5871  087A  05F0               	andwf	__tdiv_to_l_@f1,f
  5872  087B  30FF               	movlw	255
  5873  087C  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5874  087D  3000               	movlw	0
  5875  087E  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5876  087F  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5877  0880  30FF               	movlw	255
  5878  0881  05F4               	andwf	__tdiv_to_l_@f2,f
  5879  0882  30FF               	movlw	255
  5880  0883  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5881  0884  3000               	movlw	0
  5882  0885  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5883  0886  3000               	movlw	0
  5884  0887  00A3               	movwf	__tdiv_to_l_@quot+3
  5885  0888  3000               	movlw	0
  5886  0889  00A2               	movwf	__tdiv_to_l_@quot+2
  5887  088A  3000               	movlw	0
  5888  088B  00A1               	movwf	__tdiv_to_l_@quot+1
  5889  088C  3000               	movlw	0
  5890  088D  00A0               	movwf	__tdiv_to_l_@quot
  5891  088E  307F               	movlw	127
  5892  088F  02A5               	subwf	__tdiv_to_l_@exp1,f
  5893  0890  3098               	movlw	152
  5894  0891  0724               	addwf	__tdiv_to_l_@cntr,w
  5895  0892  00F8               	movwf	??__tdiv_to_l_
  5896  0893  0878               	movf	??__tdiv_to_l_,w
  5897  0894  02A5               	subwf	__tdiv_to_l_@exp1,f
  5898  0895  3018               	movlw	24
  5899  0896  00F8               	movwf	??__tdiv_to_l_
  5900  0897  0878               	movf	??__tdiv_to_l_,w
  5901  0898  00A4               	movwf	__tdiv_to_l_@cntr
  5902  0899                     i1l2784:	
  5903  0899  3001               	movlw	1
  5904  089A  00F8               	movwf	??__tdiv_to_l_
  5905  089B                     u451_25:	
  5906  089B  1003               	clrc
  5907  089C  0DA0               	rlf	__tdiv_to_l_@quot,f
  5908  089D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5909  089E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5910  089F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5911  08A0  0BF8               	decfsz	??__tdiv_to_l_,f
  5912  08A1  289B               	goto	u451_25
  5913  08A2  0876               	movf	__tdiv_to_l_@f2+2,w
  5914  08A3  0272               	subwf	__tdiv_to_l_@f1+2,w
  5915  08A4  1D03               	skipz
  5916  08A5  28AC               	goto	u452_25
  5917  08A6  0875               	movf	__tdiv_to_l_@f2+1,w
  5918  08A7  0271               	subwf	__tdiv_to_l_@f1+1,w
  5919  08A8  1D03               	skipz
  5920  08A9  28AC               	goto	u452_25
  5921  08AA  0874               	movf	__tdiv_to_l_@f2,w
  5922  08AB  0270               	subwf	__tdiv_to_l_@f1,w
  5923  08AC                     u452_25:	
  5924  08AC  1C03               	skipc
  5925  08AD  28B9               	goto	i1l2792
  5926  08AE  0874               	movf	__tdiv_to_l_@f2,w
  5927  08AF  02F0               	subwf	__tdiv_to_l_@f1,f
  5928  08B0  0875               	movf	__tdiv_to_l_@f2+1,w
  5929  08B1  1C03               	skipc
  5930  08B2  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5931  08B3  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5932  08B4  0876               	movf	__tdiv_to_l_@f2+2,w
  5933  08B5  1C03               	skipc
  5934  08B6  0A76               	incf	__tdiv_to_l_@f2+2,w
  5935  08B7  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5936  08B8  1420               	bsf	__tdiv_to_l_@quot,0
  5937  08B9                     i1l2792:	
  5938  08B9  3001               	movlw	1
  5939  08BA                     u453_25:	
  5940  08BA  1003               	clrc
  5941  08BB  0DF0               	rlf	__tdiv_to_l_@f1,f
  5942  08BC  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5943  08BD  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5944  08BE  3EFF               	addlw	-1
  5945  08BF  1D03               	skipz
  5946  08C0  28BA               	goto	u453_25
  5947  08C1  3001               	movlw	1
  5948  08C2  02A4               	subwf	__tdiv_to_l_@cntr,f
  5949  08C3  1D03               	btfss	3,2
  5950  08C4  2899               	goto	i1l2784
  5951  08C5  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5952  08C6  28DC               	goto	i1l2804
  5953  08C7  0825               	movf	__tdiv_to_l_@exp1,w
  5954  08C8  3A80               	xorlw	128
  5955  08C9  3E97               	addlw	151
  5956  08CA  1C03               	btfss	3,0
  5957  08CB  2860               	goto	i1l2766
  5958  08CC                     i1l2802:	
  5959  08CC  3001               	movlw	1
  5960  08CD                     u457_25:	
  5961  08CD  1003               	clrc
  5962  08CE  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5963  08CF  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5964  08D0  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5965  08D1  0CA0               	rrf	__tdiv_to_l_@quot,f
  5966  08D2  3EFF               	addlw	-1
  5967  08D3  1D03               	skipz
  5968  08D4  28CD               	goto	u457_25
  5969  08D5  3001               	movlw	1
  5970  08D6  00F8               	movwf	??__tdiv_to_l_
  5971  08D7  0878               	movf	??__tdiv_to_l_,w
  5972  08D8  07A5               	addwf	__tdiv_to_l_@exp1,f
  5973  08D9  1903               	btfsc	3,2
  5974  08DA  28EF               	goto	i1l2812
  5975  08DB  28CC               	goto	i1l2802
  5976  08DC                     i1l2804:	
  5977  08DC  3018               	movlw	24
  5978  08DD  0225               	subwf	__tdiv_to_l_@exp1,w
  5979  08DE  1803               	btfsc	3,0
  5980  08DF  2860               	goto	i1l2766
  5981  08E0                     i1l516:	
  5982  08E0  0825               	movf	__tdiv_to_l_@exp1,w
  5983  08E1  1903               	btfsc	3,2
  5984  08E2  28EF               	goto	i1l2812
  5985  08E3  3001               	movlw	1
  5986  08E4  00F8               	movwf	??__tdiv_to_l_
  5987  08E5                     u460_25:	
  5988  08E5  1003               	clrc
  5989  08E6  0DA0               	rlf	__tdiv_to_l_@quot,f
  5990  08E7  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5991  08E8  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5992  08E9  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5993  08EA  0BF8               	decfsz	??__tdiv_to_l_,f
  5994  08EB  28E5               	goto	u460_25
  5995  08EC  3001               	movlw	1
  5996  08ED  02A5               	subwf	__tdiv_to_l_@exp1,f
  5997  08EE  28E0               	goto	i1l516
  5998  08EF                     i1l2812:	
  5999  08EF  0823               	movf	__tdiv_to_l_@quot+3,w
  6000  08F0  00F3               	movwf	?__tdiv_to_l_+3
  6001  08F1  0822               	movf	__tdiv_to_l_@quot+2,w
  6002  08F2  00F2               	movwf	?__tdiv_to_l_+2
  6003  08F3  0821               	movf	__tdiv_to_l_@quot+1,w
  6004  08F4  00F1               	movwf	?__tdiv_to_l_+1
  6005  08F5  0820               	movf	__tdiv_to_l_@quot,w
  6006  08F6  00F0               	movwf	?__tdiv_to_l_
  6007  08F7  0008               	return
  6008  08F8                     __end_of__tdiv_to_l_:	
  6009                           
  6010                           	psect	text17
  6011  08F8                     __ptext17:	
  6012 ;; *************** function __div_to_l_ *****************
  6013 ;; Defined at:
  6014 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  f1              4    0[COMMON] unsigned long 
  6017 ;;  f2              4    4[COMMON] unsigned long 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  quot            4    0[BANK0 ] unsigned long 
  6020 ;;  exp1            1    5[BANK0 ] unsigned char 
  6021 ;;  cntr            1    4[BANK0 ] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  4    0[COMMON] unsigned long 
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6031 ;;      Params:         8       0       0       0       0
  6032 ;;      Locals:         0       6       0       0       0
  6033 ;;      Temps:          1       0       0       0       0
  6034 ;;      Totals:         9       6       0       0       0
  6035 ;;Total ram usage:       15 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_sprintf
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           
  6045                           ;psect for function __div_to_l_
  6046  08F8                     __div_to_l_:	
  6047                           
  6048                           ;incstack = 0
  6049                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6050  08F8  1003               	clrc
  6051  08F9  0D72               	rlf	__div_to_l_@f1+2,w
  6052  08FA  0D73               	rlf	__div_to_l_@f1+3,w
  6053  08FB  00F8               	movwf	??__div_to_l_
  6054  08FC  0878               	movf	??__div_to_l_,w
  6055  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  6056  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  6057  08FF  00A5               	movwf	__div_to_l_@exp1
  6058  0900  0825               	movf	__div_to_l_@exp1,w
  6059  0901  1D03               	btfss	3,2
  6060  0902  290C               	goto	i1l2822
  6061  0903                     i1l2818:	
  6062  0903  3000               	movlw	0
  6063  0904  00F3               	movwf	?__div_to_l_+3
  6064  0905  3000               	movlw	0
  6065  0906  00F2               	movwf	?__div_to_l_+2
  6066  0907  3000               	movlw	0
  6067  0908  00F1               	movwf	?__div_to_l_+1
  6068  0909  3000               	movlw	0
  6069  090A  00F0               	movwf	?__div_to_l_
  6070  090B  0008               	return
  6071  090C                     i1l2822:	
  6072  090C  1003               	clrc
  6073  090D  0D76               	rlf	__div_to_l_@f2+2,w
  6074  090E  0D77               	rlf	__div_to_l_@f2+3,w
  6075  090F  00F8               	movwf	??__div_to_l_
  6076  0910  0878               	movf	??__div_to_l_,w
  6077  0911  00A4               	movwf	__div_to_l_@cntr
  6078  0912  0824               	movf	__div_to_l_@cntr,w
  6079  0913  1903               	btfsc	3,2
  6080  0914  2903               	goto	i1l2818
  6081  0915  17F2               	bsf	__div_to_l_@f1+2,7
  6082  0916  30FF               	movlw	255
  6083  0917  05F0               	andwf	__div_to_l_@f1,f
  6084  0918  30FF               	movlw	255
  6085  0919  05F1               	andwf	__div_to_l_@f1+1,f
  6086  091A  30FF               	movlw	255
  6087  091B  05F2               	andwf	__div_to_l_@f1+2,f
  6088  091C  3000               	movlw	0
  6089  091D  05F3               	andwf	__div_to_l_@f1+3,f
  6090  091E  17F6               	bsf	__div_to_l_@f2+2,7
  6091  091F  30FF               	movlw	255
  6092  0920  05F4               	andwf	__div_to_l_@f2,f
  6093  0921  30FF               	movlw	255
  6094  0922  05F5               	andwf	__div_to_l_@f2+1,f
  6095  0923  30FF               	movlw	255
  6096  0924  05F6               	andwf	__div_to_l_@f2+2,f
  6097  0925  3000               	movlw	0
  6098  0926  05F7               	andwf	__div_to_l_@f2+3,f
  6099  0927  3000               	movlw	0
  6100  0928  00A3               	movwf	__div_to_l_@quot+3
  6101  0929  3000               	movlw	0
  6102  092A  00A2               	movwf	__div_to_l_@quot+2
  6103  092B  3000               	movlw	0
  6104  092C  00A1               	movwf	__div_to_l_@quot+1
  6105  092D  3000               	movlw	0
  6106  092E  00A0               	movwf	__div_to_l_@quot
  6107  092F  307F               	movlw	127
  6108  0930  02A5               	subwf	__div_to_l_@exp1,f
  6109  0931  30A0               	movlw	160
  6110  0932  0724               	addwf	__div_to_l_@cntr,w
  6111  0933  00F8               	movwf	??__div_to_l_
  6112  0934  0878               	movf	??__div_to_l_,w
  6113  0935  02A5               	subwf	__div_to_l_@exp1,f
  6114  0936  3020               	movlw	32
  6115  0937  00F8               	movwf	??__div_to_l_
  6116  0938  0878               	movf	??__div_to_l_,w
  6117  0939  00A4               	movwf	__div_to_l_@cntr
  6118  093A                     i1l2836:	
  6119  093A  3001               	movlw	1
  6120  093B  00F8               	movwf	??__div_to_l_
  6121  093C                     u464_25:	
  6122  093C  1003               	clrc
  6123  093D  0DA0               	rlf	__div_to_l_@quot,f
  6124  093E  0DA1               	rlf	__div_to_l_@quot+1,f
  6125  093F  0DA2               	rlf	__div_to_l_@quot+2,f
  6126  0940  0DA3               	rlf	__div_to_l_@quot+3,f
  6127  0941  0BF8               	decfsz	??__div_to_l_,f
  6128  0942  293C               	goto	u464_25
  6129  0943  0877               	movf	__div_to_l_@f2+3,w
  6130  0944  0273               	subwf	__div_to_l_@f1+3,w
  6131  0945  1D03               	skipz
  6132  0946  2951               	goto	u465_25
  6133  0947  0876               	movf	__div_to_l_@f2+2,w
  6134  0948  0272               	subwf	__div_to_l_@f1+2,w
  6135  0949  1D03               	skipz
  6136  094A  2951               	goto	u465_25
  6137  094B  0875               	movf	__div_to_l_@f2+1,w
  6138  094C  0271               	subwf	__div_to_l_@f1+1,w
  6139  094D  1D03               	skipz
  6140  094E  2951               	goto	u465_25
  6141  094F  0874               	movf	__div_to_l_@f2,w
  6142  0950  0270               	subwf	__div_to_l_@f1,w
  6143  0951                     u465_25:	
  6144  0951  1C03               	skipc
  6145  0952  2962               	goto	i1l2844
  6146  0953  0874               	movf	__div_to_l_@f2,w
  6147  0954  02F0               	subwf	__div_to_l_@f1,f
  6148  0955  0875               	movf	__div_to_l_@f2+1,w
  6149  0956  1C03               	skipc
  6150  0957  0F75               	incfsz	__div_to_l_@f2+1,w
  6151  0958  02F1               	subwf	__div_to_l_@f1+1,f
  6152  0959  0876               	movf	__div_to_l_@f2+2,w
  6153  095A  1C03               	skipc
  6154  095B  0F76               	incfsz	__div_to_l_@f2+2,w
  6155  095C  02F2               	subwf	__div_to_l_@f1+2,f
  6156  095D  0877               	movf	__div_to_l_@f2+3,w
  6157  095E  1C03               	skipc
  6158  095F  0F77               	incfsz	__div_to_l_@f2+3,w
  6159  0960  02F3               	subwf	__div_to_l_@f1+3,f
  6160  0961  1420               	bsf	__div_to_l_@quot,0
  6161  0962                     i1l2844:	
  6162  0962  3001               	movlw	1
  6163  0963  00F8               	movwf	??__div_to_l_
  6164  0964                     u466_25:	
  6165  0964  1003               	clrc
  6166  0965  0DF0               	rlf	__div_to_l_@f1,f
  6167  0966  0DF1               	rlf	__div_to_l_@f1+1,f
  6168  0967  0DF2               	rlf	__div_to_l_@f1+2,f
  6169  0968  0DF3               	rlf	__div_to_l_@f1+3,f
  6170  0969  0BF8               	decfsz	??__div_to_l_,f
  6171  096A  2964               	goto	u466_25
  6172  096B  3001               	movlw	1
  6173  096C  02A4               	subwf	__div_to_l_@cntr,f
  6174  096D  1D03               	btfss	3,2
  6175  096E  293A               	goto	i1l2836
  6176  096F  1FA5               	btfss	__div_to_l_@exp1,7
  6177  0970  2986               	goto	i1l2856
  6178  0971  0825               	movf	__div_to_l_@exp1,w
  6179  0972  3A80               	xorlw	128
  6180  0973  3E9F               	addlw	159
  6181  0974  1C03               	btfss	3,0
  6182  0975  2903               	goto	i1l2818
  6183  0976                     i1l2854:	
  6184  0976  3001               	movlw	1
  6185  0977                     u470_25:	
  6186  0977  1003               	clrc
  6187  0978  0CA3               	rrf	__div_to_l_@quot+3,f
  6188  0979  0CA2               	rrf	__div_to_l_@quot+2,f
  6189  097A  0CA1               	rrf	__div_to_l_@quot+1,f
  6190  097B  0CA0               	rrf	__div_to_l_@quot,f
  6191  097C  3EFF               	addlw	-1
  6192  097D  1D03               	skipz
  6193  097E  2977               	goto	u470_25
  6194  097F  3001               	movlw	1
  6195  0980  00F8               	movwf	??__div_to_l_
  6196  0981  0878               	movf	??__div_to_l_,w
  6197  0982  07A5               	addwf	__div_to_l_@exp1,f
  6198  0983  1903               	btfsc	3,2
  6199  0984  2999               	goto	i1l2864
  6200  0985  2976               	goto	i1l2854
  6201  0986                     i1l2856:	
  6202  0986  3020               	movlw	32
  6203  0987  0225               	subwf	__div_to_l_@exp1,w
  6204  0988  1803               	btfsc	3,0
  6205  0989  2903               	goto	i1l2818
  6206  098A                     i1l469:	
  6207  098A  0825               	movf	__div_to_l_@exp1,w
  6208  098B  1903               	btfsc	3,2
  6209  098C  2999               	goto	i1l2864
  6210  098D  3001               	movlw	1
  6211  098E  00F8               	movwf	??__div_to_l_
  6212  098F                     u473_25:	
  6213  098F  1003               	clrc
  6214  0990  0DA0               	rlf	__div_to_l_@quot,f
  6215  0991  0DA1               	rlf	__div_to_l_@quot+1,f
  6216  0992  0DA2               	rlf	__div_to_l_@quot+2,f
  6217  0993  0DA3               	rlf	__div_to_l_@quot+3,f
  6218  0994  0BF8               	decfsz	??__div_to_l_,f
  6219  0995  298F               	goto	u473_25
  6220  0996  3001               	movlw	1
  6221  0997  02A5               	subwf	__div_to_l_@exp1,f
  6222  0998  298A               	goto	i1l469
  6223  0999                     i1l2864:	
  6224  0999  0823               	movf	__div_to_l_@quot+3,w
  6225  099A  00F3               	movwf	?__div_to_l_+3
  6226  099B  0822               	movf	__div_to_l_@quot+2,w
  6227  099C  00F2               	movwf	?__div_to_l_+2
  6228  099D  0821               	movf	__div_to_l_@quot+1,w
  6229  099E  00F1               	movwf	?__div_to_l_+1
  6230  099F  0820               	movf	__div_to_l_@quot,w
  6231  09A0  00F0               	movwf	?__div_to_l_
  6232  09A1  0008               	return
  6233  09A2                     __end_of__div_to_l_:	
  6234                           
  6235                           	psect	text18
  6236  13B7                     __ptext18:	
  6237 ;; *************** function ___xxtofl *****************
  6238 ;; Defined at:
  6239 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;  sign            1    wreg     unsigned char 
  6242 ;;  val             4    2[COMMON] long 
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  sign            1    0[BANK0 ] unsigned char 
  6245 ;;  arg             4    2[BANK0 ] unsigned long 
  6246 ;;  exp             1    1[BANK0 ] unsigned char 
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  4    2[COMMON] unsigned char 
  6249 ;; Registers used:
  6250 ;;		wreg, status,2, status,0
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6256 ;;      Params:         4       0       0       0       0
  6257 ;;      Locals:         0       6       0       0       0
  6258 ;;      Temps:          4       0       0       0       0
  6259 ;;      Totals:         8       6       0       0       0
  6260 ;;Total ram usage:       14 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_my_isr_routine
  6266 ;;		_sprintf
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           
  6271                           ;psect for function ___xxtofl
  6272  13B7                     ___xxtofl:	
  6273                           
  6274                           ;incstack = 0
  6275                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6276                           ;___xxtofl@sign stored from wreg
  6277  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  6278  13B8  1303               	bcf	3,6	;RP1=0, select bank0
  6279  13B9  00A0               	movwf	___xxtofl@sign
  6280  13BA  0820               	movf	___xxtofl@sign,w
  6281  13BB  1D03               	btfss	3,2
  6282  13BC  1FF5               	btfss	___xxtofl@val+3,7
  6283  13BD  2BCE               	goto	i1l3014
  6284  13BE  0972               	comf	___xxtofl@val,w
  6285  13BF  00A2               	movwf	___xxtofl@arg
  6286  13C0  0973               	comf	___xxtofl@val+1,w
  6287  13C1  00A3               	movwf	___xxtofl@arg+1
  6288  13C2  0974               	comf	___xxtofl@val+2,w
  6289  13C3  00A4               	movwf	___xxtofl@arg+2
  6290  13C4  0975               	comf	___xxtofl@val+3,w
  6291  13C5  00A5               	movwf	___xxtofl@arg+3
  6292  13C6  0AA2               	incf	___xxtofl@arg,f
  6293  13C7  1903               	skipnz
  6294  13C8  0AA3               	incf	___xxtofl@arg+1,f
  6295  13C9  1903               	skipnz
  6296  13CA  0AA4               	incf	___xxtofl@arg+2,f
  6297  13CB  1903               	skipnz
  6298  13CC  0AA5               	incf	___xxtofl@arg+3,f
  6299  13CD  2BD6               	goto	i1l749
  6300  13CE                     i1l3014:	
  6301  13CE  0875               	movf	___xxtofl@val+3,w
  6302  13CF  00A5               	movwf	___xxtofl@arg+3
  6303  13D0  0874               	movf	___xxtofl@val+2,w
  6304  13D1  00A4               	movwf	___xxtofl@arg+2
  6305  13D2  0873               	movf	___xxtofl@val+1,w
  6306  13D3  00A3               	movwf	___xxtofl@arg+1
  6307  13D4  0872               	movf	___xxtofl@val,w
  6308  13D5  00A2               	movwf	___xxtofl@arg
  6309  13D6                     i1l749:	
  6310  13D6  0875               	movf	___xxtofl@val+3,w
  6311  13D7  0474               	iorwf	___xxtofl@val+2,w
  6312  13D8  0473               	iorwf	___xxtofl@val+1,w
  6313  13D9  0472               	iorwf	___xxtofl@val,w
  6314  13DA  1D03               	skipz
  6315  13DB  2BE5               	goto	i1l3020
  6316  13DC  3000               	movlw	0
  6317  13DD  00F5               	movwf	?___xxtofl+3
  6318  13DE  3000               	movlw	0
  6319  13DF  00F4               	movwf	?___xxtofl+2
  6320  13E0  3000               	movlw	0
  6321  13E1  00F3               	movwf	?___xxtofl+1
  6322  13E2  3000               	movlw	0
  6323  13E3  00F2               	movwf	?___xxtofl
  6324  13E4  0008               	return
  6325  13E5                     i1l3020:	
  6326  13E5  3096               	movlw	150
  6327  13E6  00F6               	movwf	??___xxtofl
  6328  13E7  0876               	movf	??___xxtofl,w
  6329  13E8  00A1               	movwf	___xxtofl@exp
  6330  13E9                     i1l3024:	
  6331  13E9  30FE               	movlw	254
  6332  13EA  0525               	andwf	___xxtofl@arg+3,w
  6333  13EB  1903               	btfsc	3,2
  6334  13EC  2C16               	goto	i1l755
  6335  13ED  3001               	movlw	1
  6336  13EE  00F6               	movwf	??___xxtofl
  6337  13EF  0876               	movf	??___xxtofl,w
  6338  13F0  07A1               	addwf	___xxtofl@exp,f
  6339  13F1  3001               	movlw	1
  6340  13F2                     u516_25:	
  6341  13F2  1003               	clrc
  6342  13F3  0CA5               	rrf	___xxtofl@arg+3,f
  6343  13F4  0CA4               	rrf	___xxtofl@arg+2,f
  6344  13F5  0CA3               	rrf	___xxtofl@arg+1,f
  6345  13F6  0CA2               	rrf	___xxtofl@arg,f
  6346  13F7  3EFF               	addlw	-1
  6347  13F8  1D03               	skipz
  6348  13F9  2BF2               	goto	u516_25
  6349  13FA  2BE9               	goto	i1l3024
  6350  13FB                     i1l3026:	
  6351  13FB  3001               	movlw	1
  6352  13FC  00F6               	movwf	??___xxtofl
  6353  13FD  0876               	movf	??___xxtofl,w
  6354  13FE  07A1               	addwf	___xxtofl@exp,f
  6355  13FF  3001               	movlw	1
  6356  1400  07A2               	addwf	___xxtofl@arg,f
  6357  1401  3000               	movlw	0
  6358  1402  1803               	skipnc
  6359  1403  3001               	movlw	1
  6360  1404  07A3               	addwf	___xxtofl@arg+1,f
  6361  1405  3000               	movlw	0
  6362  1406  1803               	skipnc
  6363  1407  3001               	movlw	1
  6364  1408  07A4               	addwf	___xxtofl@arg+2,f
  6365  1409  3000               	movlw	0
  6366  140A  1803               	skipnc
  6367  140B  3001               	movlw	1
  6368  140C  07A5               	addwf	___xxtofl@arg+3,f
  6369  140D  3001               	movlw	1
  6370  140E                     u518_25:	
  6371  140E  1003               	clrc
  6372  140F  0CA5               	rrf	___xxtofl@arg+3,f
  6373  1410  0CA4               	rrf	___xxtofl@arg+2,f
  6374  1411  0CA3               	rrf	___xxtofl@arg+1,f
  6375  1412  0CA2               	rrf	___xxtofl@arg,f
  6376  1413  3EFF               	addlw	-1
  6377  1414  1D03               	skipz
  6378  1415  2C0E               	goto	u518_25
  6379  1416                     i1l755:	
  6380  1416  30FF               	movlw	255
  6381  1417  0525               	andwf	___xxtofl@arg+3,w
  6382  1418  1903               	btfsc	3,2
  6383  1419  2C2A               	goto	i1l3034
  6384  141A  2BFB               	goto	i1l3026
  6385  141B                     i1l3036:	
  6386  141B  3002               	movlw	2
  6387  141C  0221               	subwf	___xxtofl@exp,w
  6388  141D  1C03               	btfss	3,0
  6389  141E  2C2C               	goto	i1l762
  6390  141F  3001               	movlw	1
  6391  1420  02A1               	subwf	___xxtofl@exp,f
  6392  1421  3001               	movlw	1
  6393  1422  00F6               	movwf	??___xxtofl
  6394  1423                     u520_25:	
  6395  1423  1003               	clrc
  6396  1424  0DA2               	rlf	___xxtofl@arg,f
  6397  1425  0DA3               	rlf	___xxtofl@arg+1,f
  6398  1426  0DA4               	rlf	___xxtofl@arg+2,f
  6399  1427  0DA5               	rlf	___xxtofl@arg+3,f
  6400  1428  0BF6               	decfsz	??___xxtofl,f
  6401  1429  2C23               	goto	u520_25
  6402  142A                     i1l3034:	
  6403  142A  1FA4               	btfss	___xxtofl@arg+2,7
  6404  142B  2C1B               	goto	i1l3036
  6405  142C                     i1l762:	
  6406  142C  1821               	btfsc	___xxtofl@exp,0
  6407  142D  2C36               	goto	i1l763
  6408  142E  30FF               	movlw	255
  6409  142F  05A2               	andwf	___xxtofl@arg,f
  6410  1430  30FF               	movlw	255
  6411  1431  05A3               	andwf	___xxtofl@arg+1,f
  6412  1432  307F               	movlw	127
  6413  1433  05A4               	andwf	___xxtofl@arg+2,f
  6414  1434  30FF               	movlw	255
  6415  1435  05A5               	andwf	___xxtofl@arg+3,f
  6416  1436                     i1l763:	
  6417  1436  1003               	clrc
  6418  1437  0CA1               	rrf	___xxtofl@exp,f
  6419  1438  0821               	movf	___xxtofl@exp,w
  6420  1439  00F6               	movwf	??___xxtofl
  6421  143A  01F7               	clrf	??___xxtofl+1
  6422  143B  01F8               	clrf	??___xxtofl+2
  6423  143C  01F9               	clrf	??___xxtofl+3
  6424  143D  3018               	movlw	24
  6425  143E                     u524_25:	
  6426  143E  1003               	clrc
  6427  143F  0DF6               	rlf	??___xxtofl,f
  6428  1440  0DF7               	rlf	??___xxtofl+1,f
  6429  1441  0DF8               	rlf	??___xxtofl+2,f
  6430  1442  0DF9               	rlf	??___xxtofl+3,f
  6431  1443  3EFF               	addlw	-1
  6432  1444  1D03               	skipz
  6433  1445  2C3E               	goto	u524_25
  6434  1446  0876               	movf	??___xxtofl,w
  6435  1447  04A2               	iorwf	___xxtofl@arg,f
  6436  1448  0877               	movf	??___xxtofl+1,w
  6437  1449  04A3               	iorwf	___xxtofl@arg+1,f
  6438  144A  0878               	movf	??___xxtofl+2,w
  6439  144B  04A4               	iorwf	___xxtofl@arg+2,f
  6440  144C  0879               	movf	??___xxtofl+3,w
  6441  144D  04A5               	iorwf	___xxtofl@arg+3,f
  6442  144E  0820               	movf	___xxtofl@sign,w
  6443  144F  1D03               	btfss	3,2
  6444  1450  1FF5               	btfss	___xxtofl@val+3,7
  6445  1451  2C53               	goto	i1l3048
  6446  1452  17A5               	bsf	___xxtofl@arg+3,7
  6447  1453                     i1l3048:	
  6448  1453  0825               	movf	___xxtofl@arg+3,w
  6449  1454  00F5               	movwf	?___xxtofl+3
  6450  1455  0824               	movf	___xxtofl@arg+2,w
  6451  1456  00F4               	movwf	?___xxtofl+2
  6452  1457  0823               	movf	___xxtofl@arg+1,w
  6453  1458  00F3               	movwf	?___xxtofl+1
  6454  1459  0822               	movf	___xxtofl@arg,w
  6455  145A  00F2               	movwf	?___xxtofl
  6456  145B  0008               	return
  6457  145C                     __end_of___xxtofl:	
  6458                           
  6459                           	psect	text19
  6460  1E6F                     __ptext19:	
  6461 ;; *************** function ___wmul *****************
  6462 ;; Defined at:
  6463 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  multiplier      2    0[COMMON] unsigned int 
  6466 ;;  multiplicand    2    2[COMMON] unsigned int 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  product         2    4[COMMON] unsigned int 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  2    0[COMMON] unsigned int 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6478 ;;      Params:         4       0       0       0       0
  6479 ;;      Locals:         2       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0
  6481 ;;      Totals:         6       0       0       0       0
  6482 ;;Total ram usage:        6 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; This function calls:
  6485 ;;		Nothing
  6486 ;; This function is called by:
  6487 ;;		_sprintf
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           
  6492                           ;psect for function ___wmul
  6493  1E6F                     ___wmul:	
  6494                           
  6495                           ;incstack = 0
  6496                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6497  1E6F  01F4               	clrf	___wmul@product
  6498  1E70  01F5               	clrf	___wmul@product+1
  6499  1E71                     i1l2870:	
  6500  1E71  1C70               	btfss	___wmul@multiplier,0
  6501  1E72  2E79               	goto	i1l288
  6502  1E73  0872               	movf	___wmul@multiplicand,w
  6503  1E74  07F4               	addwf	___wmul@product,f
  6504  1E75  1803               	skipnc
  6505  1E76  0AF5               	incf	___wmul@product+1,f
  6506  1E77  0873               	movf	___wmul@multiplicand+1,w
  6507  1E78  07F5               	addwf	___wmul@product+1,f
  6508  1E79                     i1l288:	
  6509  1E79  3001               	movlw	1
  6510  1E7A                     u476_25:	
  6511  1E7A  1003               	clrc
  6512  1E7B  0DF2               	rlf	___wmul@multiplicand,f
  6513  1E7C  0DF3               	rlf	___wmul@multiplicand+1,f
  6514  1E7D  3EFF               	addlw	-1
  6515  1E7E  1D03               	skipz
  6516  1E7F  2E7A               	goto	u476_25
  6517  1E80  3001               	movlw	1
  6518  1E81                     u477_25:	
  6519  1E81  1003               	clrc
  6520  1E82  0CF1               	rrf	___wmul@multiplier+1,f
  6521  1E83  0CF0               	rrf	___wmul@multiplier,f
  6522  1E84  3EFF               	addlw	-1
  6523  1E85  1D03               	skipz
  6524  1E86  2E81               	goto	u477_25
  6525  1E87  0870               	movf	___wmul@multiplier,w
  6526  1E88  0471               	iorwf	___wmul@multiplier+1,w
  6527  1E89  1D03               	btfss	3,2
  6528  1E8A  2E71               	goto	i1l2870
  6529  1E8B  0875               	movf	___wmul@product+1,w
  6530  1E8C  00F1               	movwf	?___wmul+1
  6531  1E8D  0874               	movf	___wmul@product,w
  6532  1E8E  00F0               	movwf	?___wmul
  6533  1E8F  0008               	return
  6534  1E90                     __end_of___wmul:	
  6535                           
  6536                           	psect	text20
  6537  0803                     __ptext20:	
  6538 ;; *************** function ___llmod *****************
  6539 ;; Defined at:
  6540 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  divisor         4    0[COMMON] unsigned long 
  6543 ;;  dividend        4    4[COMMON] unsigned long 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;  counter         1    9[COMMON] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  4    0[COMMON] unsigned long 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2, status,0
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6555 ;;      Params:         8       0       0       0       0
  6556 ;;      Locals:         1       0       0       0       0
  6557 ;;      Temps:          1       0       0       0       0
  6558 ;;      Totals:        10       0       0       0       0
  6559 ;;Total ram usage:       10 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_sprintf
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           
  6569                           ;psect for function ___llmod
  6570  0803                     ___llmod:	
  6571                           
  6572                           ;incstack = 0
  6573                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6574  0803  0873               	movf	___llmod@divisor+3,w
  6575  0804  0472               	iorwf	___llmod@divisor+2,w
  6576  0805  0471               	iorwf	___llmod@divisor+1,w
  6577  0806  0470               	iorwf	___llmod@divisor,w
  6578  0807  1903               	skipnz
  6579  0808  2846               	goto	i1l2998
  6580  0809  01F9               	clrf	___llmod@counter
  6581  080A  0AF9               	incf	___llmod@counter,f
  6582  080B                     i1l2988:	
  6583  080B  1BF3               	btfsc	___llmod@divisor+3,7
  6584  080C  281B               	goto	i1l2990
  6585  080D  3001               	movlw	1
  6586  080E  00F8               	movwf	??___llmod
  6587  080F                     u508_25:	
  6588  080F  1003               	clrc
  6589  0810  0DF0               	rlf	___llmod@divisor,f
  6590  0811  0DF1               	rlf	___llmod@divisor+1,f
  6591  0812  0DF2               	rlf	___llmod@divisor+2,f
  6592  0813  0DF3               	rlf	___llmod@divisor+3,f
  6593  0814  0BF8               	decfsz	??___llmod,f
  6594  0815  280F               	goto	u508_25
  6595  0816  3001               	movlw	1
  6596  0817  00F8               	movwf	??___llmod
  6597  0818  0878               	movf	??___llmod,w
  6598  0819  07F9               	addwf	___llmod@counter,f
  6599  081A  280B               	goto	i1l2988
  6600  081B                     i1l2990:	
  6601  081B  0873               	movf	___llmod@divisor+3,w
  6602  081C  0277               	subwf	___llmod@dividend+3,w
  6603  081D  1D03               	skipz
  6604  081E  2829               	goto	u510_25
  6605  081F  0872               	movf	___llmod@divisor+2,w
  6606  0820  0276               	subwf	___llmod@dividend+2,w
  6607  0821  1D03               	skipz
  6608  0822  2829               	goto	u510_25
  6609  0823  0871               	movf	___llmod@divisor+1,w
  6610  0824  0275               	subwf	___llmod@dividend+1,w
  6611  0825  1D03               	skipz
  6612  0826  2829               	goto	u510_25
  6613  0827  0870               	movf	___llmod@divisor,w
  6614  0828  0274               	subwf	___llmod@dividend,w
  6615  0829                     u510_25:	
  6616  0829  1C03               	skipc
  6617  082A  2839               	goto	i1l2994
  6618  082B  0870               	movf	___llmod@divisor,w
  6619  082C  02F4               	subwf	___llmod@dividend,f
  6620  082D  0871               	movf	___llmod@divisor+1,w
  6621  082E  1C03               	skipc
  6622  082F  0F71               	incfsz	___llmod@divisor+1,w
  6623  0830  02F5               	subwf	___llmod@dividend+1,f
  6624  0831  0872               	movf	___llmod@divisor+2,w
  6625  0832  1C03               	skipc
  6626  0833  0F72               	incfsz	___llmod@divisor+2,w
  6627  0834  02F6               	subwf	___llmod@dividend+2,f
  6628  0835  0873               	movf	___llmod@divisor+3,w
  6629  0836  1C03               	skipc
  6630  0837  0F73               	incfsz	___llmod@divisor+3,w
  6631  0838  02F7               	subwf	___llmod@dividend+3,f
  6632  0839                     i1l2994:	
  6633  0839  3001               	movlw	1
  6634  083A                     u511_25:	
  6635  083A  1003               	clrc
  6636  083B  0CF3               	rrf	___llmod@divisor+3,f
  6637  083C  0CF2               	rrf	___llmod@divisor+2,f
  6638  083D  0CF1               	rrf	___llmod@divisor+1,f
  6639  083E  0CF0               	rrf	___llmod@divisor,f
  6640  083F  3EFF               	addlw	-1
  6641  0840  1D03               	skipz
  6642  0841  283A               	goto	u511_25
  6643  0842  3001               	movlw	1
  6644  0843  02F9               	subwf	___llmod@counter,f
  6645  0844  1D03               	btfss	3,2
  6646  0845  281B               	goto	i1l2990
  6647  0846                     i1l2998:	
  6648  0846  0877               	movf	___llmod@dividend+3,w
  6649  0847  00F3               	movwf	?___llmod+3
  6650  0848  0876               	movf	___llmod@dividend+2,w
  6651  0849  00F2               	movwf	?___llmod+2
  6652  084A  0875               	movf	___llmod@dividend+1,w
  6653  084B  00F1               	movwf	?___llmod+1
  6654  084C  0874               	movf	___llmod@dividend,w
  6655  084D  00F0               	movwf	?___llmod
  6656  084E  0008               	return
  6657  084F                     __end_of___llmod:	
  6658                           
  6659                           	psect	text21
  6660  115C                     __ptext21:	
  6661 ;; *************** function ___lldiv *****************
  6662 ;; Defined at:
  6663 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  divisor         4    0[COMMON] unsigned long 
  6666 ;;  dividend        4    4[COMMON] unsigned long 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  quotient        4    9[COMMON] unsigned long 
  6669 ;;  counter         1   13[COMMON] unsigned char 
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  4    0[COMMON] unsigned long 
  6672 ;; Registers used:
  6673 ;;		wreg, status,2, status,0
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6679 ;;      Params:         8       0       0       0       0
  6680 ;;      Locals:         5       0       0       0       0
  6681 ;;      Temps:          1       0       0       0       0
  6682 ;;      Totals:        14       0       0       0       0
  6683 ;;Total ram usage:       14 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; This function calls:
  6686 ;;		Nothing
  6687 ;; This function is called by:
  6688 ;;		_sprintf
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           
  6693                           ;psect for function ___lldiv
  6694  115C                     ___lldiv:	
  6695                           
  6696                           ;incstack = 0
  6697                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6698  115C  3000               	movlw	0
  6699  115D  00FC               	movwf	___lldiv@quotient+3
  6700  115E  3000               	movlw	0
  6701  115F  00FB               	movwf	___lldiv@quotient+2
  6702  1160  3000               	movlw	0
  6703  1161  00FA               	movwf	___lldiv@quotient+1
  6704  1162  3000               	movlw	0
  6705  1163  00F9               	movwf	___lldiv@quotient
  6706  1164  0873               	movf	___lldiv@divisor+3,w
  6707  1165  0472               	iorwf	___lldiv@divisor+2,w
  6708  1166  0471               	iorwf	___lldiv@divisor+1,w
  6709  1167  0470               	iorwf	___lldiv@divisor,w
  6710  1168  1903               	skipnz
  6711  1169  29B1               	goto	i1l2902
  6712  116A  01FD               	clrf	___lldiv@counter
  6713  116B  0AFD               	incf	___lldiv@counter,f
  6714  116C                     i1l2888:	
  6715  116C  1BF3               	btfsc	___lldiv@divisor+3,7
  6716  116D  297C               	goto	i1l2890
  6717  116E  3001               	movlw	1
  6718  116F  00F8               	movwf	??___lldiv
  6719  1170                     u480_25:	
  6720  1170  1003               	clrc
  6721  1171  0DF0               	rlf	___lldiv@divisor,f
  6722  1172  0DF1               	rlf	___lldiv@divisor+1,f
  6723  1173  0DF2               	rlf	___lldiv@divisor+2,f
  6724  1174  0DF3               	rlf	___lldiv@divisor+3,f
  6725  1175  0BF8               	decfsz	??___lldiv,f
  6726  1176  2970               	goto	u480_25
  6727  1177  3001               	movlw	1
  6728  1178  00F8               	movwf	??___lldiv
  6729  1179  0878               	movf	??___lldiv,w
  6730  117A  07FD               	addwf	___lldiv@counter,f
  6731  117B  296C               	goto	i1l2888
  6732  117C                     i1l2890:	
  6733  117C  3001               	movlw	1
  6734  117D  00F8               	movwf	??___lldiv
  6735  117E                     u482_25:	
  6736  117E  1003               	clrc
  6737  117F  0DF9               	rlf	___lldiv@quotient,f
  6738  1180  0DFA               	rlf	___lldiv@quotient+1,f
  6739  1181  0DFB               	rlf	___lldiv@quotient+2,f
  6740  1182  0DFC               	rlf	___lldiv@quotient+3,f
  6741  1183  0BF8               	decfsz	??___lldiv,f
  6742  1184  297E               	goto	u482_25
  6743  1185  0873               	movf	___lldiv@divisor+3,w
  6744  1186  0277               	subwf	___lldiv@dividend+3,w
  6745  1187  1D03               	skipz
  6746  1188  2993               	goto	u483_25
  6747  1189  0872               	movf	___lldiv@divisor+2,w
  6748  118A  0276               	subwf	___lldiv@dividend+2,w
  6749  118B  1D03               	skipz
  6750  118C  2993               	goto	u483_25
  6751  118D  0871               	movf	___lldiv@divisor+1,w
  6752  118E  0275               	subwf	___lldiv@dividend+1,w
  6753  118F  1D03               	skipz
  6754  1190  2993               	goto	u483_25
  6755  1191  0870               	movf	___lldiv@divisor,w
  6756  1192  0274               	subwf	___lldiv@dividend,w
  6757  1193                     u483_25:	
  6758  1193  1C03               	skipc
  6759  1194  29A4               	goto	i1l2898
  6760  1195  0870               	movf	___lldiv@divisor,w
  6761  1196  02F4               	subwf	___lldiv@dividend,f
  6762  1197  0871               	movf	___lldiv@divisor+1,w
  6763  1198  1C03               	skipc
  6764  1199  0F71               	incfsz	___lldiv@divisor+1,w
  6765  119A  02F5               	subwf	___lldiv@dividend+1,f
  6766  119B  0872               	movf	___lldiv@divisor+2,w
  6767  119C  1C03               	skipc
  6768  119D  0F72               	incfsz	___lldiv@divisor+2,w
  6769  119E  02F6               	subwf	___lldiv@dividend+2,f
  6770  119F  0873               	movf	___lldiv@divisor+3,w
  6771  11A0  1C03               	skipc
  6772  11A1  0F73               	incfsz	___lldiv@divisor+3,w
  6773  11A2  02F7               	subwf	___lldiv@dividend+3,f
  6774  11A3  1479               	bsf	___lldiv@quotient,0
  6775  11A4                     i1l2898:	
  6776  11A4  3001               	movlw	1
  6777  11A5                     u484_25:	
  6778  11A5  1003               	clrc
  6779  11A6  0CF3               	rrf	___lldiv@divisor+3,f
  6780  11A7  0CF2               	rrf	___lldiv@divisor+2,f
  6781  11A8  0CF1               	rrf	___lldiv@divisor+1,f
  6782  11A9  0CF0               	rrf	___lldiv@divisor,f
  6783  11AA  3EFF               	addlw	-1
  6784  11AB  1D03               	skipz
  6785  11AC  29A5               	goto	u484_25
  6786  11AD  3001               	movlw	1
  6787  11AE  02FD               	subwf	___lldiv@counter,f
  6788  11AF  1D03               	btfss	3,2
  6789  11B0  297C               	goto	i1l2890
  6790  11B1                     i1l2902:	
  6791  11B1  087C               	movf	___lldiv@quotient+3,w
  6792  11B2  00F3               	movwf	?___lldiv+3
  6793  11B3  087B               	movf	___lldiv@quotient+2,w
  6794  11B4  00F2               	movwf	?___lldiv+2
  6795  11B5  087A               	movf	___lldiv@quotient+1,w
  6796  11B6  00F1               	movwf	?___lldiv+1
  6797  11B7  0879               	movf	___lldiv@quotient,w
  6798  11B8  00F0               	movwf	?___lldiv
  6799  11B9  0008               	return
  6800  11BA                     __end_of___lldiv:	
  6801                           
  6802                           	psect	text22
  6803  121B                     __ptext22:	
  6804 ;; *************** function ___fltol *****************
  6805 ;; Defined at:
  6806 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  f1              4   51[BANK0 ] unsigned long 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  exp1            1   61[BANK0 ] unsigned char 
  6811 ;;  sign1           1   60[BANK0 ] unsigned char 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  4   51[BANK0 ] long 
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6821 ;;      Params:         0       4       0       0       0
  6822 ;;      Locals:         0       2       0       0       0
  6823 ;;      Temps:          0       5       0       0       0
  6824 ;;      Totals:         0      11       0       0       0
  6825 ;;Total ram usage:       11 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; This function calls:
  6828 ;;		Nothing
  6829 ;; This function is called by:
  6830 ;;		_sprintf
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           
  6834                           
  6835                           ;psect for function ___fltol
  6836  121B                     ___fltol:	
  6837                           
  6838                           ;incstack = 0
  6839                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6840  121B  1003               	clrc
  6841  121C  1283               	bcf	3,5	;RP0=0, select bank0
  6842  121D  1303               	bcf	3,6	;RP1=0, select bank0
  6843  121E  0D55               	rlf	___fltol@f1+2,w
  6844  121F  0D56               	rlf	___fltol@f1+3,w
  6845  1220  00D7               	movwf	??___fltol
  6846  1221  0857               	movf	??___fltol,w
  6847  1222  00DD               	movwf	___fltol@exp1
  6848  1223  085D               	movf	___fltol@exp1,w
  6849  1224  1D03               	btfss	3,2
  6850  1225  2A2F               	goto	i1l2952
  6851  1226                     i1l2948:	
  6852  1226  3000               	movlw	0
  6853  1227  00D6               	movwf	?___fltol+3
  6854  1228  3000               	movlw	0
  6855  1229  00D5               	movwf	?___fltol+2
  6856  122A  3000               	movlw	0
  6857  122B  00D4               	movwf	?___fltol+1
  6858  122C  3000               	movlw	0
  6859  122D  00D3               	movwf	?___fltol
  6860  122E  0008               	return
  6861  122F                     i1l2952:	
  6862  122F  0853               	movf	___fltol@f1,w
  6863  1230  00D7               	movwf	??___fltol
  6864  1231  0854               	movf	___fltol@f1+1,w
  6865  1232  00D8               	movwf	??___fltol+1
  6866  1233  0855               	movf	___fltol@f1+2,w
  6867  1234  00D9               	movwf	??___fltol+2
  6868  1235  0856               	movf	___fltol@f1+3,w
  6869  1236  00DA               	movwf	??___fltol+3
  6870  1237  301F               	movlw	31
  6871  1238                     u498_25:	
  6872  1238  1003               	clrc
  6873  1239  0CDA               	rrf	??___fltol+3,f
  6874  123A  0CD9               	rrf	??___fltol+2,f
  6875  123B  0CD8               	rrf	??___fltol+1,f
  6876  123C  0CD7               	rrf	??___fltol,f
  6877  123D  3EFF               	addlw	-1
  6878  123E  1D03               	skipz
  6879  123F  2A38               	goto	u498_25
  6880  1240  0857               	movf	??___fltol,w
  6881  1241  00DB               	movwf	??___fltol+4
  6882  1242  085B               	movf	??___fltol+4,w
  6883  1243  00DC               	movwf	___fltol@sign1
  6884  1244  17D5               	bsf	___fltol@f1+2,7
  6885  1245  30FF               	movlw	255
  6886  1246  05D3               	andwf	___fltol@f1,f
  6887  1247  30FF               	movlw	255
  6888  1248  05D4               	andwf	___fltol@f1+1,f
  6889  1249  30FF               	movlw	255
  6890  124A  05D5               	andwf	___fltol@f1+2,f
  6891  124B  3000               	movlw	0
  6892  124C  05D6               	andwf	___fltol@f1+3,f
  6893  124D  3096               	movlw	150
  6894  124E  02DD               	subwf	___fltol@exp1,f
  6895  124F  1FDD               	btfss	___fltol@exp1,7
  6896  1250  2A66               	goto	i1l2970
  6897  1251  085D               	movf	___fltol@exp1,w
  6898  1252  3A80               	xorlw	128
  6899  1253  3E97               	addlw	151
  6900  1254  1C03               	btfss	3,0
  6901  1255  2A26               	goto	i1l2948
  6902  1256                     i1l2968:	
  6903  1256  3001               	movlw	1
  6904  1257                     u501_25:	
  6905  1257  1003               	clrc
  6906  1258  0CD6               	rrf	___fltol@f1+3,f
  6907  1259  0CD5               	rrf	___fltol@f1+2,f
  6908  125A  0CD4               	rrf	___fltol@f1+1,f
  6909  125B  0CD3               	rrf	___fltol@f1,f
  6910  125C  3EFF               	addlw	-1
  6911  125D  1D03               	skipz
  6912  125E  2A57               	goto	u501_25
  6913  125F  3001               	movlw	1
  6914  1260  00D7               	movwf	??___fltol
  6915  1261  0857               	movf	??___fltol,w
  6916  1262  07DD               	addwf	___fltol@exp1,f
  6917  1263  1903               	btfsc	3,2
  6918  1264  2A79               	goto	i1l2978
  6919  1265  2A56               	goto	i1l2968
  6920  1266                     i1l2970:	
  6921  1266  3020               	movlw	32
  6922  1267  025D               	subwf	___fltol@exp1,w
  6923  1268  1803               	btfsc	3,0
  6924  1269  2A26               	goto	i1l2948
  6925  126A                     i1l498:	
  6926  126A  085D               	movf	___fltol@exp1,w
  6927  126B  1903               	btfsc	3,2
  6928  126C  2A79               	goto	i1l2978
  6929  126D  3001               	movlw	1
  6930  126E  00D7               	movwf	??___fltol
  6931  126F                     u504_25:	
  6932  126F  1003               	clrc
  6933  1270  0DD3               	rlf	___fltol@f1,f
  6934  1271  0DD4               	rlf	___fltol@f1+1,f
  6935  1272  0DD5               	rlf	___fltol@f1+2,f
  6936  1273  0DD6               	rlf	___fltol@f1+3,f
  6937  1274  0BD7               	decfsz	??___fltol,f
  6938  1275  2A6F               	goto	u504_25
  6939  1276  3001               	movlw	1
  6940  1277  02DD               	subwf	___fltol@exp1,f
  6941  1278  2A6A               	goto	i1l498
  6942  1279                     i1l2978:	
  6943  1279  085C               	movf	___fltol@sign1,w
  6944  127A  1903               	btfsc	3,2
  6945  127B  0008               	return
  6946  127C  09D3               	comf	___fltol@f1,f
  6947  127D  09D4               	comf	___fltol@f1+1,f
  6948  127E  09D5               	comf	___fltol@f1+2,f
  6949  127F  09D6               	comf	___fltol@f1+3,f
  6950  1280  0AD3               	incf	___fltol@f1,f
  6951  1281  1903               	skipnz
  6952  1282  0AD4               	incf	___fltol@f1+1,f
  6953  1283  1903               	skipnz
  6954  1284  0AD5               	incf	___fltol@f1+2,f
  6955  1285  1903               	skipnz
  6956  1286  0AD6               	incf	___fltol@f1+3,f
  6957  1287  0008               	return
  6958  1288                     __end_of___fltol:	
  6959                           
  6960                           	psect	text23
  6961  1E90                     __ptext23:	
  6962 ;; *************** function ___flsub *****************
  6963 ;; Defined at:
  6964 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  a               4   72[BANK0 ] long 
  6967 ;;  b               4   76[BANK0 ] long 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;		None
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  4   72[BANK0 ] long 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6979 ;;      Params:         0       8       0       0       0
  6980 ;;      Locals:         0       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0
  6982 ;;      Totals:         0       8       0       0       0
  6983 ;;Total ram usage:        8 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    1
  6986 ;; This function calls:
  6987 ;;		___fladd
  6988 ;; This function is called by:
  6989 ;;		_sprintf
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           
  6994                           ;psect for function ___flsub
  6995  1E90                     ___flsub:	
  6996                           
  6997                           ;incstack = 0
  6998                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6999  1E90  3080               	movlw	128
  7000  1E91  1283               	bcf	3,5	;RP0=0, select bank0
  7001  1E92  1303               	bcf	3,6	;RP1=0, select bank0
  7002  1E93  06EB               	xorwf	___flsub@a+3,f
  7003  1E94  086F               	movf	___flsub@b+3,w
  7004  1E95  00D7               	movwf	___fladd@b+3
  7005  1E96  086E               	movf	___flsub@b+2,w
  7006  1E97  00D6               	movwf	___fladd@b+2
  7007  1E98  086D               	movf	___flsub@b+1,w
  7008  1E99  00D5               	movwf	___fladd@b+1
  7009  1E9A  086C               	movf	___flsub@b,w
  7010  1E9B  00D4               	movwf	___fladd@b
  7011  1E9C  086B               	movf	___flsub@a+3,w
  7012  1E9D  00DB               	movwf	___fladd@a+3
  7013  1E9E  086A               	movf	___flsub@a+2,w
  7014  1E9F  00DA               	movwf	___fladd@a+2
  7015  1EA0  0869               	movf	___flsub@a+1,w
  7016  1EA1  00D9               	movwf	___fladd@a+1
  7017  1EA2  0868               	movf	___flsub@a,w
  7018  1EA3  00D8               	movwf	___fladd@a
  7019  1EA4  120A  118A  258F   	fcall	___fladd
  7020  1EA7  1283               	bcf	3,5	;RP0=0, select bank0
  7021  1EA8  1303               	bcf	3,6	;RP1=0, select bank0
  7022  1EA9  0857               	movf	?___fladd+3,w
  7023  1EAA  00EB               	movwf	?___flsub+3
  7024  1EAB  0856               	movf	?___fladd+2,w
  7025  1EAC  00EA               	movwf	?___flsub+2
  7026  1EAD  0855               	movf	?___fladd+1,w
  7027  1EAE  00E9               	movwf	?___flsub+1
  7028  1EAF  0854               	movf	?___fladd,w
  7029  1EB0  00E8               	movwf	?___flsub
  7030  1EB1  0008               	return
  7031  1EB2                     __end_of___flsub:	
  7032                           
  7033                           	psect	text24
  7034  058F                     __ptext24:	
  7035 ;; *************** function ___fladd *****************
  7036 ;; Defined at:
  7037 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;  b               4   52[BANK0 ] long 
  7040 ;;  a               4   56[BANK0 ] long 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  grs             1   71[BANK0 ] unsigned char 
  7043 ;;  bexp            1   70[BANK0 ] unsigned char 
  7044 ;;  aexp            1   69[BANK0 ] unsigned char 
  7045 ;;  signs           1   68[BANK0 ] unsigned char 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  4   52[BANK0 ] unsigned char 
  7048 ;; Registers used:
  7049 ;;		wreg, status,2, status,0, btemp+1
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7055 ;;      Params:         0       8       0       0       0
  7056 ;;      Locals:         0       4       0       0       0
  7057 ;;      Temps:          0       8       0       0       0
  7058 ;;      Totals:         0      20       0       0       0
  7059 ;;Total ram usage:       20 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_sprintf
  7065 ;;		___flsub
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           
  7070                           ;psect for function ___fladd
  7071  058F                     ___fladd:	
  7072                           
  7073                           ;incstack = 0
  7074                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7075  058F  1283               	bcf	3,5	;RP0=0, select bank0
  7076  0590  1303               	bcf	3,6	;RP1=0, select bank0
  7077  0591  0857               	movf	___fladd@b+3,w
  7078  0592  3980               	andlw	128
  7079  0593  00DC               	movwf	??___fladd
  7080  0594  085C               	movf	??___fladd,w
  7081  0595  00E4               	movwf	___fladd@signs
  7082  0596  0857               	movf	___fladd@b+3,w
  7083  0597  00DC               	movwf	??___fladd
  7084  0598  075C               	addwf	??___fladd,w
  7085  0599  00DD               	movwf	??___fladd+1
  7086  059A  085D               	movf	??___fladd+1,w
  7087  059B  00E6               	movwf	___fladd@bexp
  7088  059C  1BD6               	btfsc	___fladd@b+2,7
  7089  059D  1466               	bsf	___fladd@bexp,0
  7090  059E  0866               	movf	___fladd@bexp,w
  7091  059F  1903               	btfsc	3,2
  7092  05A0  2DAF               	goto	i1l2350
  7093  05A1  0A66               	incf	___fladd@bexp,w
  7094  05A2  1D03               	btfss	3,2
  7095  05A3  2DAC               	goto	i1l2346
  7096  05A4  3000               	movlw	0
  7097  05A5  00D7               	movwf	___fladd@b+3
  7098  05A6  3000               	movlw	0
  7099  05A7  00D6               	movwf	___fladd@b+2
  7100  05A8  3000               	movlw	0
  7101  05A9  00D5               	movwf	___fladd@b+1
  7102  05AA  3000               	movlw	0
  7103  05AB  00D4               	movwf	___fladd@b
  7104  05AC                     i1l2346:	
  7105  05AC  17D6               	bsf	___fladd@b+2,7
  7106  05AD  01D7               	clrf	___fladd@b+3
  7107  05AE  2DB7               	goto	i1l2352
  7108  05AF                     i1l2350:	
  7109  05AF  3000               	movlw	0
  7110  05B0  00D7               	movwf	___fladd@b+3
  7111  05B1  3000               	movlw	0
  7112  05B2  00D6               	movwf	___fladd@b+2
  7113  05B3  3000               	movlw	0
  7114  05B4  00D5               	movwf	___fladd@b+1
  7115  05B5  3000               	movlw	0
  7116  05B6  00D4               	movwf	___fladd@b
  7117  05B7                     i1l2352:	
  7118  05B7  085B               	movf	___fladd@a+3,w
  7119  05B8  3980               	andlw	128
  7120  05B9  00DC               	movwf	??___fladd
  7121  05BA  085C               	movf	??___fladd,w
  7122  05BB  00E5               	movwf	___fladd@aexp
  7123  05BC  0865               	movf	___fladd@aexp,w
  7124  05BD  0664               	xorwf	___fladd@signs,w
  7125  05BE  1D03               	btfss	3,2
  7126  05BF  1764               	bsf	___fladd@signs,6
  7127  05C0  085B               	movf	___fladd@a+3,w
  7128  05C1  00DC               	movwf	??___fladd
  7129  05C2  075C               	addwf	??___fladd,w
  7130  05C3  00DD               	movwf	??___fladd+1
  7131  05C4  085D               	movf	??___fladd+1,w
  7132  05C5  00E5               	movwf	___fladd@aexp
  7133  05C6  1BDA               	btfsc	___fladd@a+2,7
  7134  05C7  1465               	bsf	___fladd@aexp,0
  7135  05C8  0865               	movf	___fladd@aexp,w
  7136  05C9  1903               	btfsc	3,2
  7137  05CA  2DD9               	goto	i1l2374
  7138  05CB  0A65               	incf	___fladd@aexp,w
  7139  05CC  1D03               	btfss	3,2
  7140  05CD  2DD6               	goto	i1l2370
  7141  05CE  3000               	movlw	0
  7142  05CF  00DB               	movwf	___fladd@a+3
  7143  05D0  3000               	movlw	0
  7144  05D1  00DA               	movwf	___fladd@a+2
  7145  05D2  3000               	movlw	0
  7146  05D3  00D9               	movwf	___fladd@a+1
  7147  05D4  3000               	movlw	0
  7148  05D5  00D8               	movwf	___fladd@a
  7149  05D6                     i1l2370:	
  7150  05D6  17DA               	bsf	___fladd@a+2,7
  7151  05D7  01DB               	clrf	___fladd@a+3
  7152  05D8  2DE1               	goto	i1l615
  7153  05D9                     i1l2374:	
  7154  05D9  3000               	movlw	0
  7155  05DA  00DB               	movwf	___fladd@a+3
  7156  05DB  3000               	movlw	0
  7157  05DC  00DA               	movwf	___fladd@a+2
  7158  05DD  3000               	movlw	0
  7159  05DE  00D9               	movwf	___fladd@a+1
  7160  05DF  3000               	movlw	0
  7161  05E0  00D8               	movwf	___fladd@a
  7162  05E1                     i1l615:	
  7163  05E1  0866               	movf	___fladd@bexp,w
  7164  05E2  0265               	subwf	___fladd@aexp,w
  7165  05E3  1803               	skipnc
  7166  05E4  2E27               	goto	i1l2410
  7167  05E5  1F64               	btfss	___fladd@signs,6
  7168  05E6  2DEB               	goto	i1l2380
  7169  05E7  3080               	movlw	128
  7170  05E8  00DC               	movwf	??___fladd
  7171  05E9  085C               	movf	??___fladd,w
  7172  05EA  06E4               	xorwf	___fladd@signs,f
  7173  05EB                     i1l2380:	
  7174  05EB  0866               	movf	___fladd@bexp,w
  7175  05EC  00DC               	movwf	??___fladd
  7176  05ED  085C               	movf	??___fladd,w
  7177  05EE  00E7               	movwf	___fladd@grs
  7178  05EF  0865               	movf	___fladd@aexp,w
  7179  05F0  00DC               	movwf	??___fladd
  7180  05F1  085C               	movf	??___fladd,w
  7181  05F2  00E6               	movwf	___fladd@bexp
  7182  05F3  0867               	movf	___fladd@grs,w
  7183  05F4  00DC               	movwf	??___fladd
  7184  05F5  085C               	movf	??___fladd,w
  7185  05F6  00E5               	movwf	___fladd@aexp
  7186  05F7  0854               	movf	___fladd@b,w
  7187  05F8  00DC               	movwf	??___fladd
  7188  05F9  085C               	movf	??___fladd,w
  7189  05FA  00E7               	movwf	___fladd@grs
  7190  05FB  0858               	movf	___fladd@a,w
  7191  05FC  00DC               	movwf	??___fladd
  7192  05FD  085C               	movf	??___fladd,w
  7193  05FE  00D4               	movwf	___fladd@b
  7194  05FF  0867               	movf	___fladd@grs,w
  7195  0600  00DC               	movwf	??___fladd
  7196  0601  085C               	movf	??___fladd,w
  7197  0602  00D8               	movwf	___fladd@a
  7198  0603  0855               	movf	___fladd@b+1,w
  7199  0604  00DC               	movwf	??___fladd
  7200  0605  085C               	movf	??___fladd,w
  7201  0606  00E7               	movwf	___fladd@grs
  7202  0607  0859               	movf	___fladd@a+1,w
  7203  0608  00DC               	movwf	??___fladd
  7204  0609  085C               	movf	??___fladd,w
  7205  060A  00D5               	movwf	___fladd@b+1
  7206  060B  0867               	movf	___fladd@grs,w
  7207  060C  00DC               	movwf	??___fladd
  7208  060D  085C               	movf	??___fladd,w
  7209  060E  00D9               	movwf	___fladd@a+1
  7210  060F  0856               	movf	___fladd@b+2,w
  7211  0610  00DC               	movwf	??___fladd
  7212  0611  085C               	movf	??___fladd,w
  7213  0612  00E7               	movwf	___fladd@grs
  7214  0613  085A               	movf	___fladd@a+2,w
  7215  0614  00DC               	movwf	??___fladd
  7216  0615  085C               	movf	??___fladd,w
  7217  0616  00D6               	movwf	___fladd@b+2
  7218  0617  0867               	movf	___fladd@grs,w
  7219  0618  00DC               	movwf	??___fladd
  7220  0619  085C               	movf	??___fladd,w
  7221  061A  00DA               	movwf	___fladd@a+2
  7222  061B  0857               	movf	___fladd@b+3,w
  7223  061C  00DC               	movwf	??___fladd
  7224  061D  085C               	movf	??___fladd,w
  7225  061E  00E7               	movwf	___fladd@grs
  7226  061F  085B               	movf	___fladd@a+3,w
  7227  0620  00DC               	movwf	??___fladd
  7228  0621  085C               	movf	??___fladd,w
  7229  0622  00D7               	movwf	___fladd@b+3
  7230  0623  0867               	movf	___fladd@grs,w
  7231  0624  00DC               	movwf	??___fladd
  7232  0625  085C               	movf	??___fladd,w
  7233  0626  00DB               	movwf	___fladd@a+3
  7234  0627                     i1l2410:	
  7235  0627  01E7               	clrf	___fladd@grs
  7236  0628  0865               	movf	___fladd@aexp,w
  7237  0629  00DC               	movwf	??___fladd
  7238  062A  01DD               	clrf	??___fladd+1
  7239  062B  085D               	movf	??___fladd+1,w
  7240  062C  00DF               	movwf	??___fladd+3
  7241  062D  0866               	movf	___fladd@bexp,w
  7242  062E  025C               	subwf	??___fladd,w
  7243  062F  00DE               	movwf	??___fladd+2
  7244  0630  1C03               	skipc
  7245  0631  03DF               	decf	??___fladd+3,f
  7246  0632  085F               	movf	??___fladd+3,w
  7247  0633  3A80               	xorlw	128
  7248  0634  00FF               	movwf	127
  7249  0635  3080               	movlw	128
  7250  0636  027F               	subwf	127,w
  7251  0637  1D03               	skipz
  7252  0638  2E3B               	goto	u345_25
  7253  0639  301A               	movlw	26
  7254  063A  025E               	subwf	??___fladd+2,w
  7255  063B                     u345_25:	
  7256  063B  1C03               	skipc
  7257  063C  2E74               	goto	i1l2428
  7258  063D  1283               	bcf	3,5	;RP0=0, select bank0
  7259  063E  1303               	bcf	3,6	;RP1=0, select bank0
  7260  063F  0857               	movf	___fladd@b+3,w
  7261  0640  0456               	iorwf	___fladd@b+2,w
  7262  0641  0455               	iorwf	___fladd@b+1,w
  7263  0642  0454               	iorwf	___fladd@b,w
  7264  0643  1903               	btfsc	3,2
  7265  0644  2E47               	goto	u346_20
  7266  0645  3001               	movlw	1
  7267  0646  2E48               	goto	u347_20
  7268  0647                     u346_20:	
  7269  0647  3000               	movlw	0
  7270  0648                     u347_20:	
  7271  0648  00DC               	movwf	??___fladd
  7272  0649  085C               	movf	??___fladd,w
  7273  064A  00E7               	movwf	___fladd@grs
  7274  064B  3000               	movlw	0
  7275  064C  00D7               	movwf	___fladd@b+3
  7276  064D  3000               	movlw	0
  7277  064E  00D6               	movwf	___fladd@b+2
  7278  064F  3000               	movlw	0
  7279  0650  00D5               	movwf	___fladd@b+1
  7280  0651  3000               	movlw	0
  7281  0652  00D4               	movwf	___fladd@b
  7282  0653  0865               	movf	___fladd@aexp,w
  7283  0654  00DC               	movwf	??___fladd
  7284  0655  085C               	movf	??___fladd,w
  7285  0656  00E6               	movwf	___fladd@bexp
  7286  0657  2E7A               	goto	i1l619
  7287  0658                     i1l621:	
  7288  0658  1C67               	btfss	___fladd@grs,0
  7289  0659  2E63               	goto	i1l2418
  7290  065A  0867               	movf	___fladd@grs,w
  7291  065B  00DC               	movwf	??___fladd
  7292  065C  1003               	clrc
  7293  065D  0C5C               	rrf	??___fladd,w
  7294  065E  3801               	iorlw	1
  7295  065F  00DD               	movwf	??___fladd+1
  7296  0660  085D               	movf	??___fladd+1,w
  7297  0661  00E7               	movwf	___fladd@grs
  7298  0662  2E65               	goto	i1l2420
  7299  0663                     i1l2418:	
  7300  0663  1003               	clrc
  7301  0664  0CE7               	rrf	___fladd@grs,f
  7302  0665                     i1l2420:	
  7303  0665  1854               	btfsc	___fladd@b,0
  7304  0666  17E7               	bsf	___fladd@grs,7
  7305  0667  3001               	movlw	1
  7306  0668  00DC               	movwf	??___fladd
  7307  0669                     u350_25:	
  7308  0669  0D57               	rlf	___fladd@b+3,w
  7309  066A  0CD7               	rrf	___fladd@b+3,f
  7310  066B  0CD6               	rrf	___fladd@b+2,f
  7311  066C  0CD5               	rrf	___fladd@b+1,f
  7312  066D  0CD4               	rrf	___fladd@b,f
  7313  066E  0BDC               	decfsz	??___fladd& (0+127),f
  7314  066F  2E69               	goto	u350_25
  7315  0670  3001               	movlw	1
  7316  0671  00DC               	movwf	??___fladd
  7317  0672  085C               	movf	??___fladd,w
  7318  0673  07E6               	addwf	___fladd@bexp,f
  7319  0674                     i1l2428:	
  7320  0674  1283               	bcf	3,5	;RP0=0, select bank0
  7321  0675  1303               	bcf	3,6	;RP1=0, select bank0
  7322  0676  0865               	movf	___fladd@aexp,w
  7323  0677  0266               	subwf	___fladd@bexp,w
  7324  0678  1C03               	skipc
  7325  0679  2E58               	goto	i1l621
  7326  067A                     i1l619:	
  7327  067A  1B64               	btfsc	___fladd@signs,6
  7328  067B  2EBB               	goto	i1l2454
  7329  067C  0866               	movf	___fladd@bexp,w
  7330  067D  1D03               	btfss	3,2
  7331  067E  2E88               	goto	i1l2436
  7332  067F  3000               	movlw	0
  7333  0680  00D7               	movwf	?___fladd+3
  7334  0681  3000               	movlw	0
  7335  0682  00D6               	movwf	?___fladd+2
  7336  0683  3000               	movlw	0
  7337  0684  00D5               	movwf	?___fladd+1
  7338  0685  3000               	movlw	0
  7339  0686  00D4               	movwf	?___fladd
  7340  0687  0008               	return
  7341  0688                     i1l2436:	
  7342  0688  0858               	movf	___fladd@a,w
  7343  0689  07D4               	addwf	___fladd@b,f
  7344  068A  0859               	movf	___fladd@a+1,w
  7345  068B  1103               	clrz
  7346  068C  1803               	skipnc
  7347  068D  3E01               	addlw	1
  7348  068E  1D03               	btfss	3,2
  7349  068F  07D5               	addwf	___fladd@b+1,f
  7350  0690  085A               	movf	___fladd@a+2,w
  7351  0691  1103               	clrz
  7352  0692  1803               	skipnc
  7353  0693  3E01               	addlw	1
  7354  0694  1D03               	btfss	3,2
  7355  0695  07D6               	addwf	___fladd@b+2,f
  7356  0696  085B               	movf	___fladd@a+3,w
  7357  0697  1103               	clrz
  7358  0698  1803               	skipnc
  7359  0699  3E01               	addlw	1
  7360  069A  1D03               	btfss	3,2
  7361  069B  07D7               	addwf	___fladd@b+3,f
  7362  069C  1C57               	btfss	___fladd@b+3,0
  7363  069D  2F5D               	goto	i1l2488
  7364  069E  1C67               	btfss	___fladd@grs,0
  7365  069F  2EA9               	goto	i1l2444
  7366  06A0  0867               	movf	___fladd@grs,w
  7367  06A1  00DC               	movwf	??___fladd
  7368  06A2  1003               	clrc
  7369  06A3  0C5C               	rrf	??___fladd,w
  7370  06A4  3801               	iorlw	1
  7371  06A5  00DD               	movwf	??___fladd+1
  7372  06A6  085D               	movf	??___fladd+1,w
  7373  06A7  00E7               	movwf	___fladd@grs
  7374  06A8  2EAB               	goto	i1l2446
  7375  06A9                     i1l2444:	
  7376  06A9  1003               	clrc
  7377  06AA  0CE7               	rrf	___fladd@grs,f
  7378  06AB                     i1l2446:	
  7379  06AB  1854               	btfsc	___fladd@b,0
  7380  06AC  17E7               	bsf	___fladd@grs,7
  7381  06AD  3001               	movlw	1
  7382  06AE  00DC               	movwf	??___fladd
  7383  06AF                     u358_25:	
  7384  06AF  0D57               	rlf	___fladd@b+3,w
  7385  06B0  0CD7               	rrf	___fladd@b+3,f
  7386  06B1  0CD6               	rrf	___fladd@b+2,f
  7387  06B2  0CD5               	rrf	___fladd@b+1,f
  7388  06B3  0CD4               	rrf	___fladd@b,f
  7389  06B4  0BDC               	decfsz	??___fladd& (0+127),f
  7390  06B5  2EAF               	goto	u358_25
  7391  06B6  3001               	movlw	1
  7392  06B7  00DC               	movwf	??___fladd
  7393  06B8  085C               	movf	??___fladd,w
  7394  06B9  07E6               	addwf	___fladd@bexp,f
  7395  06BA  2F5D               	goto	i1l2488
  7396  06BB                     i1l2454:	
  7397  06BB  0857               	movf	___fladd@b+3,w
  7398  06BC  3A80               	xorlw	128
  7399  06BD  00FF               	movwf	127
  7400  06BE  085B               	movf	___fladd@a+3,w
  7401  06BF  3A80               	xorlw	128
  7402  06C0  027F               	subwf	127,w
  7403  06C1  1D03               	skipz
  7404  06C2  2ECD               	goto	u359_23
  7405  06C3  085A               	movf	___fladd@a+2,w
  7406  06C4  0256               	subwf	___fladd@b+2,w
  7407  06C5  1D03               	skipz
  7408  06C6  2ECD               	goto	u359_23
  7409  06C7  0859               	movf	___fladd@a+1,w
  7410  06C8  0255               	subwf	___fladd@b+1,w
  7411  06C9  1D03               	skipz
  7412  06CA  2ECD               	goto	u359_23
  7413  06CB  0858               	movf	___fladd@a,w
  7414  06CC  0254               	subwf	___fladd@b,w
  7415  06CD                     u359_23:	
  7416  06CD  1803               	skipnc
  7417  06CE  2F25               	goto	i1l2464
  7418  06CF  30FF               	movlw	255
  7419  06D0  00DC               	movwf	??___fladd
  7420  06D1  30FF               	movlw	255
  7421  06D2  00DD               	movwf	??___fladd+1
  7422  06D3  30FF               	movlw	255
  7423  06D4  00DE               	movwf	??___fladd+2
  7424  06D5  30FF               	movlw	255
  7425  06D6  00DF               	movwf	??___fladd+3
  7426  06D7  0858               	movf	___fladd@a,w
  7427  06D8  00E0               	movwf	??___fladd+4
  7428  06D9  0859               	movf	___fladd@a+1,w
  7429  06DA  00E1               	movwf	??___fladd+5
  7430  06DB  085A               	movf	___fladd@a+2,w
  7431  06DC  00E2               	movwf	??___fladd+6
  7432  06DD  085B               	movf	___fladd@a+3,w
  7433  06DE  00E3               	movwf	??___fladd+7
  7434  06DF  0854               	movf	___fladd@b,w
  7435  06E0  02E0               	subwf	??___fladd+4,f
  7436  06E1  0855               	movf	___fladd@b+1,w
  7437  06E2  1C03               	skipc
  7438  06E3  0F55               	incfsz	___fladd@b+1,w
  7439  06E4  2EE6               	goto	u360_21
  7440  06E5  2EE7               	goto	u360_22
  7441  06E6                     u360_21:	
  7442  06E6  02E1               	subwf	??___fladd+5,f
  7443  06E7                     u360_22:	
  7444  06E7  0856               	movf	___fladd@b+2,w
  7445  06E8  1C03               	skipc
  7446  06E9  0F56               	incfsz	___fladd@b+2,w
  7447  06EA  2EEC               	goto	u360_23
  7448  06EB  2EED               	goto	u360_24
  7449  06EC                     u360_23:	
  7450  06EC  02E2               	subwf	??___fladd+6,f
  7451  06ED                     u360_24:	
  7452  06ED  0857               	movf	___fladd@b+3,w
  7453  06EE  1C03               	skipc
  7454  06EF  0F57               	incfsz	___fladd@b+3,w
  7455  06F0  2EF2               	goto	u360_25
  7456  06F1  2EF3               	goto	u360_26
  7457  06F2                     u360_25:	
  7458  06F2  02E3               	subwf	??___fladd+7,f
  7459  06F3                     u360_26:	
  7460  06F3  0860               	movf	??___fladd+4,w
  7461  06F4  07DC               	addwf	??___fladd,f
  7462  06F5  0861               	movf	??___fladd+5,w
  7463  06F6  1803               	skipnc
  7464  06F7  0F61               	incfsz	??___fladd+5,w
  7465  06F8  2EFA               	goto	u361_20
  7466  06F9  2EFB               	goto	u361_21
  7467  06FA                     u361_20:	
  7468  06FA  07DD               	addwf	??___fladd+1,f
  7469  06FB                     u361_21:	
  7470  06FB  0862               	movf	??___fladd+6,w
  7471  06FC  1803               	skipnc
  7472  06FD  0F62               	incfsz	??___fladd+6,w
  7473  06FE  2F00               	goto	u361_22
  7474  06FF  2F01               	goto	u361_23
  7475  0700                     u361_22:	
  7476  0700  07DE               	addwf	??___fladd+2,f
  7477  0701                     u361_23:	
  7478  0701  0863               	movf	??___fladd+7,w
  7479  0702  1803               	skipnc
  7480  0703  0A63               	incf	??___fladd+7,w
  7481  0704  07DF               	addwf	??___fladd+3,f
  7482  0705  085F               	movf	??___fladd+3,w
  7483  0706  00D7               	movwf	___fladd@b+3
  7484  0707  085E               	movf	??___fladd+2,w
  7485  0708  00D6               	movwf	___fladd@b+2
  7486  0709  085D               	movf	??___fladd+1,w
  7487  070A  00D5               	movwf	___fladd@b+1
  7488  070B  085C               	movf	??___fladd,w
  7489  070C  00D4               	movwf	___fladd@b
  7490  070D  3080               	movlw	128
  7491  070E  00DC               	movwf	??___fladd
  7492  070F  085C               	movf	??___fladd,w
  7493  0710  06E4               	xorwf	___fladd@signs,f
  7494  0711  09E7               	comf	___fladd@grs,f
  7495  0712  0AE7               	incf	___fladd@grs,f
  7496  0713  0867               	movf	___fladd@grs,w
  7497  0714  1D03               	btfss	3,2
  7498  0715  2F33               	goto	i1l636
  7499  0716  3001               	movlw	1
  7500  0717  07D4               	addwf	___fladd@b,f
  7501  0718  3000               	movlw	0
  7502  0719  1803               	skipnc
  7503  071A  3001               	movlw	1
  7504  071B  07D5               	addwf	___fladd@b+1,f
  7505  071C  3000               	movlw	0
  7506  071D  1803               	skipnc
  7507  071E  3001               	movlw	1
  7508  071F  07D6               	addwf	___fladd@b+2,f
  7509  0720  3000               	movlw	0
  7510  0721  1803               	skipnc
  7511  0722  3001               	movlw	1
  7512  0723  07D7               	addwf	___fladd@b+3,f
  7513  0724  2F33               	goto	i1l636
  7514  0725                     i1l2464:	
  7515  0725  0858               	movf	___fladd@a,w
  7516  0726  02D4               	subwf	___fladd@b,f
  7517  0727  0859               	movf	___fladd@a+1,w
  7518  0728  1C03               	skipc
  7519  0729  0F59               	incfsz	___fladd@a+1,w
  7520  072A  02D5               	subwf	___fladd@b+1,f
  7521  072B  085A               	movf	___fladd@a+2,w
  7522  072C  1C03               	skipc
  7523  072D  0F5A               	incfsz	___fladd@a+2,w
  7524  072E  02D6               	subwf	___fladd@b+2,f
  7525  072F  085B               	movf	___fladd@a+3,w
  7526  0730  1C03               	skipc
  7527  0731  0F5B               	incfsz	___fladd@a+3,w
  7528  0732  02D7               	subwf	___fladd@b+3,f
  7529  0733                     i1l636:	
  7530  0733  0857               	movf	___fladd@b+3,w
  7531  0734  0456               	iorwf	___fladd@b+2,w
  7532  0735  0455               	iorwf	___fladd@b+1,w
  7533  0736  0454               	iorwf	___fladd@b,w
  7534  0737  1D03               	skipz
  7535  0738  2F5B               	goto	i1l2486
  7536  0739  0867               	movf	___fladd@grs,w
  7537  073A  1D03               	btfss	3,2
  7538  073B  2F5B               	goto	i1l2486
  7539  073C  3000               	movlw	0
  7540  073D  00D7               	movwf	?___fladd+3
  7541  073E  3000               	movlw	0
  7542  073F  00D6               	movwf	?___fladd+2
  7543  0740  3000               	movlw	0
  7544  0741  00D5               	movwf	?___fladd+1
  7545  0742  3000               	movlw	0
  7546  0743  00D4               	movwf	?___fladd
  7547  0744  0008               	return
  7548  0745                     i1l2472:	
  7549  0745  3001               	movlw	1
  7550  0746  00DC               	movwf	??___fladd
  7551  0747                     u365_25:	
  7552  0747  1003               	clrc
  7553  0748  0DD4               	rlf	___fladd@b,f
  7554  0749  0DD5               	rlf	___fladd@b+1,f
  7555  074A  0DD6               	rlf	___fladd@b+2,f
  7556  074B  0DD7               	rlf	___fladd@b+3,f
  7557  074C  0BDC               	decfsz	??___fladd,f
  7558  074D  2F47               	goto	u365_25
  7559  074E  1BE7               	btfsc	___fladd@grs,7
  7560  074F  1454               	bsf	___fladd@b,0
  7561  0750  1C67               	btfss	___fladd@grs,0
  7562  0751  2F54               	goto	i1l2480
  7563  0752  1403               	setc
  7564  0753  2F55               	goto	L7
  7565  0754                     i1l2480:	
  7566  0754  1003               	clrc
  7567  0755                     L7:	
  7568  0755  0DE7               	rlf	___fladd@grs,f
  7569  0756  0866               	movf	___fladd@bexp,w
  7570  0757  1903               	btfsc	3,2
  7571  0758  2F5B               	goto	i1l2486
  7572  0759  3001               	movlw	1
  7573  075A  02E6               	subwf	___fladd@bexp,f
  7574  075B                     i1l2486:	
  7575  075B  1FD6               	btfss	___fladd@b+2,7
  7576  075C  2F45               	goto	i1l2472
  7577  075D                     i1l2488:	
  7578  075D  01E5               	clrf	___fladd@aexp
  7579  075E  1FE7               	btfss	___fladd@grs,7
  7580  075F  2F68               	goto	i1l2498
  7581  0760  0867               	movf	___fladd@grs,w
  7582  0761  397F               	andlw	127
  7583  0762  1903               	btfsc	3,2
  7584  0763  1854               	btfsc	___fladd@b,0
  7585  0764  2F66               	goto	i1l2494
  7586  0765  2F68               	goto	i1l2498
  7587  0766                     i1l2494:	
  7588  0766  01E5               	clrf	___fladd@aexp
  7589  0767  0AE5               	incf	___fladd@aexp,f
  7590  0768                     i1l2498:	
  7591  0768  0865               	movf	___fladd@aexp,w
  7592  0769  1903               	btfsc	3,2
  7593  076A  2F9B               	goto	i1l649
  7594  076B  3001               	movlw	1
  7595  076C  07D4               	addwf	___fladd@b,f
  7596  076D  3000               	movlw	0
  7597  076E  1803               	skipnc
  7598  076F  3001               	movlw	1
  7599  0770  07D5               	addwf	___fladd@b+1,f
  7600  0771  3000               	movlw	0
  7601  0772  1803               	skipnc
  7602  0773  3001               	movlw	1
  7603  0774  07D6               	addwf	___fladd@b+2,f
  7604  0775  3000               	movlw	0
  7605  0776  1803               	skipnc
  7606  0777  3001               	movlw	1
  7607  0778  07D7               	addwf	___fladd@b+3,f
  7608  0779  1C57               	btfss	___fladd@b+3,0
  7609  077A  2F9B               	goto	i1l649
  7610  077B  0854               	movf	___fladd@b,w
  7611  077C  00DC               	movwf	??___fladd
  7612  077D  0855               	movf	___fladd@b+1,w
  7613  077E  00DD               	movwf	??___fladd+1
  7614  077F  0856               	movf	___fladd@b+2,w
  7615  0780  00DE               	movwf	??___fladd+2
  7616  0781  0857               	movf	___fladd@b+3,w
  7617  0782  00DF               	movwf	??___fladd+3
  7618  0783  3001               	movlw	1
  7619  0784  00E0               	movwf	??___fladd+4
  7620  0785                     u375_25:	
  7621  0785  0D5F               	rlf	??___fladd+3,w
  7622  0786  0CDF               	rrf	??___fladd+3,f
  7623  0787  0CDE               	rrf	??___fladd+2,f
  7624  0788  0CDD               	rrf	??___fladd+1,f
  7625  0789  0CDC               	rrf	??___fladd,f
  7626  078A  0BE0               	decfsz	??___fladd+4,f
  7627  078B  2F85               	goto	u375_25
  7628  078C  085F               	movf	??___fladd+3,w
  7629  078D  00D7               	movwf	___fladd@b+3
  7630  078E  085E               	movf	??___fladd+2,w
  7631  078F  00D6               	movwf	___fladd@b+2
  7632  0790  085D               	movf	??___fladd+1,w
  7633  0791  00D5               	movwf	___fladd@b+1
  7634  0792  085C               	movf	??___fladd,w
  7635  0793  00D4               	movwf	___fladd@b
  7636  0794  0A66               	incf	___fladd@bexp,w
  7637  0795  1903               	btfsc	3,2
  7638  0796  2F9B               	goto	i1l649
  7639  0797  3001               	movlw	1
  7640  0798  00DC               	movwf	??___fladd
  7641  0799  085C               	movf	??___fladd,w
  7642  079A  07E6               	addwf	___fladd@bexp,f
  7643  079B                     i1l649:	
  7644  079B  0A66               	incf	___fladd@bexp,w
  7645  079C  1D03               	btfss	3,2
  7646  079D  0866               	movf	___fladd@bexp,w
  7647  079E  1D03               	btfss	3,2
  7648  079F  2FAB               	goto	i1l2516
  7649  07A0  3000               	movlw	0
  7650  07A1  00D7               	movwf	___fladd@b+3
  7651  07A2  3000               	movlw	0
  7652  07A3  00D6               	movwf	___fladd@b+2
  7653  07A4  3000               	movlw	0
  7654  07A5  00D5               	movwf	___fladd@b+1
  7655  07A6  3000               	movlw	0
  7656  07A7  00D4               	movwf	___fladd@b
  7657  07A8  0866               	movf	___fladd@bexp,w
  7658  07A9  1903               	btfsc	3,2
  7659  07AA  01E4               	clrf	___fladd@signs
  7660  07AB                     i1l2516:	
  7661  07AB  1C66               	btfss	___fladd@bexp,0
  7662  07AC  2FAF               	goto	i1l2520
  7663  07AD  17D6               	bsf	___fladd@b+2,7
  7664  07AE  2FB3               	goto	i1l657
  7665  07AF                     i1l2520:	
  7666  07AF  307F               	movlw	127
  7667  07B0  00DC               	movwf	??___fladd
  7668  07B1  085C               	movf	??___fladd,w
  7669  07B2  05D6               	andwf	___fladd@b+2,f
  7670  07B3                     i1l657:	
  7671  07B3  0866               	movf	___fladd@bexp,w
  7672  07B4  00DC               	movwf	??___fladd
  7673  07B5  1003               	clrc
  7674  07B6  0C5C               	rrf	??___fladd,w
  7675  07B7  00DD               	movwf	??___fladd+1
  7676  07B8  085D               	movf	??___fladd+1,w
  7677  07B9  00D7               	movwf	___fladd@b+3
  7678  07BA  1FE4               	btfss	___fladd@signs,7
  7679  07BB  0008               	return
  7680  07BC  17D7               	bsf	___fladd@b+3,7
  7681  07BD  0008               	return
  7682  07BE                     __end_of___fladd:	
  7683                           
  7684                           	psect	text25
  7685  1DB1                     __ptext25:	
  7686 ;; *************** function ___flneg *****************
  7687 ;; Defined at:
  7688 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  f1              4    0[COMMON] unsigned char 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;		None
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  4    0[COMMON] unsigned char 
  7695 ;; Registers used:
  7696 ;;		wreg
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7702 ;;      Params:         4       0       0       0       0
  7703 ;;      Locals:         0       0       0       0       0
  7704 ;;      Temps:          0       0       0       0       0
  7705 ;;      Totals:         4       0       0       0       0
  7706 ;;Total ram usage:        4 bytes
  7707 ;; Hardware stack levels used:    1
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_sprintf
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           
  7716                           ;psect for function ___flneg
  7717  1DB1                     ___flneg:	
  7718                           
  7719                           ;incstack = 0
  7720                           ; Regs used in ___flneg: [wreg]
  7721  1DB1  0873               	movf	___flneg@f1+3,w
  7722  1DB2  0472               	iorwf	___flneg@f1+2,w
  7723  1DB3  0471               	iorwf	___flneg@f1+1,w
  7724  1DB4  0470               	iorwf	___flneg@f1,w
  7725  1DB5  1903               	skipnz
  7726  1DB6  0008               	return
  7727  1DB7  3080               	movlw	128
  7728  1DB8  06F3               	xorwf	___flneg@f1+3,f
  7729  1DB9  0008               	return
  7730  1DBA                     __end_of___flneg:	
  7731                           
  7732                           	psect	text26
  7733  1288                     __ptext26:	
  7734 ;; *************** function ___flge *****************
  7735 ;; Defined at:
  7736 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  ff1             4    0[COMMON] unsigned char 
  7739 ;;  ff2             4    4[COMMON] unsigned char 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;		None               void
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7751 ;;      Params:         8       0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0
  7753 ;;      Temps:          4       0       0       0       0
  7754 ;;      Totals:        12       0       0       0       0
  7755 ;;Total ram usage:       12 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; This function calls:
  7758 ;;		Nothing
  7759 ;; This function is called by:
  7760 ;;		_sprintf
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           
  7765                           ;psect for function ___flge
  7766  1288                     ___flge:	
  7767                           
  7768                           ;incstack = 0
  7769                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7770  1288  3000               	movlw	0
  7771  1289  0570               	andwf	___flge@ff1,w
  7772  128A  00F8               	movwf	??___flge
  7773  128B  3000               	movlw	0
  7774  128C  0571               	andwf	___flge@ff1+1,w
  7775  128D  00F9               	movwf	??___flge+1
  7776  128E  3080               	movlw	128
  7777  128F  0572               	andwf	___flge@ff1+2,w
  7778  1290  00FA               	movwf	??___flge+2
  7779  1291  307F               	movlw	127
  7780  1292  0573               	andwf	___flge@ff1+3,w
  7781  1293  00FB               	movwf	??___flge+3
  7782  1294  087B               	movf	??___flge+3,w
  7783  1295  047A               	iorwf	??___flge+2,w
  7784  1296  0479               	iorwf	??___flge+1,w
  7785  1297  0478               	iorwf	??___flge,w
  7786  1298  1D03               	skipz
  7787  1299  2AA2               	goto	i1l479
  7788  129A  3000               	movlw	0
  7789  129B  00F3               	movwf	___flge@ff1+3
  7790  129C  3000               	movlw	0
  7791  129D  00F2               	movwf	___flge@ff1+2
  7792  129E  3000               	movlw	0
  7793  129F  00F1               	movwf	___flge@ff1+1
  7794  12A0  3000               	movlw	0
  7795  12A1  00F0               	movwf	___flge@ff1
  7796  12A2                     i1l479:	
  7797  12A2  3000               	movlw	0
  7798  12A3  0574               	andwf	___flge@ff2,w
  7799  12A4  00F8               	movwf	??___flge
  7800  12A5  3000               	movlw	0
  7801  12A6  0575               	andwf	___flge@ff2+1,w
  7802  12A7  00F9               	movwf	??___flge+1
  7803  12A8  3080               	movlw	128
  7804  12A9  0576               	andwf	___flge@ff2+2,w
  7805  12AA  00FA               	movwf	??___flge+2
  7806  12AB  307F               	movlw	127
  7807  12AC  0577               	andwf	___flge@ff2+3,w
  7808  12AD  00FB               	movwf	??___flge+3
  7809  12AE  087B               	movf	??___flge+3,w
  7810  12AF  047A               	iorwf	??___flge+2,w
  7811  12B0  0479               	iorwf	??___flge+1,w
  7812  12B1  0478               	iorwf	??___flge,w
  7813  12B2  1D03               	skipz
  7814  12B3  2ABC               	goto	i1l2924
  7815  12B4  3000               	movlw	0
  7816  12B5  00F7               	movwf	___flge@ff2+3
  7817  12B6  3000               	movlw	0
  7818  12B7  00F6               	movwf	___flge@ff2+2
  7819  12B8  3000               	movlw	0
  7820  12B9  00F5               	movwf	___flge@ff2+1
  7821  12BA  3000               	movlw	0
  7822  12BB  00F4               	movwf	___flge@ff2
  7823  12BC                     i1l2924:	
  7824  12BC  1FF3               	btfss	___flge@ff1+3,7
  7825  12BD  2AE2               	goto	i1l2928
  7826  12BE  3000               	movlw	0
  7827  12BF  00F8               	movwf	??___flge
  7828  12C0  3000               	movlw	0
  7829  12C1  00F9               	movwf	??___flge+1
  7830  12C2  3000               	movlw	0
  7831  12C3  00FA               	movwf	??___flge+2
  7832  12C4  3080               	movlw	128
  7833  12C5  00FB               	movwf	??___flge+3
  7834  12C6  0870               	movf	___flge@ff1,w
  7835  12C7  02F8               	subwf	??___flge,f
  7836  12C8  0871               	movf	___flge@ff1+1,w
  7837  12C9  1C03               	skipc
  7838  12CA  0F71               	incfsz	___flge@ff1+1,w
  7839  12CB  2ACD               	goto	u492_21
  7840  12CC  2ACE               	goto	u492_22
  7841  12CD                     u492_21:	
  7842  12CD  02F9               	subwf	??___flge+1,f
  7843  12CE                     u492_22:	
  7844  12CE  0872               	movf	___flge@ff1+2,w
  7845  12CF  1C03               	skipc
  7846  12D0  0F72               	incfsz	___flge@ff1+2,w
  7847  12D1  2AD3               	goto	u492_23
  7848  12D2  2AD4               	goto	u492_24
  7849  12D3                     u492_23:	
  7850  12D3  02FA               	subwf	??___flge+2,f
  7851  12D4                     u492_24:	
  7852  12D4  0873               	movf	___flge@ff1+3,w
  7853  12D5  1C03               	skipc
  7854  12D6  0F73               	incfsz	___flge@ff1+3,w
  7855  12D7  2AD9               	goto	u492_25
  7856  12D8  2ADA               	goto	u492_26
  7857  12D9                     u492_25:	
  7858  12D9  02FB               	subwf	??___flge+3,f
  7859  12DA                     u492_26:	
  7860  12DA  087B               	movf	??___flge+3,w
  7861  12DB  00F3               	movwf	___flge@ff1+3
  7862  12DC  087A               	movf	??___flge+2,w
  7863  12DD  00F2               	movwf	___flge@ff1+2
  7864  12DE  0879               	movf	??___flge+1,w
  7865  12DF  00F1               	movwf	___flge@ff1+1
  7866  12E0  0878               	movf	??___flge,w
  7867  12E1  00F0               	movwf	___flge@ff1
  7868  12E2                     i1l2928:	
  7869  12E2  1FF7               	btfss	___flge@ff2+3,7
  7870  12E3  2B08               	goto	i1l482
  7871  12E4  3000               	movlw	0
  7872  12E5  00F8               	movwf	??___flge
  7873  12E6  3000               	movlw	0
  7874  12E7  00F9               	movwf	??___flge+1
  7875  12E8  3000               	movlw	0
  7876  12E9  00FA               	movwf	??___flge+2
  7877  12EA  3080               	movlw	128
  7878  12EB  00FB               	movwf	??___flge+3
  7879  12EC  0874               	movf	___flge@ff2,w
  7880  12ED  02F8               	subwf	??___flge,f
  7881  12EE  0875               	movf	___flge@ff2+1,w
  7882  12EF  1C03               	skipc
  7883  12F0  0F75               	incfsz	___flge@ff2+1,w
  7884  12F1  2AF3               	goto	u494_21
  7885  12F2  2AF4               	goto	u494_22
  7886  12F3                     u494_21:	
  7887  12F3  02F9               	subwf	??___flge+1,f
  7888  12F4                     u494_22:	
  7889  12F4  0876               	movf	___flge@ff2+2,w
  7890  12F5  1C03               	skipc
  7891  12F6  0F76               	incfsz	___flge@ff2+2,w
  7892  12F7  2AF9               	goto	u494_23
  7893  12F8  2AFA               	goto	u494_24
  7894  12F9                     u494_23:	
  7895  12F9  02FA               	subwf	??___flge+2,f
  7896  12FA                     u494_24:	
  7897  12FA  0877               	movf	___flge@ff2+3,w
  7898  12FB  1C03               	skipc
  7899  12FC  0F77               	incfsz	___flge@ff2+3,w
  7900  12FD  2AFF               	goto	u494_25
  7901  12FE  2B00               	goto	u494_26
  7902  12FF                     u494_25:	
  7903  12FF  02FB               	subwf	??___flge+3,f
  7904  1300                     u494_26:	
  7905  1300  087B               	movf	??___flge+3,w
  7906  1301  00F7               	movwf	___flge@ff2+3
  7907  1302  087A               	movf	??___flge+2,w
  7908  1303  00F6               	movwf	___flge@ff2+2
  7909  1304  0879               	movf	??___flge+1,w
  7910  1305  00F5               	movwf	___flge@ff2+1
  7911  1306  0878               	movf	??___flge,w
  7912  1307  00F4               	movwf	___flge@ff2
  7913  1308                     i1l482:	
  7914  1308  3080               	movlw	128
  7915  1309  06F3               	xorwf	___flge@ff1+3,f
  7916  130A  3080               	movlw	128
  7917  130B  06F7               	xorwf	___flge@ff2+3,f
  7918  130C  0877               	movf	___flge@ff2+3,w
  7919  130D  0273               	subwf	___flge@ff1+3,w
  7920  130E  1D03               	skipz
  7921  130F  0008               	return
  7922  1310  0876               	movf	___flge@ff2+2,w
  7923  1311  0272               	subwf	___flge@ff1+2,w
  7924  1312  1D03               	skipz
  7925  1313  0008               	return
  7926  1314  0875               	movf	___flge@ff2+1,w
  7927  1315  0271               	subwf	___flge@ff1+1,w
  7928  1316  1D03               	skipz
  7929  1317  0008               	return
  7930  1318  0874               	movf	___flge@ff2,w
  7931  1319  0270               	subwf	___flge@ff1,w
  7932  131A  0008               	return
  7933  131B                     __end_of___flge:	
  7934                           
  7935                           	psect	text27
  7936  1F6E                     __ptext27:	
  7937 ;; *************** function ___fleq *****************
  7938 ;; Defined at:
  7939 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  ff1             4    0[COMMON] unsigned char 
  7942 ;;  ff2             4    4[COMMON] unsigned char 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;		None
  7945 ;; Return value:  Size  Location     Type
  7946 ;;		None               void
  7947 ;; Registers used:
  7948 ;;		wreg, status,2, status,0
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7954 ;;      Params:         8       0       0       0       0
  7955 ;;      Locals:         0       0       0       0       0
  7956 ;;      Temps:          4       0       0       0       0
  7957 ;;      Totals:        12       0       0       0       0
  7958 ;;Total ram usage:       12 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; This function calls:
  7961 ;;		Nothing
  7962 ;; This function is called by:
  7963 ;;		_sprintf
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           
  7968                           ;psect for function ___fleq
  7969  1F6E                     ___fleq:	
  7970                           
  7971                           ;incstack = 0
  7972                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7973  1F6E  3000               	movlw	0
  7974  1F6F  0570               	andwf	___fleq@ff1,w
  7975  1F70  00F8               	movwf	??___fleq
  7976  1F71  3000               	movlw	0
  7977  1F72  0571               	andwf	___fleq@ff1+1,w
  7978  1F73  00F9               	movwf	??___fleq+1
  7979  1F74  3080               	movlw	128
  7980  1F75  0572               	andwf	___fleq@ff1+2,w
  7981  1F76  00FA               	movwf	??___fleq+2
  7982  1F77  307F               	movlw	127
  7983  1F78  0573               	andwf	___fleq@ff1+3,w
  7984  1F79  00FB               	movwf	??___fleq+3
  7985  1F7A  087B               	movf	??___fleq+3,w
  7986  1F7B  047A               	iorwf	??___fleq+2,w
  7987  1F7C  0479               	iorwf	??___fleq+1,w
  7988  1F7D  0478               	iorwf	??___fleq,w
  7989  1F7E  1D03               	skipz
  7990  1F7F  2F88               	goto	i1l474
  7991  1F80  3000               	movlw	0
  7992  1F81  00F3               	movwf	___fleq@ff1+3
  7993  1F82  3000               	movlw	0
  7994  1F83  00F2               	movwf	___fleq@ff1+2
  7995  1F84  3000               	movlw	0
  7996  1F85  00F1               	movwf	___fleq@ff1+1
  7997  1F86  3000               	movlw	0
  7998  1F87  00F0               	movwf	___fleq@ff1
  7999  1F88                     i1l474:	
  8000  1F88  3000               	movlw	0
  8001  1F89  0574               	andwf	___fleq@ff2,w
  8002  1F8A  00F8               	movwf	??___fleq
  8003  1F8B  3000               	movlw	0
  8004  1F8C  0575               	andwf	___fleq@ff2+1,w
  8005  1F8D  00F9               	movwf	??___fleq+1
  8006  1F8E  3080               	movlw	128
  8007  1F8F  0576               	andwf	___fleq@ff2+2,w
  8008  1F90  00FA               	movwf	??___fleq+2
  8009  1F91  307F               	movlw	127
  8010  1F92  0577               	andwf	___fleq@ff2+3,w
  8011  1F93  00FB               	movwf	??___fleq+3
  8012  1F94  087B               	movf	??___fleq+3,w
  8013  1F95  047A               	iorwf	??___fleq+2,w
  8014  1F96  0479               	iorwf	??___fleq+1,w
  8015  1F97  0478               	iorwf	??___fleq,w
  8016  1F98  1D03               	skipz
  8017  1F99  2FA2               	goto	i1l475
  8018  1F9A  3000               	movlw	0
  8019  1F9B  00F7               	movwf	___fleq@ff2+3
  8020  1F9C  3000               	movlw	0
  8021  1F9D  00F6               	movwf	___fleq@ff2+2
  8022  1F9E  3000               	movlw	0
  8023  1F9F  00F5               	movwf	___fleq@ff2+1
  8024  1FA0  3000               	movlw	0
  8025  1FA1  00F4               	movwf	___fleq@ff2
  8026  1FA2                     i1l475:	
  8027  1FA2  0877               	movf	___fleq@ff2+3,w
  8028  1FA3  0673               	xorwf	___fleq@ff1+3,w
  8029  1FA4  1D03               	skipz
  8030  1FA5  2FB0               	goto	u488_25
  8031  1FA6  0876               	movf	___fleq@ff2+2,w
  8032  1FA7  0672               	xorwf	___fleq@ff1+2,w
  8033  1FA8  1D03               	skipz
  8034  1FA9  2FB0               	goto	u488_25
  8035  1FAA  0875               	movf	___fleq@ff2+1,w
  8036  1FAB  0671               	xorwf	___fleq@ff1+1,w
  8037  1FAC  1D03               	skipz
  8038  1FAD  2FB0               	goto	u488_25
  8039  1FAE  0874               	movf	___fleq@ff2,w
  8040  1FAF  0670               	xorwf	___fleq@ff1,w
  8041  1FB0                     u488_25:	
  8042  1FB0  1903               	skipnz
  8043  1FB1  2FB4               	goto	i1l2914
  8044  1FB2  1003               	clrc
  8045  1FB3  0008               	return
  8046  1FB4                     i1l2914:	
  8047  1FB4  1403               	setc
  8048  1FB5  0008               	return
  8049  1FB6                     __end_of___fleq:	
  8050                           
  8051                           	psect	text28
  8052  1E31                     __ptext28:	
  8053 ;; *************** function _lcd_write_string *****************
  8054 ;; Defined at:
  8055 ;;		line 95 in file "./lcd.h"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;  a               1    wreg     PTR unsigned char 
  8058 ;;		 -> my_isr_routine@buf(30), 
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;  a               1    8[COMMON] PTR unsigned char 
  8061 ;;		 -> my_isr_routine@buf(30), 
  8062 ;;  i               2    6[COMMON] int 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  1    wreg      void 
  8065 ;; Registers used:
  8066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8072 ;;      Params:         0       0       0       0       0
  8073 ;;      Locals:         3       0       0       0       0
  8074 ;;      Temps:          1       0       0       0       0
  8075 ;;      Totals:         4       0       0       0       0
  8076 ;;Total ram usage:        4 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; Hardware stack levels required when called:    2
  8079 ;; This function calls:
  8080 ;;		_lcd_write_char
  8081 ;; This function is called by:
  8082 ;;		_my_isr_routine
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           
  8087                           ;psect for function _lcd_write_string
  8088  1E31                     _lcd_write_string:	
  8089                           
  8090                           ;incstack = 0
  8091                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8092                           ;lcd_write_string@a stored from wreg
  8093  1E31  00F8               	movwf	lcd_write_string@a
  8094                           
  8095                           ;./lcd.h: 95: }void lcd_write_string(char *a);./lcd.h: 96: {;./lcd.h: 97:     int i;;./l
      +                          cd.h: 98:     for(i=0;a[i]!='\0';i++)
  8096  1E32  01F6               	clrf	lcd_write_string@i
  8097  1E33  01F7               	clrf	lcd_write_string@i+1
  8098  1E34                     i1l3100:	
  8099  1E34  0876               	movf	lcd_write_string@i,w
  8100  1E35  0778               	addwf	lcd_write_string@a,w
  8101  1E36  00F5               	movwf	??_lcd_write_string
  8102  1E37  0875               	movf	??_lcd_write_string,w
  8103  1E38  0084               	movwf	4
  8104  1E39  1383               	bcf	3,7	;select IRP bank0
  8105  1E3A  0800               	movf	0,w
  8106  1E3B  1903               	btfsc	3,2
  8107  1E3C  0008               	return
  8108                           
  8109                           ;./lcd.h: 99:         lcd_write_char(a[i]);
  8110  1E3D  0876               	movf	lcd_write_string@i,w
  8111  1E3E  0778               	addwf	lcd_write_string@a,w
  8112  1E3F  00F5               	movwf	??_lcd_write_string
  8113  1E40  0875               	movf	??_lcd_write_string,w
  8114  1E41  0084               	movwf	4
  8115  1E42  0800               	movf	0,w
  8116  1E43  160A  158A  2735  160A  158A  	fcall	_lcd_write_char
  8117  1E48  3001               	movlw	1
  8118  1E49  07F6               	addwf	lcd_write_string@i,f
  8119  1E4A  1803               	skipnc
  8120  1E4B  0AF7               	incf	lcd_write_string@i+1,f
  8121  1E4C  3000               	movlw	0
  8122  1E4D  07F7               	addwf	lcd_write_string@i+1,f
  8123  1E4E  2E34               	goto	i1l3100
  8124  1E4F                     __end_of_lcd_write_string:	
  8125                           
  8126                           	psect	text29
  8127  1F35                     __ptext29:	
  8128 ;; *************** function _lcd_write_char *****************
  8129 ;; Defined at:
  8130 ;;		line 81 in file "./lcd.h"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  a               1    wreg     unsigned char 
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;  a               1    4[COMMON] unsigned char 
  8135 ;;  y               1    3[COMMON] unsigned char 
  8136 ;;  temp            1    2[COMMON] unsigned char 
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, status,2, status,0, pclath, cstack
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8146 ;;      Params:         0       0       0       0       0
  8147 ;;      Locals:         3       0       0       0       0
  8148 ;;      Temps:          1       0       0       0       0
  8149 ;;      Totals:         4       0       0       0       0
  8150 ;;Total ram usage:        4 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    1
  8153 ;; This function calls:
  8154 ;;		i1_lcd_port
  8155 ;; This function is called by:
  8156 ;;		_lcd_write_string
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           
  8161                           ;psect for function _lcd_write_char
  8162  1F35                     _lcd_write_char:	
  8163                           
  8164                           ;incstack = 0
  8165                           ; Regs used in _lcd_write_char: [wreg+status,2+status,0+pclath+cstack]
  8166                           ;lcd_write_char@a stored from wreg
  8167  1F35  00F4               	movwf	lcd_write_char@a
  8168                           
  8169                           ;./lcd.h: 82:     char temp,y;;./lcd.h: 83:     temp=a&0x0F;
  8170  1F36  0874               	movf	lcd_write_char@a,w
  8171  1F37  390F               	andlw	15
  8172  1F38  00F1               	movwf	??_lcd_write_char
  8173  1F39  0871               	movf	??_lcd_write_char,w
  8174  1F3A  00F2               	movwf	lcd_write_char@temp
  8175                           
  8176                           ;./lcd.h: 84:     y=a&0xF0;
  8177  1F3B  0874               	movf	lcd_write_char@a,w
  8178  1F3C  39F0               	andlw	240
  8179  1F3D  00F1               	movwf	??_lcd_write_char
  8180  1F3E  0871               	movf	??_lcd_write_char,w
  8181  1F3F  00F3               	movwf	lcd_write_char@y
  8182                           
  8183                           ;./lcd.h: 85:     RD2=1;
  8184  1F40  1283               	bcf	3,5	;RP0=0, select bank0
  8185  1F41  1303               	bcf	3,6	;RP1=0, select bank0
  8186  1F42  1508               	bsf	8,2	;volatile
  8187                           
  8188                           ;./lcd.h: 86:     lcd_port(y>>4);
  8189  1F43  0873               	movf	lcd_write_char@y,w
  8190  1F44  00F1               	movwf	??_lcd_write_char
  8191  1F45  3004               	movlw	4
  8192  1F46                     u423_25:	
  8193  1F46  1003               	clrc
  8194  1F47  0CF1               	rrf	??_lcd_write_char,f
  8195  1F48  3EFF               	addlw	-1
  8196  1F49  1D03               	skipz
  8197  1F4A  2F46               	goto	u423_25
  8198  1F4B  0871               	movf	??_lcd_write_char,w
  8199  1F4C  160A  158A  25C5  160A  158A  	fcall	i1_lcd_port
  8200                           
  8201                           ;./lcd.h: 87:     RD3=1;
  8202  1F51  1283               	bcf	3,5	;RP0=0, select bank0
  8203  1F52  1303               	bcf	3,6	;RP1=0, select bank0
  8204  1F53  1588               	bsf	8,3	;volatile
  8205                           
  8206                           ;./lcd.h: 88:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  8207  1F54  3042               	movlw	66
  8208  1F55  00F1               	movwf	??_lcd_write_char
  8209  1F56                     u597_27:	
  8210  1F56  0BF1               	decfsz	??_lcd_write_char,f
  8211  1F57  2F56               	goto	u597_27
  8212  1F58  0000               	nop
  8213                           
  8214                           ;./lcd.h: 89:     RD3=0;
  8215  1F59  1283               	bcf	3,5	;RP0=0, select bank0
  8216  1F5A  1303               	bcf	3,6	;RP1=0, select bank0
  8217  1F5B  1188               	bcf	8,3	;volatile
  8218                           
  8219                           ;./lcd.h: 90:     lcd_port(temp);
  8220  1F5C  0872               	movf	lcd_write_char@temp,w
  8221  1F5D  160A  158A  25C5  160A  158A  	fcall	i1_lcd_port
  8222                           
  8223                           ;./lcd.h: 91:     RD3=1;
  8224  1F62  1283               	bcf	3,5	;RP0=0, select bank0
  8225  1F63  1303               	bcf	3,6	;RP1=0, select bank0
  8226  1F64  1588               	bsf	8,3	;volatile
  8227                           
  8228                           ;./lcd.h: 92:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  8229  1F65  3042               	movlw	66
  8230  1F66  00F1               	movwf	??_lcd_write_char
  8231  1F67                     u598_27:	
  8232  1F67  0BF1               	decfsz	??_lcd_write_char,f
  8233  1F68  2F67               	goto	u598_27
  8234  1F69  0000               	nop
  8235                           
  8236                           ;./lcd.h: 93:     RD3=0;
  8237  1F6A  1283               	bcf	3,5	;RP0=0, select bank0
  8238  1F6B  1303               	bcf	3,6	;RP1=0, select bank0
  8239  1F6C  1188               	bcf	8,3	;volatile
  8240  1F6D  0008               	return
  8241  1F6E                     __end_of_lcd_write_char:	
  8242                           
  8243                           	psect	text30
  8244  1FB6                     __ptext30:	
  8245 ;; *************** function _lcd_set_cursor *****************
  8246 ;; Defined at:
  8247 ;;		line 40 in file "./lcd.h"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  a               1    wreg     unsigned char 
  8250 ;;  b               1    4[COMMON] unsigned char 
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  a               1    7[COMMON] unsigned char 
  8253 ;;  temp            1   10[COMMON] unsigned char 
  8254 ;;  y               1    9[COMMON] unsigned char 
  8255 ;;  z               1    8[COMMON] unsigned char 
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		wreg, status,2, status,0, pclath, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8265 ;;      Params:         1       0       0       0       0
  8266 ;;      Locals:         4       0       0       0       0
  8267 ;;      Temps:          2       0       0       0       0
  8268 ;;      Totals:         7       0       0       0       0
  8269 ;;Total ram usage:        7 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:    2
  8272 ;; This function calls:
  8273 ;;		i1_lcd_cmd
  8274 ;; This function is called by:
  8275 ;;		_my_isr_routine
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           
  8280                           ;psect for function _lcd_set_cursor
  8281  1FB6                     _lcd_set_cursor:	
  8282                           
  8283                           ;incstack = 0
  8284                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  8285                           ;lcd_set_cursor@a stored from wreg
  8286  1FB6  00F7               	movwf	lcd_set_cursor@a
  8287                           
  8288                           ;./lcd.h: 40: void lcd_set_cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:     char t
      +                          emp,z,y;;./lcd.h: 43:     if(a==1)
  8289  1FB7  0377               	decf	lcd_set_cursor@a,w
  8290  1FB8  1D03               	btfss	3,2
  8291  1FB9  2FDB               	goto	i1l3074
  8292                           
  8293                           ;./lcd.h: 44:     {;./lcd.h: 45:         temp=0x80+b-1;
  8294  1FBA  0874               	movf	lcd_set_cursor@b,w
  8295  1FBB  3E7F               	addlw	127
  8296  1FBC  00F5               	movwf	??_lcd_set_cursor
  8297  1FBD  0875               	movf	??_lcd_set_cursor,w
  8298  1FBE  00FA               	movwf	lcd_set_cursor@temp
  8299                           
  8300                           ;./lcd.h: 46:         z=temp>>4;
  8301  1FBF  087A               	movf	lcd_set_cursor@temp,w
  8302  1FC0  00F5               	movwf	??_lcd_set_cursor
  8303  1FC1  3004               	movlw	4
  8304  1FC2                     u528_25:	
  8305  1FC2  1003               	clrc
  8306  1FC3  0CF5               	rrf	??_lcd_set_cursor,f
  8307  1FC4  3EFF               	addlw	-1
  8308  1FC5  1D03               	skipz
  8309  1FC6  2FC2               	goto	u528_25
  8310  1FC7  0875               	movf	??_lcd_set_cursor,w
  8311  1FC8  00F6               	movwf	??_lcd_set_cursor+1
  8312  1FC9  0876               	movf	??_lcd_set_cursor+1,w
  8313  1FCA  00F8               	movwf	lcd_set_cursor@z
  8314                           
  8315                           ;./lcd.h: 47:         y=temp & 0x0F;
  8316  1FCB  087A               	movf	lcd_set_cursor@temp,w
  8317  1FCC  390F               	andlw	15
  8318  1FCD  00F5               	movwf	??_lcd_set_cursor
  8319  1FCE  0875               	movf	??_lcd_set_cursor,w
  8320  1FCF  00F9               	movwf	lcd_set_cursor@y
  8321                           
  8322                           ;./lcd.h: 48:         lcd_cmd(z);
  8323  1FD0  0878               	movf	lcd_set_cursor@z,w
  8324  1FD1  160A  158A  25DF  160A  158A  	fcall	i1_lcd_cmd
  8325                           
  8326                           ;./lcd.h: 49:         lcd_cmd(y);
  8327  1FD6  0879               	movf	lcd_set_cursor@y,w
  8328  1FD7  160A  158A  25DF   	fcall	i1_lcd_cmd
  8329                           
  8330                           ;./lcd.h: 50:     }
  8331  1FDA  0008               	return
  8332  1FDB                     i1l3074:	
  8333  1FDB  3002               	movlw	2
  8334  1FDC  0677               	xorwf	lcd_set_cursor@a,w
  8335  1FDD  1D03               	btfss	3,2
  8336  1FDE  0008               	return
  8337                           
  8338                           ;./lcd.h: 53:     {;./lcd.h: 54:          temp=0xC0+b-1;
  8339  1FDF  0874               	movf	lcd_set_cursor@b,w
  8340  1FE0  3EBF               	addlw	191
  8341  1FE1  00F5               	movwf	??_lcd_set_cursor
  8342  1FE2  0875               	movf	??_lcd_set_cursor,w
  8343  1FE3  00FA               	movwf	lcd_set_cursor@temp
  8344                           
  8345                           ;./lcd.h: 55:         z=temp>>4;
  8346  1FE4  087A               	movf	lcd_set_cursor@temp,w
  8347  1FE5  00F5               	movwf	??_lcd_set_cursor
  8348  1FE6  3004               	movlw	4
  8349  1FE7                     u530_25:	
  8350  1FE7  1003               	clrc
  8351  1FE8  0CF5               	rrf	??_lcd_set_cursor,f
  8352  1FE9  3EFF               	addlw	-1
  8353  1FEA  1D03               	skipz
  8354  1FEB  2FE7               	goto	u530_25
  8355  1FEC  0875               	movf	??_lcd_set_cursor,w
  8356  1FED  00F6               	movwf	??_lcd_set_cursor+1
  8357  1FEE  0876               	movf	??_lcd_set_cursor+1,w
  8358  1FEF  00F8               	movwf	lcd_set_cursor@z
  8359                           
  8360                           ;./lcd.h: 56:         y=temp & 0x0F;
  8361  1FF0  087A               	movf	lcd_set_cursor@temp,w
  8362  1FF1  390F               	andlw	15
  8363  1FF2  00F5               	movwf	??_lcd_set_cursor
  8364  1FF3  0875               	movf	??_lcd_set_cursor,w
  8365  1FF4  00F9               	movwf	lcd_set_cursor@y
  8366                           
  8367                           ;./lcd.h: 57:         lcd_cmd(z);
  8368  1FF5  0878               	movf	lcd_set_cursor@z,w
  8369  1FF6  160A  158A  25DF  160A  158A  	fcall	i1_lcd_cmd
  8370                           
  8371                           ;./lcd.h: 58:         lcd_cmd(y);
  8372  1FFB  0879               	movf	lcd_set_cursor@y,w
  8373  1FFC  160A  158A  25DF   	fcall	i1_lcd_cmd
  8374  1FFF  0008               	return
  8375  2000                     __end_of_lcd_set_cursor:	
  8376                           
  8377                           	psect	text31
  8378  1DBA                     __ptext31:	
  8379 ;; *************** function _lcd_clear *****************
  8380 ;; Defined at:
  8381 ;;		line 34 in file "./lcd.h"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;		None
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;		None
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  1    wreg      void 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0, pclath, cstack
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8395 ;;      Params:         0       0       0       0       0
  8396 ;;      Locals:         0       0       0       0       0
  8397 ;;      Temps:          0       0       0       0       0
  8398 ;;      Totals:         0       0       0       0       0
  8399 ;;Total ram usage:        0 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    2
  8402 ;; This function calls:
  8403 ;;		i1_lcd_cmd
  8404 ;; This function is called by:
  8405 ;;		_my_isr_routine
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           
  8410                           ;psect for function _lcd_clear
  8411  1DBA                     _lcd_clear:	
  8412                           
  8413                           ;./lcd.h: 36:     lcd_cmd(0);
  8414                           
  8415                           ;incstack = 0
  8416                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  8417  1DBA  3000               	movlw	0
  8418  1DBB  160A  158A  25DF  160A  158A  	fcall	i1_lcd_cmd
  8419                           
  8420                           ;./lcd.h: 37:      lcd_cmd(1);
  8421  1DC0  3001               	movlw	1
  8422  1DC1  160A  158A  25DF   	fcall	i1_lcd_cmd
  8423  1DC4  0008               	return
  8424  1DC5                     __end_of_lcd_clear:	
  8425                           
  8426                           	psect	text32
  8427  1DDF                     __ptext32:	
  8428 ;; *************** function i1_lcd_cmd *****************
  8429 ;; Defined at:
  8430 ;;		line 25 in file "./lcd.h"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  a               1    wreg     unsigned char 
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;  a               1    3[COMMON] unsigned char 
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1    wreg      void 
  8437 ;; Registers used:
  8438 ;;		wreg, status,2, status,0, pclath, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8444 ;;      Params:         0       0       0       0       0
  8445 ;;      Locals:         1       0       0       0       0
  8446 ;;      Temps:          2       0       0       0       0
  8447 ;;      Totals:         3       0       0       0       0
  8448 ;;Total ram usage:        3 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:    1
  8451 ;; This function calls:
  8452 ;;		i1_lcd_port
  8453 ;; This function is called by:
  8454 ;;		_lcd_clear
  8455 ;;		_lcd_set_cursor
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           
  8460                           ;psect for function i1_lcd_cmd
  8461  1DDF                     i1_lcd_cmd:	
  8462                           
  8463                           ;incstack = 0
  8464                           ; Regs used in i1_lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  8465                           ;i1lcd_cmd@a stored from wreg
  8466  1DDF  00F3               	movwf	i1lcd_cmd@a
  8467                           
  8468                           ;./lcd.h: 25: void lcd_cmd(char a);./lcd.h: 26: {;./lcd.h: 27:     RD2=0;
  8469  1DE0  1283               	bcf	3,5	;RP0=0, select bank0
  8470  1DE1  1303               	bcf	3,6	;RP1=0, select bank0
  8471  1DE2  1108               	bcf	8,2	;volatile
  8472                           
  8473                           ;./lcd.h: 28:     lcd_port(a);
  8474  1DE3  0873               	movf	i1lcd_cmd@a,w
  8475  1DE4  160A  158A  25C5  160A  158A  	fcall	i1_lcd_port
  8476                           
  8477                           ;./lcd.h: 29:     RD3=1;
  8478  1DE9  1283               	bcf	3,5	;RP0=0, select bank0
  8479  1DEA  1303               	bcf	3,6	;RP1=0, select bank0
  8480  1DEB  1588               	bsf	8,3	;volatile
  8481                           
  8482                           ;./lcd.h: 30:     _delay((unsigned long)((4)*(20000000/4000.0)));
  8483  1DEC  301A               	movlw	26
  8484  1DED  00F2               	movwf	??i1_lcd_cmd+1
  8485  1DEE  30F8               	movlw	248
  8486  1DEF  00F1               	movwf	??i1_lcd_cmd
  8487  1DF0                     u599_27:	
  8488  1DF0  0BF1               	decfsz	??i1_lcd_cmd,f
  8489  1DF1  2DF0               	goto	u599_27
  8490  1DF2  0BF2               	decfsz	??i1_lcd_cmd+1,f
  8491  1DF3  2DF0               	goto	u599_27
  8492  1DF4  0000               	nop
  8493                           
  8494                           ;./lcd.h: 31:     RD3=0;
  8495  1DF5  1283               	bcf	3,5	;RP0=0, select bank0
  8496  1DF6  1303               	bcf	3,6	;RP1=0, select bank0
  8497  1DF7  1188               	bcf	8,3	;volatile
  8498  1DF8  0008               	return
  8499  1DF9                     __end_ofi1_lcd_cmd:	
  8500                           
  8501                           	psect	text33
  8502  1DC5                     __ptext33:	
  8503 ;; *************** function i1_lcd_port *****************
  8504 ;; Defined at:
  8505 ;;		line 1 in file "./lcd.h"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  a               1    wreg     unsigned char 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;  a               1    0[COMMON] unsigned char 
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8519 ;;      Params:         0       0       0       0       0
  8520 ;;      Locals:         1       0       0       0       0
  8521 ;;      Temps:          0       0       0       0       0
  8522 ;;      Totals:         1       0       0       0       0
  8523 ;;Total ram usage:        1 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_lcd_write_char
  8529 ;;		i1_lcd_cmd
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           
  8534                           ;psect for function i1_lcd_port
  8535  1DC5                     i1_lcd_port:	
  8536                           
  8537                           ;incstack = 0
  8538                           ; Regs used in i1_lcd_port: [wreg]
  8539                           ;i1lcd_port@a stored from wreg
  8540  1DC5  00F0               	movwf	i1lcd_port@a
  8541                           
  8542                           ;./lcd.h: 1: void lcd_port (char a);./lcd.h: 2: {;./lcd.h: 3:     if(a & 1)
  8543  1DC6  1C70               	btfss	i1lcd_port@a,0
  8544  1DC7  2DCC               	goto	i1l55
  8545                           
  8546                           ;./lcd.h: 4:         RD4=1;
  8547  1DC8  1283               	bcf	3,5	;RP0=0, select bank0
  8548  1DC9  1303               	bcf	3,6	;RP1=0, select bank0
  8549  1DCA  1608               	bsf	8,4	;volatile
  8550  1DCB  2DCF               	goto	i1l56
  8551  1DCC                     i1l55:	
  8552                           ;./lcd.h: 5:     else
  8553                           
  8554                           
  8555                           ;./lcd.h: 6:         RD4=0;
  8556  1DCC  1283               	bcf	3,5	;RP0=0, select bank0
  8557  1DCD  1303               	bcf	3,6	;RP1=0, select bank0
  8558  1DCE  1208               	bcf	8,4	;volatile
  8559  1DCF                     i1l56:	
  8560                           
  8561                           ;./lcd.h: 8:      if(a & 2)
  8562  1DCF  1CF0               	btfss	i1lcd_port@a,1
  8563  1DD0  2DD3               	goto	i1l57
  8564                           
  8565                           ;./lcd.h: 9:         RD5=1;
  8566  1DD1  1688               	bsf	8,5	;volatile
  8567  1DD2  2DD4               	goto	i1l58
  8568  1DD3                     i1l57:	
  8569                           ;./lcd.h: 10:     else
  8570                           
  8571                           
  8572                           ;./lcd.h: 11:         RD5=0;
  8573  1DD3  1288               	bcf	8,5	;volatile
  8574  1DD4                     i1l58:	
  8575                           
  8576                           ;./lcd.h: 13:      if(a & 4)
  8577  1DD4  1D70               	btfss	i1lcd_port@a,2
  8578  1DD5  2DD8               	goto	i1l59
  8579                           
  8580                           ;./lcd.h: 14:         RD6=1;
  8581  1DD6  1708               	bsf	8,6	;volatile
  8582  1DD7  2DD9               	goto	i1l60
  8583  1DD8                     i1l59:	
  8584                           ;./lcd.h: 15:     else
  8585                           
  8586                           
  8587                           ;./lcd.h: 16:         RD6=0;
  8588  1DD8  1308               	bcf	8,6	;volatile
  8589  1DD9                     i1l60:	
  8590                           
  8591                           ;./lcd.h: 18:      if(a & 8)
  8592  1DD9  1DF0               	btfss	i1lcd_port@a,3
  8593  1DDA  2DDD               	goto	i1l61
  8594                           
  8595                           ;./lcd.h: 19:         RD7=1;
  8596  1DDB  1788               	bsf	8,7	;volatile
  8597  1DDC  0008               	return
  8598  1DDD                     i1l61:	
  8599                           ;./lcd.h: 20:     else
  8600                           
  8601                           
  8602                           ;./lcd.h: 21:         RD7=0;
  8603  1DDD  1388               	bcf	8,7	;volatile
  8604  1DDE  0008               	return
  8605  1DDF                     __end_ofi1_lcd_port:	
  8606                           
  8607                           	psect	text34
  8608  145C                     __ptext34:	
  8609 ;; *************** function ___fldiv *****************
  8610 ;; Defined at:
  8611 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  a               4   32[BANK0 ] void 
  8614 ;;  b               4   36[BANK0 ] void 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;  grs             4   52[BANK0 ] unsigned long 
  8617 ;;  rem             4   45[BANK0 ] unsigned long 
  8618 ;;  new_exp         2   50[BANK0 ] int 
  8619 ;;  aexp            1   57[BANK0 ] unsigned char 
  8620 ;;  bexp            1   56[BANK0 ] unsigned char 
  8621 ;;  sign            1   49[BANK0 ] unsigned char 
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  4   32[BANK0 ] unsigned char 
  8624 ;; Registers used:
  8625 ;;		wreg, status,2, status,0, btemp+1
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8631 ;;      Params:         0       8       0       0       0
  8632 ;;      Locals:         0      13       0       0       0
  8633 ;;      Temps:          0       5       0       0       0
  8634 ;;      Totals:         0      26       0       0       0
  8635 ;;Total ram usage:       26 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_my_isr_routine
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           
  8645                           ;psect for function ___fldiv
  8646  145C                     ___fldiv:	
  8647                           
  8648                           ;incstack = 0
  8649                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8650  145C  1283               	bcf	3,5	;RP0=0, select bank0
  8651  145D  1303               	bcf	3,6	;RP1=0, select bank0
  8652  145E  0847               	movf	___fldiv@b+3,w
  8653  145F  3980               	andlw	128
  8654  1460  00C8               	movwf	??___fldiv
  8655  1461  0848               	movf	??___fldiv,w
  8656  1462  00D1               	movwf	___fldiv@sign
  8657  1463  0847               	movf	___fldiv@b+3,w
  8658  1464  00C8               	movwf	??___fldiv
  8659  1465  0748               	addwf	??___fldiv,w
  8660  1466  00C9               	movwf	??___fldiv+1
  8661  1467  0849               	movf	??___fldiv+1,w
  8662  1468  00D8               	movwf	___fldiv@bexp
  8663  1469  1BC6               	btfsc	___fldiv@b+2,7
  8664  146A  1458               	bsf	___fldiv@bexp,0
  8665  146B  0858               	movf	___fldiv@bexp,w
  8666  146C  1903               	btfsc	3,2
  8667  146D  2C7C               	goto	i1l3314
  8668  146E  0A58               	incf	___fldiv@bexp,w
  8669  146F  1D03               	btfss	3,2
  8670  1470  2C79               	goto	i1l3310
  8671  1471  3000               	movlw	0
  8672  1472  00C7               	movwf	___fldiv@b+3
  8673  1473  3000               	movlw	0
  8674  1474  00C6               	movwf	___fldiv@b+2
  8675  1475  3000               	movlw	0
  8676  1476  00C5               	movwf	___fldiv@b+1
  8677  1477  3000               	movlw	0
  8678  1478  00C4               	movwf	___fldiv@b
  8679  1479                     i1l3310:	
  8680  1479  17C6               	bsf	___fldiv@b+2,7
  8681  147A  01C7               	clrf	___fldiv@b+3
  8682  147B  2C84               	goto	i1l3316
  8683  147C                     i1l3314:	
  8684  147C  3000               	movlw	0
  8685  147D  00C7               	movwf	___fldiv@b+3
  8686  147E  3000               	movlw	0
  8687  147F  00C6               	movwf	___fldiv@b+2
  8688  1480  3000               	movlw	0
  8689  1481  00C5               	movwf	___fldiv@b+1
  8690  1482  3000               	movlw	0
  8691  1483  00C4               	movwf	___fldiv@b
  8692  1484                     i1l3316:	
  8693  1484  0843               	movf	___fldiv@a+3,w
  8694  1485  3980               	andlw	128
  8695  1486  00C8               	movwf	??___fldiv
  8696  1487  0848               	movf	??___fldiv,w
  8697  1488  06D1               	xorwf	___fldiv@sign,f
  8698  1489  0843               	movf	___fldiv@a+3,w
  8699  148A  00C8               	movwf	??___fldiv
  8700  148B  0748               	addwf	??___fldiv,w
  8701  148C  00C9               	movwf	??___fldiv+1
  8702  148D  0849               	movf	??___fldiv+1,w
  8703  148E  00D9               	movwf	___fldiv@aexp
  8704  148F  1BC2               	btfsc	___fldiv@a+2,7
  8705  1490  1459               	bsf	___fldiv@aexp,0
  8706  1491  0859               	movf	___fldiv@aexp,w
  8707  1492  1903               	btfsc	3,2
  8708  1493  2CA2               	goto	i1l3334
  8709  1494  0A59               	incf	___fldiv@aexp,w
  8710  1495  1D03               	btfss	3,2
  8711  1496  2C9F               	goto	i1l3330
  8712  1497  3000               	movlw	0
  8713  1498  00C3               	movwf	___fldiv@a+3
  8714  1499  3000               	movlw	0
  8715  149A  00C2               	movwf	___fldiv@a+2
  8716  149B  3000               	movlw	0
  8717  149C  00C1               	movwf	___fldiv@a+1
  8718  149D  3000               	movlw	0
  8719  149E  00C0               	movwf	___fldiv@a
  8720  149F                     i1l3330:	
  8721  149F  17C2               	bsf	___fldiv@a+2,7
  8722  14A0  01C3               	clrf	___fldiv@a+3
  8723  14A1  2CAA               	goto	i1l671
  8724  14A2                     i1l3334:	
  8725  14A2  3000               	movlw	0
  8726  14A3  00C3               	movwf	___fldiv@a+3
  8727  14A4  3000               	movlw	0
  8728  14A5  00C2               	movwf	___fldiv@a+2
  8729  14A6  3000               	movlw	0
  8730  14A7  00C1               	movwf	___fldiv@a+1
  8731  14A8  3000               	movlw	0
  8732  14A9  00C0               	movwf	___fldiv@a
  8733  14AA                     i1l671:	
  8734  14AA  0843               	movf	___fldiv@a+3,w
  8735  14AB  0442               	iorwf	___fldiv@a+2,w
  8736  14AC  0441               	iorwf	___fldiv@a+1,w
  8737  14AD  0440               	iorwf	___fldiv@a,w
  8738  14AE  1D03               	skipz
  8739  14AF  2CC9               	goto	i1l3344
  8740  14B0  3000               	movlw	0
  8741  14B1  00C7               	movwf	___fldiv@b+3
  8742  14B2  3000               	movlw	0
  8743  14B3  00C6               	movwf	___fldiv@b+2
  8744  14B4  3000               	movlw	0
  8745  14B5  00C5               	movwf	___fldiv@b+1
  8746  14B6  3000               	movlw	0
  8747  14B7  00C4               	movwf	___fldiv@b
  8748  14B8  3080               	movlw	128
  8749  14B9  04C6               	iorwf	___fldiv@b+2,f
  8750  14BA  307F               	movlw	127
  8751  14BB  04C7               	iorwf	___fldiv@b+3,f
  8752  14BC                     L9:	
  8753  14BC  0851               	movf	___fldiv@sign,w
  8754  14BD  00C8               	movwf	??___fldiv
  8755  14BE  0848               	movf	??___fldiv,w
  8756  14BF  04C7               	iorwf	___fldiv@b+3,f
  8757  14C0  0847               	movf	___fldiv@b+3,w
  8758  14C1  00C3               	movwf	?___fldiv+3
  8759  14C2  0846               	movf	___fldiv@b+2,w
  8760  14C3  00C2               	movwf	?___fldiv+2
  8761  14C4  0845               	movf	___fldiv@b+1,w
  8762  14C5  00C1               	movwf	?___fldiv+1
  8763  14C6  0844               	movf	___fldiv@b,w
  8764  14C7  00C0               	movwf	?___fldiv
  8765  14C8  0008               	return
  8766  14C9                     i1l3344:	
  8767  14C9  0858               	movf	___fldiv@bexp,w
  8768  14CA  1D03               	btfss	3,2
  8769  14CB  2CD5               	goto	i1l3350
  8770  14CC  3000               	movlw	0
  8771  14CD  00C3               	movwf	?___fldiv+3
  8772  14CE  3000               	movlw	0
  8773  14CF  00C2               	movwf	?___fldiv+2
  8774  14D0  3000               	movlw	0
  8775  14D1  00C1               	movwf	?___fldiv+1
  8776  14D2  3000               	movlw	0
  8777  14D3  00C0               	movwf	?___fldiv
  8778  14D4  0008               	return
  8779  14D5                     i1l3350:	
  8780  14D5  0858               	movf	___fldiv@bexp,w
  8781  14D6  00C8               	movwf	??___fldiv
  8782  14D7  01C9               	clrf	??___fldiv+1
  8783  14D8  0849               	movf	??___fldiv+1,w
  8784  14D9  00CB               	movwf	??___fldiv+3
  8785  14DA  0859               	movf	___fldiv@aexp,w
  8786  14DB  0248               	subwf	??___fldiv,w
  8787  14DC  00CA               	movwf	??___fldiv+2
  8788  14DD  1C03               	skipc
  8789  14DE  03CB               	decf	??___fldiv+3,f
  8790  14DF  084A               	movf	??___fldiv+2,w
  8791  14E0  3E7F               	addlw	127
  8792  14E1  00D2               	movwf	___fldiv@new_exp
  8793  14E2  084B               	movf	??___fldiv+3,w
  8794  14E3  1803               	skipnc
  8795  14E4  3E01               	addlw	1
  8796  14E5  3E00               	addlw	0
  8797  14E6  00D3               	movwf	___fldiv@new_exp+1
  8798  14E7  0847               	movf	___fldiv@b+3,w
  8799  14E8  00D0               	movwf	___fldiv@rem+3
  8800  14E9  0846               	movf	___fldiv@b+2,w
  8801  14EA  00CF               	movwf	___fldiv@rem+2
  8802  14EB  0845               	movf	___fldiv@b+1,w
  8803  14EC  00CE               	movwf	___fldiv@rem+1
  8804  14ED  0844               	movf	___fldiv@b,w
  8805  14EE  00CD               	movwf	___fldiv@rem
  8806  14EF  3000               	movlw	0
  8807  14F0  00C7               	movwf	___fldiv@b+3
  8808  14F1  3000               	movlw	0
  8809  14F2  00C6               	movwf	___fldiv@b+2
  8810  14F3  3000               	movlw	0
  8811  14F4  00C5               	movwf	___fldiv@b+1
  8812  14F5  3000               	movlw	0
  8813  14F6  00C4               	movwf	___fldiv@b
  8814  14F7  3000               	movlw	0
  8815  14F8  00D7               	movwf	___fldiv@grs+3
  8816  14F9  3000               	movlw	0
  8817  14FA  00D6               	movwf	___fldiv@grs+2
  8818  14FB  3000               	movlw	0
  8819  14FC  00D5               	movwf	___fldiv@grs+1
  8820  14FD  3000               	movlw	0
  8821  14FE  00D4               	movwf	___fldiv@grs
  8822  14FF  01D9               	clrf	___fldiv@aexp
  8823  1500                     i1l3378:	
  8824  1500  301A               	movlw	26
  8825  1501  0259               	subwf	___fldiv@aexp,w
  8826  1502  1803               	btfsc	3,0
  8827  1503  2D48               	goto	i1l3380
  8828  1504  0859               	movf	___fldiv@aexp,w
  8829  1505  1903               	btfsc	3,2
  8830  1506  2D24               	goto	i1l3370
  8831  1507  3001               	movlw	1
  8832  1508  00C8               	movwf	??___fldiv
  8833  1509                     u571_25:	
  8834  1509  1003               	clrc
  8835  150A  0DCD               	rlf	___fldiv@rem,f
  8836  150B  0DCE               	rlf	___fldiv@rem+1,f
  8837  150C  0DCF               	rlf	___fldiv@rem+2,f
  8838  150D  0DD0               	rlf	___fldiv@rem+3,f
  8839  150E  0BC8               	decfsz	??___fldiv,f
  8840  150F  2D09               	goto	u571_25
  8841  1510  3001               	movlw	1
  8842  1511  00C8               	movwf	??___fldiv
  8843  1512                     u572_25:	
  8844  1512  1003               	clrc
  8845  1513  0DC4               	rlf	___fldiv@b,f
  8846  1514  0DC5               	rlf	___fldiv@b+1,f
  8847  1515  0DC6               	rlf	___fldiv@b+2,f
  8848  1516  0DC7               	rlf	___fldiv@b+3,f
  8849  1517  0BC8               	decfsz	??___fldiv,f
  8850  1518  2D12               	goto	u572_25
  8851  1519  1BD7               	btfsc	___fldiv@grs+3,7
  8852  151A  1444               	bsf	___fldiv@b,0
  8853  151B  3001               	movlw	1
  8854  151C  00C8               	movwf	??___fldiv
  8855  151D                     u574_25:	
  8856  151D  1003               	clrc
  8857  151E  0DD4               	rlf	___fldiv@grs,f
  8858  151F  0DD5               	rlf	___fldiv@grs+1,f
  8859  1520  0DD6               	rlf	___fldiv@grs+2,f
  8860  1521  0DD7               	rlf	___fldiv@grs+3,f
  8861  1522  0BC8               	decfsz	??___fldiv,f
  8862  1523  2D1D               	goto	u574_25
  8863  1524                     i1l3370:	
  8864  1524  0843               	movf	___fldiv@a+3,w
  8865  1525  0250               	subwf	___fldiv@rem+3,w
  8866  1526  1D03               	skipz
  8867  1527  2D32               	goto	u575_25
  8868  1528  0842               	movf	___fldiv@a+2,w
  8869  1529  024F               	subwf	___fldiv@rem+2,w
  8870  152A  1D03               	skipz
  8871  152B  2D32               	goto	u575_25
  8872  152C  0841               	movf	___fldiv@a+1,w
  8873  152D  024E               	subwf	___fldiv@rem+1,w
  8874  152E  1D03               	skipz
  8875  152F  2D32               	goto	u575_25
  8876  1530  0840               	movf	___fldiv@a,w
  8877  1531  024D               	subwf	___fldiv@rem,w
  8878  1532                     u575_25:	
  8879  1532  1C03               	skipc
  8880  1533  2D43               	goto	i1l3376
  8881  1534  1757               	bsf	___fldiv@grs+3,6
  8882  1535  0840               	movf	___fldiv@a,w
  8883  1536  02CD               	subwf	___fldiv@rem,f
  8884  1537  0841               	movf	___fldiv@a+1,w
  8885  1538  1C03               	skipc
  8886  1539  0F41               	incfsz	___fldiv@a+1,w
  8887  153A  02CE               	subwf	___fldiv@rem+1,f
  8888  153B  0842               	movf	___fldiv@a+2,w
  8889  153C  1C03               	skipc
  8890  153D  0F42               	incfsz	___fldiv@a+2,w
  8891  153E  02CF               	subwf	___fldiv@rem+2,f
  8892  153F  0843               	movf	___fldiv@a+3,w
  8893  1540  1C03               	skipc
  8894  1541  0F43               	incfsz	___fldiv@a+3,w
  8895  1542  02D0               	subwf	___fldiv@rem+3,f
  8896  1543                     i1l3376:	
  8897  1543  3001               	movlw	1
  8898  1544  00C8               	movwf	??___fldiv
  8899  1545  0848               	movf	??___fldiv,w
  8900  1546  07D9               	addwf	___fldiv@aexp,f
  8901  1547  2D00               	goto	i1l3378
  8902  1548                     i1l3380:	
  8903  1548  0850               	movf	___fldiv@rem+3,w
  8904  1549  044F               	iorwf	___fldiv@rem+2,w
  8905  154A  044E               	iorwf	___fldiv@rem+1,w
  8906  154B  044D               	iorwf	___fldiv@rem,w
  8907  154C  1D03               	btfss	3,2
  8908  154D  1454               	bsf	___fldiv@grs,0
  8909  154E                     i1l3394:	
  8910  154E  1BC6               	btfsc	___fldiv@b+2,7
  8911  154F  2D6B               	goto	i1l3396
  8912  1550  3001               	movlw	1
  8913  1551  00C8               	movwf	??___fldiv
  8914  1552                     u578_25:	
  8915  1552  1003               	clrc
  8916  1553  0DC4               	rlf	___fldiv@b,f
  8917  1554  0DC5               	rlf	___fldiv@b+1,f
  8918  1555  0DC6               	rlf	___fldiv@b+2,f
  8919  1556  0DC7               	rlf	___fldiv@b+3,f
  8920  1557  0BC8               	decfsz	??___fldiv,f
  8921  1558  2D52               	goto	u578_25
  8922  1559  1BD7               	btfsc	___fldiv@grs+3,7
  8923  155A  1444               	bsf	___fldiv@b,0
  8924  155B  3001               	movlw	1
  8925  155C  00C8               	movwf	??___fldiv
  8926  155D                     u580_25:	
  8927  155D  1003               	clrc
  8928  155E  0DD4               	rlf	___fldiv@grs,f
  8929  155F  0DD5               	rlf	___fldiv@grs+1,f
  8930  1560  0DD6               	rlf	___fldiv@grs+2,f
  8931  1561  0DD7               	rlf	___fldiv@grs+3,f
  8932  1562  0BC8               	decfsz	??___fldiv,f
  8933  1563  2D5D               	goto	u580_25
  8934  1564  30FF               	movlw	255
  8935  1565  07D2               	addwf	___fldiv@new_exp,f
  8936  1566  1803               	skipnc
  8937  1567  0AD3               	incf	___fldiv@new_exp+1,f
  8938  1568  30FF               	movlw	255
  8939  1569  07D3               	addwf	___fldiv@new_exp+1,f
  8940  156A  2D4E               	goto	i1l3394
  8941  156B                     i1l3396:	
  8942  156B  01D9               	clrf	___fldiv@aexp
  8943  156C  1FD7               	btfss	___fldiv@grs+3,7
  8944  156D  2D84               	goto	i1l3406
  8945  156E  30FF               	movlw	255
  8946  156F  0554               	andwf	___fldiv@grs,w
  8947  1570  00C8               	movwf	??___fldiv
  8948  1571  30FF               	movlw	255
  8949  1572  0555               	andwf	___fldiv@grs+1,w
  8950  1573  00C9               	movwf	??___fldiv+1
  8951  1574  30FF               	movlw	255
  8952  1575  0556               	andwf	___fldiv@grs+2,w
  8953  1576  00CA               	movwf	??___fldiv+2
  8954  1577  307F               	movlw	127
  8955  1578  0557               	andwf	___fldiv@grs+3,w
  8956  1579  00CB               	movwf	??___fldiv+3
  8957  157A  084B               	movf	??___fldiv+3,w
  8958  157B  044A               	iorwf	??___fldiv+2,w
  8959  157C  0449               	iorwf	??___fldiv+1,w
  8960  157D  0448               	iorwf	??___fldiv,w
  8961  157E  1903               	skipnz
  8962  157F  1844               	btfsc	___fldiv@b,0
  8963  1580  2D82               	goto	i1l3402
  8964  1581  2D84               	goto	i1l3406
  8965  1582                     i1l3402:	
  8966  1582  01D9               	clrf	___fldiv@aexp
  8967  1583  0AD9               	incf	___fldiv@aexp,f
  8968  1584                     i1l3406:	
  8969  1584  0859               	movf	___fldiv@aexp,w
  8970  1585  1903               	btfsc	3,2
  8971  1586  2DB6               	goto	i1l3416
  8972  1587  3001               	movlw	1
  8973  1588  07C4               	addwf	___fldiv@b,f
  8974  1589  3000               	movlw	0
  8975  158A  1803               	skipnc
  8976  158B  3001               	movlw	1
  8977  158C  07C5               	addwf	___fldiv@b+1,f
  8978  158D  3000               	movlw	0
  8979  158E  1803               	skipnc
  8980  158F  3001               	movlw	1
  8981  1590  07C6               	addwf	___fldiv@b+2,f
  8982  1591  3000               	movlw	0
  8983  1592  1803               	skipnc
  8984  1593  3001               	movlw	1
  8985  1594  07C7               	addwf	___fldiv@b+3,f
  8986  1595  1C47               	btfss	___fldiv@b+3,0
  8987  1596  2DB6               	goto	i1l3416
  8988  1597  0844               	movf	___fldiv@b,w
  8989  1598  00C8               	movwf	??___fldiv
  8990  1599  0845               	movf	___fldiv@b+1,w
  8991  159A  00C9               	movwf	??___fldiv+1
  8992  159B  0846               	movf	___fldiv@b+2,w
  8993  159C  00CA               	movwf	??___fldiv+2
  8994  159D  0847               	movf	___fldiv@b+3,w
  8995  159E  00CB               	movwf	??___fldiv+3
  8996  159F  3001               	movlw	1
  8997  15A0  00CC               	movwf	??___fldiv+4
  8998  15A1                     u587_25:	
  8999  15A1  0D4B               	rlf	??___fldiv+3,w
  9000  15A2  0CCB               	rrf	??___fldiv+3,f
  9001  15A3  0CCA               	rrf	??___fldiv+2,f
  9002  15A4  0CC9               	rrf	??___fldiv+1,f
  9003  15A5  0CC8               	rrf	??___fldiv,f
  9004  15A6  0BCC               	decfsz	??___fldiv+4,f
  9005  15A7  2DA1               	goto	u587_25
  9006  15A8  084B               	movf	??___fldiv+3,w
  9007  15A9  00C7               	movwf	___fldiv@b+3
  9008  15AA  084A               	movf	??___fldiv+2,w
  9009  15AB  00C6               	movwf	___fldiv@b+2
  9010  15AC  0849               	movf	??___fldiv+1,w
  9011  15AD  00C5               	movwf	___fldiv@b+1
  9012  15AE  0848               	movf	??___fldiv,w
  9013  15AF  00C4               	movwf	___fldiv@b
  9014  15B0  3001               	movlw	1
  9015  15B1  07D2               	addwf	___fldiv@new_exp,f
  9016  15B2  1803               	skipnc
  9017  15B3  0AD3               	incf	___fldiv@new_exp+1,f
  9018  15B4  3000               	movlw	0
  9019  15B5  07D3               	addwf	___fldiv@new_exp+1,f
  9020  15B6                     i1l3416:	
  9021  15B6  0853               	movf	___fldiv@new_exp+1,w
  9022  15B7  3A80               	xorlw	128
  9023  15B8  00FF               	movwf	127
  9024  15B9  3080               	movlw	128
  9025  15BA  027F               	subwf	127,w
  9026  15BB  1D03               	skipz
  9027  15BC  2DBF               	goto	u588_25
  9028  15BD  30FF               	movlw	255
  9029  15BE  0252               	subwf	___fldiv@new_exp,w
  9030  15BF                     u588_25:	
  9031  15BF  1C03               	skipc
  9032  15C0  2DCF               	goto	i1l3420
  9033  15C1  30FF               	movlw	255
  9034  15C2  1283               	bcf	3,5	;RP0=0, select bank0
  9035  15C3  1303               	bcf	3,6	;RP1=0, select bank0
  9036  15C4  00D2               	movwf	___fldiv@new_exp
  9037  15C5  3000               	movlw	0
  9038  15C6  00D3               	movwf	___fldiv@new_exp+1
  9039  15C7  3000               	movlw	0
  9040  15C8  00C7               	movwf	___fldiv@b+3
  9041  15C9  3000               	movlw	0
  9042  15CA  00C6               	movwf	___fldiv@b+2
  9043  15CB  3000               	movlw	0
  9044  15CC  00C5               	movwf	___fldiv@b+1
  9045  15CD  3000               	movlw	0
  9046  15CE  00C4               	movwf	___fldiv@b
  9047  15CF                     i1l3420:	
  9048  15CF  1283               	bcf	3,5	;RP0=0, select bank0
  9049  15D0  1303               	bcf	3,6	;RP1=0, select bank0
  9050  15D1  0853               	movf	___fldiv@new_exp+1,w
  9051  15D2  3A80               	xorlw	128
  9052  15D3  00FF               	movwf	127
  9053  15D4  3080               	movlw	128
  9054  15D5  027F               	subwf	127,w
  9055  15D6  1D03               	skipz
  9056  15D7  2DDA               	goto	u589_25
  9057  15D8  3001               	movlw	1
  9058  15D9  0252               	subwf	___fldiv@new_exp,w
  9059  15DA                     u589_25:	
  9060  15DA  1803               	skipnc
  9061  15DB  2DE9               	goto	i1l693
  9062  15DC  1283               	bcf	3,5	;RP0=0, select bank0
  9063  15DD  1303               	bcf	3,6	;RP1=0, select bank0
  9064  15DE  01D2               	clrf	___fldiv@new_exp
  9065  15DF  01D3               	clrf	___fldiv@new_exp+1
  9066  15E0  3000               	movlw	0
  9067  15E1  00C7               	movwf	___fldiv@b+3
  9068  15E2  3000               	movlw	0
  9069  15E3  00C6               	movwf	___fldiv@b+2
  9070  15E4  3000               	movlw	0
  9071  15E5  00C5               	movwf	___fldiv@b+1
  9072  15E6  3000               	movlw	0
  9073  15E7  00C4               	movwf	___fldiv@b
  9074  15E8  01D1               	clrf	___fldiv@sign
  9075  15E9                     i1l693:	
  9076  15E9  1283               	bcf	3,5	;RP0=0, select bank0
  9077  15EA  1303               	bcf	3,6	;RP1=0, select bank0
  9078  15EB  0852               	movf	___fldiv@new_exp,w
  9079  15EC  00C8               	movwf	??___fldiv
  9080  15ED  0848               	movf	??___fldiv,w
  9081  15EE  00D8               	movwf	___fldiv@bexp
  9082  15EF  1C58               	btfss	___fldiv@bexp,0
  9083  15F0  2DF3               	goto	i1l3432
  9084  15F1  17C6               	bsf	___fldiv@b+2,7
  9085  15F2  2DF7               	goto	i1l695
  9086  15F3                     i1l3432:	
  9087  15F3  307F               	movlw	127
  9088  15F4  00C8               	movwf	??___fldiv
  9089  15F5  0848               	movf	??___fldiv,w
  9090  15F6  05C6               	andwf	___fldiv@b+2,f
  9091  15F7                     i1l695:	
  9092  15F7  0858               	movf	___fldiv@bexp,w
  9093  15F8  00C8               	movwf	??___fldiv
  9094  15F9  1003               	clrc
  9095  15FA  0C48               	rrf	??___fldiv,w
  9096  15FB  00C9               	movwf	??___fldiv+1
  9097  15FC  0849               	movf	??___fldiv+1,w
  9098  15FD  00C7               	movwf	___fldiv@b+3
  9099  15FE  2CBC               	goto	L9
  9100  15FF                     __end_of___fldiv:	
  9101                           
  9102                           	psect	text35
  9103  1DF9                     __ptext35:	
  9104 ;; *************** function _ADC_Read *****************
  9105 ;; Defined at:
  9106 ;;		line 28 in file "lcd.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  adcChannel      2    0[COMMON] int 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;		None
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  2    0[COMMON] int 
  9113 ;; Registers used:
  9114 ;;		wreg, status,2, btemp+1
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9120 ;;      Params:         2       0       0       0       0
  9121 ;;      Locals:         0       0       0       0       0
  9122 ;;      Temps:          0       0       0       0       0
  9123 ;;      Totals:         2       0       0       0       0
  9124 ;;Total ram usage:        2 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_my_isr_routine
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           
  9134                           ;psect for function _ADC_Read
  9135  1DF9                     _ADC_Read:	
  9136                           
  9137                           ;lcd.c: 29:     ADCON0 = (1<<0) | (adcChannel<3);
  9138                           
  9139                           ;incstack = 0
  9140                           ; Regs used in _ADC_Read: [wreg+status,2+btemp+1]
  9141  1DF9  0871               	movf	ADC_Read@adcChannel+1,w
  9142  1DFA  3A80               	xorlw	128
  9143  1DFB  00FF               	movwf	127
  9144  1DFC  3080               	movlw	128
  9145  1DFD  027F               	subwf	127,w
  9146  1DFE  1D03               	skipz
  9147  1DFF  2E02               	goto	u532_25
  9148  1E00  3003               	movlw	3
  9149  1E01  0270               	subwf	ADC_Read@adcChannel,w
  9150  1E02                     u532_25:	
  9151  1E02  1803               	btfsc	3,0
  9152  1E03  2E06               	goto	u532_20
  9153  1E04  3001               	movlw	1
  9154  1E05  2E07               	goto	u533_20
  9155  1E06                     u532_20:	
  9156  1E06  3000               	movlw	0
  9157  1E07                     u533_20:	
  9158  1E07  3801               	iorlw	1
  9159  1E08  1283               	bcf	3,5	;RP0=0, select bank0
  9160  1E09  1303               	bcf	3,6	;RP1=0, select bank0
  9161  1E0A  009F               	movwf	31	;volatile
  9162                           
  9163                           ;lcd.c: 31:     GO=1;
  9164  1E0B  151F               	bsf	31,2	;volatile
  9165  1E0C                     i1l99:	
  9166                           ;lcd.c: 32:     while(GO_DONE==1);
  9167                           
  9168  1E0C  191F               	btfsc	31,2	;volatile
  9169  1E0D  2E0C               	goto	i1l99
  9170                           
  9171                           ;lcd.c: 35:     return((ADRESH<<8) + ADRESL);
  9172  1E0E  081E               	movf	30,w	;volatile
  9173  1E0F  00F1               	movwf	?_ADC_Read+1
  9174  1E10  1683               	bsf	3,5	;RP0=1, select bank1
  9175  1E11  1303               	bcf	3,6	;RP1=0, select bank1
  9176  1E12  081E               	movf	30,w	;volatile
  9177  1E13  00F0               	movwf	?_ADC_Read
  9178  1E14  0008               	return
  9179  1E15                     __end_of_ADC_Read:	
  9180  007E                     btemp	set	126	;btemp
  9181  007E                     wtemp0	set	126


Data Sizes:
    Strings     7
    Constant    144
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     74      78
    BANK3            96      7       7
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> my_isr_routine@buf(BANK1[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd_write_string@a	PTR unsigned char  size(1) Largest target is 30
		 -> my_isr_routine@buf(BANK1[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    _sprintf->___lldiv
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->_ADC_Read
    _lcd_write_string->_lcd_write_char
    _lcd_write_char->i1_lcd_port
    _lcd_set_cursor->i1_lcd_cmd
    _lcd_clear->i1_lcd_cmd
    i1_lcd_cmd->i1_lcd_port

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr_routine in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    _my_isr_routine->_sprintf

Critical Paths under _main in BANK3

    _main->_lcd_init
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_port

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     199
                                              6 BANK3      1     1      0
                           _ADC_Init
                         _init_timer
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              4 BANK3      2     2      0
                            _lcd_cmd
                           _lcd_port
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0     110
                                              1 BANK3      3     3      0
                           _lcd_port
 ---------------------------------------------------------------------------------
 (2) _lcd_port                                             1     1      0      88
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _my_isr_routine                                      39    39      0   37781
                                             35 BANK1     39    39      0
                           _ADC_Read
                            ___fldiv
                            ___flmul
                           ___xxtofl
                          _lcd_clear
                     _lcd_set_cursor
                   _lcd_write_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             42    37      5   30437
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                               19    15      4    7560
                                             32 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _fround                                              20    16      4    6023
                                             32 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    4545
                                              6 BANK0     26    18      8
                           _ADC_Read (ARG)
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     457
                                             51 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2485
                                             72 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    2288
                                             52 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) _lcd_write_string                                     4     4      0     301
                                              5 COMMON     4     4      0
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (6) _lcd_write_char                                       4     4      0     178
                                              1 COMMON     4     4      0
                         i1_lcd_port
 ---------------------------------------------------------------------------------
 (5) _lcd_set_cursor                                       7     6      1     456
                                              4 COMMON     7     6      1
                          i1_lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_clear                                            0     0      0     110
                          i1_lcd_cmd
 ---------------------------------------------------------------------------------
 (6) i1_lcd_cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_lcd_port
 ---------------------------------------------------------------------------------
 (7) i1_lcd_port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1273
                                             32 BANK0     26    18      8
                           _ADC_Read (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _ADC_Read                                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _init_timer
   _lcd_init
     _lcd_cmd
       _lcd_port
     _lcd_port

 _my_isr_routine (ROOT)
   _ADC_Read
   ___fldiv
     _ADC_Read (ARG)
     ___flmul (ARG)
       _ADC_Read (ARG)
       __Umul8_16 (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl (ARG)
       _ADC_Read (ARG)
   ___flmul
     _ADC_Read (ARG)
     __Umul8_16 (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       _ADC_Read (ARG)
   ___xxtofl
     _ADC_Read (ARG)
   _lcd_clear
     i1_lcd_cmd
       i1_lcd_port
   _lcd_set_cursor
     i1_lcd_cmd
       i1_lcd_port
   _lcd_write_string
     _lcd_write_char
       i1_lcd_port
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           _ADC_Read (ARG)
           __Umul8_16 (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       _ADC_Read (ARG)
       __Umul8_16 (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             _ADC_Read (ARG)
             __Umul8_16 (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___fltol
       ___flmul (ARG)
         _ADC_Read (ARG)
         __Umul8_16 (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           _ADC_Read (ARG)
           __Umul8_16 (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
       _ADC_Read (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         _ADC_Read (ARG)
         __Umul8_16 (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         _ADC_Read (ARG)
         __Umul8_16 (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     4A      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      7       7       9        7.3%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B3      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May 13 22:39:07 2019

             ___fldiv@aexp 0059               ___fldiv@bexp 0058                          pc 0002  
             ___fldiv@sign 0051                         l60 1EF7                         l61 1EFF  
                       l55 1EDE                         l56 1EE1                         l57 1EE9  
                       l58 1EEC                         l59 1EF4                         _GO 00FA  
             ___awdiv@sign 0021                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l118 1E30                        _GIE 005F  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ___flmul@aexp 0038               ___flmul@bexp 0039                _sprintf$808 00AA  
             ___flmul@sign 0033               ___flmul@temp 003E                 i1_lcd_port 1DC5  
             ___flmul@prod 003A            ?_lcd_set_cursor 0074               ___fltol@exp1 005D  
                     STR_1 1096                       _PEIE 005E                       i1l60 1DD9  
                     i1l61 1DDD                       i1l55 1DCC                       i1l56 1DCF  
                     i1l57 1DD3                       i1l58 1DD4                       i1l59 1DD8  
                     i1l99 1E0C                       u5937 11C6                       u5947 11D6  
                     u5957 11E7                       u5967 1E66            lcd_write_char@a 0074  
          lcd_write_char@y 0073     __end_of_lcd_write_char 1F6E                       _main 1E15  
                     btemp 007E           __end_of_ADC_Init 10A5           __end_of_ADC_Read 1E15  
                     start 0016            ___fldiv@new_exp 0052                 i1lcd_cmd@a 0073  
            ___fltol@sign1 005C            __end_of___fladd 07BE                      ?_main 0070  
          __end_of___fldiv 15FF            __end_of___awdiv 115C            __end_of___flneg 1DBA  
          __end_of___awmod 1101            __end_of___flmul 0CB7            __end_of___flsub 1EB2  
          __end_of___fltol 1288            __end_of___lldiv 11BA            ___awdiv@divisor 0077  
                    _T1CON 0010            __end_of___llmod 084F            __end_of___lwdiv 07FA  
                    i1l110 13A6                      i1l242 0043            __end_of___lwmod 1F35  
                    i1l267 0392                      i1l516 08E0                      i1l621 0658  
                    i1l615 05E1                      i1l288 1E79                      i1l474 1F88  
                    i1l482 1308                      i1l475 1FA2                      i1l619 067A  
                    i1l723 0CAA                      i1l636 0733                      i1l469 098A  
                    i1l671 14AA                      i1l479 12A2                      i1l657 07B3  
                    i1l649 079B                      i1l498 126A                      i1l762 142C  
                    i1l763 1436                      i1l755 1416                      i1l772 1EC4  
                    i1l693 15E9                      i1l749 13D6                      i1l695 15F7  
          ___awdiv@counter 0020                      _TMR1H 000F                      _TMR1L 000E  
                    _PORTB 0006                      _PORTD 0008                      _TRISB 0086  
                    _TRISD 0088            __end_of_lcd_cmd 1E6F            __end_of_dpowers 1096  
                    _scale 0CB7                      pclath 000A            ?_lcd_write_char 0070  
                    status 0003                      wtemp0 007E            __end_of_sprintf 058F  
          __initialization 0019         __size_ofi1_lcd_cmd 001A               __end_of_main 1E31  
              i1lcd_port@a 0070                     ??_main 0196       __size_of__tdiv_to_l_ 00A9  
              ?i1_lcd_port 0070                     _ADCON0 001F                     _ADCON1 009F  
         ___llmod@dividend 0074                     ?_scale 0040                     _ADRESH 001E  
                   _ADRESL 009E           ___awdiv@dividend 0079                     i1l2210 110D  
                   i1l3100 1E34                     i1l3020 13E5                     i1l3014 13CE  
                   i1l2302 07EA                     i1l3024 13E9                     i1l2320 1F17  
                   i1l2216 1118                     i1l2410 0627                     i1l3034 142A  
                   i1l3026 13FB                     i1l2306 07F5                     i1l2242 1157  
                   i1l2234 1144                     i1l2226 1120                     i1l3202 033F  
                   i1l3122 0040                     i1l2420 0665                     i1l3036 141B  
                   i1l2324 1F25                     i1l2228 112E                     i1l3310 1479  
                   i1l2350 05AF                     i1l2182 1EBC                     i1l2318 1F09  
                   i1l2238 114F                     i1l2254 10C0                     i1l3214 037D  
                   i1l3142 00B3                     i1l3126 0045                     i1l2520 07AF  
                   i1l2352 05B7                     i1l3048 1453                     i1l2328 1F30  
                   i1l2280 10FC                     i1l2272 10E9                     i1l3232 0407  
                   i1l3208 0341                     i1l3128 005F                     i1l3402 1582  
                   i1l3330 149F                     i1l3314 147C                     i1l3074 1FDB  
                   i1l2418 0663                     i1l2370 05D6                     i1l2346 05AC  
                   i1l2266 10CD                     i1l2258 10C7                     i1l3226 03F4  
                   i1l3420 15CF                     i1l3316 1484                     i1l2516 07AB  
                   i1l2444 06A9                     i1l2436 0688                     i1l2428 0674  
                   i1l2380 05EB                     i1l2540 09BF                     i1l2268 10DB  
                   i1l2276 10F4                     i1l3260 055E                     i1l3172 01B7  
                   i1l3406 1584                     i1l3350 14D5                     i1l3334 14A2  
                   i1l2446 06AB                     i1l2454 06BB                     i1l2374 05D9  
                   i1l2630 0C30                     i1l2622 0BFC                     i1l2542 09C1  
                   i1l2294 07C6                     i1l3246 0440                     i1l3238 0423  
                   i1l3182 0252                     i1l3166 0196                     i1l3158 010D  
                   i1l3432 15F3                     i1l3416 15B6                     i1l3344 14C9  
                   i1l2480 0754                     i1l2472 0745                     i1l2464 0725  
                   i1l2624 0C19                     i1l2560 09E6                     i1l2544 09C9  
                   i1l2296 07D4                     i1l2720 17BE                     i1l3370 1524  
                   i1l2802 08CC                     i1l2634 0C32                     i1l2570 09FC  
                   i1l2562 09EE                     i1l2714 1711                     i1l3266 056F  
                   i1l3186 026D                     i1l3274 002A                     i1l3380 1548  
                   i1l2812 08EF                     i1l2804 08DC                     i1l2644 0C64  
                   i1l3196 02BB                     i1l3268 0574                     i1l3276 058A  
                   i1l2494 0766                     i1l2486 075B                     i1l2902 11B1  
                   i1l2822 090C                     i1l2654 0C93                     i1l2558 09E4  
                   i1l2742 0E34                     i1l3376 1543                     i1l2488 075D  
                   i1l2648 0C7A                     i1l2760 0FD5                     i1l2736 0DA9  
                   i1l3394 154E                     i1l3378 1500                     i1l2914 1FB4  
                   i1l2498 0768                     i1l2818 0903                     i1l2770 0869  
                   i1l2754 0F4A                     i1l2746 0E5F                     i1l3396 156B  
                   i1l2924 12BC                     i1l2844 0962                     i1l2836 093A  
                   i1l3492 0057                     i1l2870 1E71                     i1l2854 0976  
                   i1l2766 0860                     i1l2928 12E2                     i1l2952 122F  
                   i1l2864 0999                     i1l2856 0986                     i1l2792 08B9  
                   i1l2784 0899                     i1l2970 1266                     i1l2890 117C  
                   i1l2948 1226                     i1l2990 081B                     i1l2968 1256  
                   i1l2888 116C                     i1l2978 1279                     i1l2898 11A4  
                   i1l2994 0839                     i1l2988 080B                     i1l2998 0846  
                   u310_25 113B                     u311_25 1145                     u320_25 10EA  
                   u401_25 0BA5                     u403_25 0BCA                     u331_25 1F0C  
                   u307_25 1123                     u324_25 07C9                     u501_25 1257  
                   u405_25 0BE8                     u333_25 1F1D                     u309_25 112F  
                   u317_25 10D0                     u350_25 0669                     u510_25 0829  
                   u406_25 0C00                     u326_25 07D5                     u334_25 1F26  
                   u430_25 177F                     u423_25 1F46                     u511_25 083A  
                   u415_25 0C4F                     u327_25 07E1                     u431_25 17C9  
                   u319_25 10E1                     u360_21 06E6                     u360_22 06E7  
                   u360_23 06EC                     u360_24 06ED                     u360_25 06F2  
                   u504_25 126F                     u520_25 1423                     u416_25 0C6D  
                   u408_25 0C0B                     u328_25 07EB                     u440_25 0E37  
                   u360_26 06F3                     u361_20 06FA                     u361_21 06FB  
                   u361_22 0700                     u361_23 0701                     u345_25 063B  
                   u417_25 0C85                     u425_25 1623                     u346_20 0647  
                   u530_25 1FE7                     u426_25 167D                     u442_25 0E84  
                   u434_25 0CE3                     u347_20 0648                     u451_25 089B  
                   u427_25 16D2                     u443_25 0EC0                     u435_25 0D1F  
                   u532_20 1E06                     u532_25 1E02                     u508_25 080F  
                   u524_25 143E                     u516_25 13F2                     u460_25 08E5  
                   u452_25 08AC                     u444_25 0F0B                     u436_25 0D6A  
                   u533_20 1E07                     u365_25 0747                     u453_25 08BA  
                   u429_25 1732                     u358_25 06AF                     u518_25 140E  
                   u470_25 0977                     u446_25 0F62                     u438_25 0DC1  
                   u542_25 0205                     u359_23 06CD                     u375_25 0785  
                   u447_25 0F9E                     u439_25 0DFD                     u551_25 039A  
                   u528_25 1FC2                     u480_25 1170                     u464_25 093C  
                   u448_25 0FD8                     u473_25 098F                     u465_25 0951  
                   u457_25 08CD                     u553_25 0410                     u545_25 0250  
                   u482_25 117E                     u466_25 0964                     u298_25 1EC5  
                   u394_25 0AAC                     u554_25 041D                     u571_25 1509  
                   u483_25 1193                     u547_25 0344                     u492_21 12CD  
                   u492_22 12CE                     u492_23 12D3                     u492_24 12D4  
                   u580_25 155D                     u572_25 1512                     u492_25 12D9  
                   u484_25 11A5                     u476_25 1E7A                     u556_25 04C0  
                   u548_25 0373                     u492_26 12DA                     u477_25 1E81  
                   u397_25 0B09                     u557_25 0526                     u494_21 12F3  
                   u494_22 12F4                     u494_23 12F9                     u494_24 12FA  
                   u574_25 151D                     u494_25 12FF                     u494_26 1300  
                   u575_25 1532                     u488_25 1FB0                     u578_25 1552  
                   u498_25 1238                     u587_25 15A1                     u588_25 15BF  
                   _TMR1IE 0460                     _TMR1IF 0060                     u589_25 15DA  
                   u597_27 1F56                     u598_27 1F67                     u599_27 1DF0  
                   _TMR1ON 0080           __end_of___xxtofl 145C           __end_of__powers_ 103A  
         __end_of_lcd_init 121B           __end_of_lcd_port 1F03                     ___flge 1288  
                   ___fleq 1F6E                  ??___fladd 005C                     ___wmul 1E6F  
                ??___fldiv 0048                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 002E                  ??___flsub 007E  
                ??___fltol 0057                  ??___lldiv 0078                  ??___llmod 0078  
                ??___lwdiv 007A                  ??___lwmod 0074                     _fround 15FF  
         ___awdiv@quotient 0022            ___awmod@divisor 0070   __end_of_lcd_write_string 1E4F  
          ___awmod@counter 0075                  ??_lcd_cmd 0191         __size_of__Umul8_16 0023  
                ?_ADC_Init 0070                  ?_ADC_Read 0070                     saved_w 007E  
        __end_ofi1_lcd_cmd 1DF9                  ??_sprintf 00A5                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 0022          lcd_write_string@a 0078  
             ___xxtofl@exp 0021          lcd_write_string@i 0076               ___xxtofl@val 0072  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 001F  
               ___flneg@f1 0070                 ___fltol@f1 0053             __pcstackCOMMON 0070  
      __size_ofi1_lcd_port 001A              __end_of_scale 1000           ??_lcd_set_cursor 0075  
               __div_to_l_ 08F8                 ??_ADC_Init 0190                 ??_ADC_Read 0072  
       __size_of_lcd_clear 000B            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0044            __div_to_l_@quot 0020                 __pbssBANK1 00EA  
            __div_to_l_@f1 0070              __div_to_l_@f2 0074          __end_of__Umul8_16 1ED5  
               __pmaintext 1E15                    ?___flge 0070                    ?___fleq 0070  
                  ?___wmul 0070                 __pintentry 0004                    ?_fround 0040  
                ?___xxtofl 0072                    _GO_DONE 00FA           ??_lcd_write_char 0071  
                ?_lcd_init 0070                  ?_lcd_port 0070    __size_of_my_isr_routine 009C  
               __stringtab 1000         lcd_write_char@temp 0072          __end_of__npowers_ 106E  
        __end_of_lcd_clear 1DC5            __size_of___flge 0093            __size_of___fleq 0048  
                  ___fladd 058F                    ___fldiv 145C                    ___awdiv 1101  
                  ___flneg 1DB1                    ___awmod 10B6                    ___flmul 09A2  
                  ___flsub 1E90                    ___fltol 121B                    ___lldiv 115C  
          __size_of___wmul 0021                    ___llmod 0803                 _fround$805 004F  
               _fround$806 004B                    ___lwdiv 07BE                    ___lwmod 1F03  
               _init_timer 10A5            __size_of_fround 0201                    __ptext1 11BA  
                  __ptext2 1E4F                    __ptext3 1ED5                    __ptext4 10A5  
                  __ptext5 109D                    __ptext6 131B                    __ptext7 0023  
                  __ptext8 0CB7                    __ptext9 10B6                    _lcd_cmd 1E4F  
              ?__div_to_l_ 0070                    _counter 00EA                    _dpowers 106E  
               ??___xxtofl 0076           ___awmod@dividend 0072               ??i1_lcd_port 0070  
                  _sprintf 0023                 ??_lcd_init 0194                 ??_lcd_port 0190  
     end_of_initialization 001F            ___lldiv@divisor 0070            ___lldiv@counter 007D  
       __end_ofi1_lcd_port 1DDF             __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074  
            ??__tdiv_to_l_ 0078          ?_lcd_write_string 0070                ___fladd@grs 0067  
       ??_lcd_write_string 0075          my_isr_routine@buf 00C8          my_isr_routine@val 00E6  
            ___xxtofl@sign 0020                ___fldiv@grs 0054                ___fldiv@rem 004D  
        __size_of_ADC_Init 0008          __size_of_ADC_Read 001C                  i1_lcd_cmd 1DDF  
              ___flmul@grs 0034        __size_of__div_to_l_ 00AA             __end_of___flge 131B  
           __end_of___fleq 1FB6             __end_of___wmul 1E90                ?_init_timer 0070  
           __end_of_fround 1800        start_initialization 0019        __end_of__tdiv_to_l_ 08F8  
           _my_isr_routine 131B                 ?i1_lcd_cmd 0070            ___llmod@divisor 0070  
          ___llmod@counter 0079                   ??___flge 0078                   ??___fleq 0078  
                 ??___wmul 0074                  __Umul8_16 1EB2                   ??_fround 0044  
       ADC_Read@adcChannel 0070              sprintf@tmpval 00B9                  ___fladd@a 0058  
                ___fladd@b 0054                 fround@prec 0053                  ___fldiv@a 0040  
                ___fldiv@b 0044                  ___flmul@a 002A                  ___flmul@b 0026  
                ___flsub@a 0068                  ___flsub@b 006C                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0              __pcstackBANK3 0190  
   __end_of_my_isr_routine 13B7          __size_of___xxtofl 00A5          __size_of_lcd_init 0061  
              sprintf@flag 00AF          __size_of_lcd_port 002E                sprintf@eexp 00B7  
              sprintf@fval 00BE        __size_of_init_timer 0011                sprintf@prec 00B1  
         ___lwdiv@dividend 0078                   ?___fladd 0054                   ?___fldiv 0040  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0026                   ?___flsub 0068                   ?___fltol 0053  
                 ?___lldiv 0070                   ?___llmod 0070                  __npowers_ 103A  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
                _lcd_clear 1DBA                  __pstrings 1000                __tdiv_to_l_ 084F  
                 ?_lcd_cmd 0070               ??__div_to_l_ 0078                   _ADC_Init 109D  
                 _ADC_Read 1DF9                  _scale$807 004E            ?_my_isr_routine 0070  
         ___lwdiv@quotient 007B                   ?_sprintf 00A0             __size_of_scale 0349  
  __size_of_lcd_set_cursor 004A                ??i1_lcd_cmd 0071          interrupt_function 0004  
           ___wmul@product 0074            lcd_set_cursor@a 0077            lcd_set_cursor@b 0074  
          lcd_set_cursor@y 0079            lcd_set_cursor@z 0078         __end_of__div_to_l_ 09A2  
               ?_lcd_clear 0070                __stringbase 1005          ___wmul@multiplier 0070  
                lcd_port@a 0190  __size_of_lcd_write_string 001E    __size_of_lcd_write_char 0039  
              ??__Umul8_16 0072           __size_of___fladd 022F           __size_of___fldiv 01A3  
         __size_of___awdiv 005B           __size_of___flneg 0009           __size_of___awmod 004B  
         __size_of___flmul 0315           __size_of___flsub 0022           __size_of___fltol 006D  
         __size_of___lldiv 005E           __size_of___llmod 004C           __size_of___lwdiv 003C  
             ??_init_timer 0190           __size_of___lwmod 0032         __end_of__stringtab 1006  
         __size_of_lcd_cmd 0020         lcd_set_cursor@temp 007A                 sprintf@val 00B3  
                 ___xxtofl 13B7            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 1101                   __ptext11 15FF                   __ptext20 0803  
                 __ptext12 1F03                   __ptext21 115C                   __ptext13 07BE  
                 __ptext30 1FB6                   __ptext22 121B                   __ptext14 09A2  
                 __ptext31 1DBA                   __ptext23 1E90                   __ptext15 1EB2  
                 __ptext32 1DDF                   __ptext24 058F                   __ptext16 084F  
                 __ptext33 1DC5                   __ptext25 1DB1                   __ptext17 08F8  
                 __ptext34 145C                   __ptext26 1288                   __ptext18 13B7  
                 __ptext35 1DF9                   __ptext27 1F6E                   __ptext19 1E6F  
                 __ptext28 1E31                   __ptext29 1F35                   __powers_ 1006  
                 _lcd_init 11BA                   _lcd_port 1ED5           __size_of_sprintf 056C  
            __size_of_main 001C         __end_of_init_timer 10B6                   lcd_cmd@a 0193  
              ??_lcd_clear 0074                   scale@scl 0052                   intlevel1 0000  
           _lcd_set_cursor 1FB6                  sprintf@ap 00AE           __tdiv_to_l_@exp1 0025  
         __tdiv_to_l_@cntr 0024                  sprintf@sp 00BD           __tdiv_to_l_@quot 0020  
         ___lwmod@dividend 0072           ___lldiv@dividend 0074                  stringcode 1000  
             ?__tdiv_to_l_ 0070           ??_my_isr_routine 00C3     __Umul8_16@multiplicand 0070  
                 sprintf@c 00C2                   sprintf@f 00A0           ___lldiv@quotient 0079  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 1000  
                 stringtab 1000     __end_of_lcd_set_cursor 2000              ___fladd@signs 0064  
         _lcd_write_string 1E31               ___fladd@aexp 0065               ___fladd@bexp 0066  
     __Umul8_16@multiplier 0078             _lcd_write_char 1F35          __Umul8_16@product 0074  
