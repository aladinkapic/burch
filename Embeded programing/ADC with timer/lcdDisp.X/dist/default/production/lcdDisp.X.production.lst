

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 19 14:37:35 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.05
    55                           ; Generated 20/12/2018 GMT
    56                           ; 
    57                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F877A Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	strings
   210  1000                     __pstrings:	
   211  1000                     stringtab:	
   212  1000                     __stringtab:	
   213                           
   214                           ;	String table - string pointers are 1 byte each
   215  1000  1BFF               	btfsc	btemp+1,7
   216  1001  280A               	ljmp	stringcode
   217  1002  1383               	bcf	3,7
   218  1003  187F               	btfsc	btemp+1,0
   219  1004  1783               	bsf	3,7
   220  1005  0800               	movf	0,w
   221  1006  0A84               	incf	4,f
   222  1007  1903               	skipnz
   223  1008  0AFF               	incf	btemp+1,f
   224  1009  0008               	return
   225  100A                     stringcode:	
   226  100A                     stringdir:	
   227  100A  3010               	movlw	high stringdir
   228  100B  008A               	movwf	10
   229  100C  0804               	movf	4,w
   230  100D  0A84               	incf	4,f
   231  100E  0782               	addwf	2,f
   232  100F                     __stringbase:	
   233  100F  3400               	retlw	0
   234  1010                     __end_of__stringtab:	
   235  1010                     __powers_:	
   236  1010  3400               	retlw	0
   237  1011  3400               	retlw	0
   238  1012  3480               	retlw	128
   239  1013  343F               	retlw	63
   240  1014  3400               	retlw	0
   241  1015  3400               	retlw	0
   242  1016  3420               	retlw	32
   243  1017  3441               	retlw	65
   244  1018  3400               	retlw	0
   245  1019  3400               	retlw	0
   246  101A  34C8               	retlw	200
   247  101B  3442               	retlw	66
   248  101C  3400               	retlw	0
   249  101D  3400               	retlw	0
   250  101E  347A               	retlw	122
   251  101F  3444               	retlw	68
   252  1020  3400               	retlw	0
   253  1021  3440               	retlw	64
   254  1022  341C               	retlw	28
   255  1023  3446               	retlw	70
   256  1024  3400               	retlw	0
   257  1025  3450               	retlw	80
   258  1026  34C3               	retlw	195
   259  1027  3447               	retlw	71
   260  1028  3400               	retlw	0
   261  1029  3424               	retlw	36
   262  102A  3474               	retlw	116
   263  102B  3449               	retlw	73
   264  102C  3480               	retlw	128
   265  102D  3496               	retlw	150
   266  102E  3418               	retlw	24
   267  102F  344B               	retlw	75
   268  1030  3420               	retlw	32
   269  1031  34BC               	retlw	188
   270  1032  34BE               	retlw	190
   271  1033  344C               	retlw	76
   272  1034  3428               	retlw	40
   273  1035  346B               	retlw	107
   274  1036  346E               	retlw	110
   275  1037  344E               	retlw	78
   276  1038  34F9               	retlw	249
   277  1039  3402               	retlw	2
   278  103A  3415               	retlw	21
   279  103B  3450               	retlw	80
   280  103C  34EC               	retlw	236
   281  103D  3478               	retlw	120
   282  103E  34AD               	retlw	173
   283  103F  3460               	retlw	96
   284  1040  34CA               	retlw	202
   285  1041  34F2               	retlw	242
   286  1042  3449               	retlw	73
   287  1043  3471               	retlw	113
   288  1044                     __end_of__powers_:	
   289  1044                     __npowers_:	
   290  1044  3400               	retlw	0
   291  1045  3400               	retlw	0
   292  1046  3480               	retlw	128
   293  1047  343F               	retlw	63
   294  1048  34CD               	retlw	205
   295  1049  34CC               	retlw	204
   296  104A  34CC               	retlw	204
   297  104B  343D               	retlw	61
   298  104C  340A               	retlw	10
   299  104D  34D7               	retlw	215
   300  104E  3423               	retlw	35
   301  104F  343C               	retlw	60
   302  1050  346F               	retlw	111
   303  1051  3412               	retlw	18
   304  1052  3483               	retlw	131
   305  1053  343A               	retlw	58
   306  1054  3417               	retlw	23
   307  1055  34B7               	retlw	183
   308  1056  34D1               	retlw	209
   309  1057  3438               	retlw	56
   310  1058  34AC               	retlw	172
   311  1059  34C5               	retlw	197
   312  105A  3427               	retlw	39
   313  105B  3437               	retlw	55
   314  105C  34BD               	retlw	189
   315  105D  3437               	retlw	55
   316  105E  3486               	retlw	134
   317  105F  3435               	retlw	53
   318  1060  3495               	retlw	149
   319  1061  34BF               	retlw	191
   320  1062  34D6               	retlw	214
   321  1063  3433               	retlw	51
   322  1064  3477               	retlw	119
   323  1065  34CC               	retlw	204
   324  1066  342B               	retlw	43
   325  1067  3432               	retlw	50
   326  1068  345F               	retlw	95
   327  1069  3470               	retlw	112
   328  106A  3489               	retlw	137
   329  106B  3430               	retlw	48
   330  106C  34FF               	retlw	255
   331  106D  34E6               	retlw	230
   332  106E  34DB               	retlw	219
   333  106F  342E               	retlw	46
   334  1070  3408               	retlw	8
   335  1071  34E5               	retlw	229
   336  1072  343C               	retlw	60
   337  1073  341E               	retlw	30
   338  1074  3460               	retlw	96
   339  1075  3442               	retlw	66
   340  1076  34A2               	retlw	162
   341  1077  340D               	retlw	13
   342  1078                     __end_of__npowers_:	
   343  1078                     _dpowers:	
   344  1078  3401               	retlw	1
   345  1079  3400               	retlw	0
   346  107A  3400               	retlw	0
   347  107B  3400               	retlw	0
   348  107C  340A               	retlw	10
   349  107D  3400               	retlw	0
   350  107E  3400               	retlw	0
   351  107F  3400               	retlw	0
   352  1080  3464               	retlw	100
   353  1081  3400               	retlw	0
   354  1082  3400               	retlw	0
   355  1083  3400               	retlw	0
   356  1084  34E8               	retlw	232
   357  1085  3403               	retlw	3
   358  1086  3400               	retlw	0
   359  1087  3400               	retlw	0
   360  1088  3410               	retlw	16
   361  1089  3427               	retlw	39
   362  108A  3400               	retlw	0
   363  108B  3400               	retlw	0
   364  108C  34A0               	retlw	160
   365  108D  3486               	retlw	134
   366  108E  3401               	retlw	1
   367  108F  3400               	retlw	0
   368  1090  3440               	retlw	64
   369  1091  3442               	retlw	66
   370  1092  340F               	retlw	15
   371  1093  3400               	retlw	0
   372  1094  3480               	retlw	128
   373  1095  3496               	retlw	150
   374  1096  3498               	retlw	152
   375  1097  3400               	retlw	0
   376  1098  3400               	retlw	0
   377  1099  34E1               	retlw	225
   378  109A  34F5               	retlw	245
   379  109B  3405               	retlw	5
   380  109C  3400               	retlw	0
   381  109D  34CA               	retlw	202
   382  109E  349A               	retlw	154
   383  109F  343B               	retlw	59
   384  10A0                     __end_of_dpowers:	
   385  0006                     _PORTB	set	6
   386  0008                     _PORTD	set	8
   387  0006                     _PORTBbits	set	6
   388  0001                     _TMR0	set	1
   389  001F                     _ADCON0bits	set	31
   390  001E                     _ADRESH	set	30
   391  005E                     _PEIE	set	94
   392  005F                     _GIE	set	95
   393  005D                     _TMR0IE	set	93
   394  005A                     _TMR0IF	set	90
   395  0043                     _RD3	set	67
   396  0042                     _RD2	set	66
   397  0047                     _RD7	set	71
   398  0046                     _RD6	set	70
   399  0045                     _RD5	set	69
   400  0044                     _RD4	set	68
   401  0086                     _TRISB	set	134
   402  0088                     _TRISD	set	136
   403  009F                     _ADCON1bits	set	159
   404  0081                     _OPTION_REG	set	129
   405  009E                     _ADRESL	set	158
   406  10A0                     STR_3:	
   407  10A0  3457               	retlw	87	;'W'
   408  10A1  3465               	retlw	101	;'e'
   409  10A2  346C               	retlw	108	;'l'
   410  10A3  3463               	retlw	99	;'c'
   411  10A4  346F               	retlw	111	;'o'
   412  10A5  346D               	retlw	109	;'m'
   413  10A6  3465               	retlw	101	;'e'
   414  10A7  3420               	retlw	32	;' '
   415  10A8  346D               	retlw	109	;'m'
   416  10A9  346F               	retlw	111	;'o'
   417  10AA  3474               	retlw	116	;'t'
   418  10AB  3468               	retlw	104	;'h'
   419  10AC  3465               	retlw	101	;'e'
   420  10AD  3472               	retlw	114	;'r'
   421  10AE  3466               	retlw	102	;'f'
   422  10AF  3475               	retlw	117	;'u'
   423  10B0  3463               	retlw	99	;'c'
   424  10B1  346B               	retlw	107	;'k'
   425  10B2  3465               	retlw	101	;'e'
   426  10B3  3472               	retlw	114	;'r'
   427  10B4  3473               	retlw	115	;'s'
   428  10B5  3400               	retlw	0
   429  10B6                     STR_1:	
   430  10B6  3441               	retlw	65	;'A'
   431  10B7  3444               	retlw	68	;'D'
   432  10B8  3443               	retlw	67	;'C'
   433  10B9  3420               	retlw	32	;' '
   434  10BA  3452               	retlw	82	;'R'
   435  10BB  3465               	retlw	101	;'e'
   436  10BC  3473               	retlw	115	;'s'
   437  10BD  3475               	retlw	117	;'u'
   438  10BE  346C               	retlw	108	;'l'
   439  10BF  3474               	retlw	116	;'t'
   440  10C0  3400               	retlw	0
   441  10C1                     STR_2:	
   442  10C1  3441               	retlw	65	;'A'
   443  10C2  3420               	retlw	32	;' '
   444  10C3  343D               	retlw	61	;'='
   445  10C4  3420               	retlw	32	;' '
   446  10C5  3425               	retlw	37	;'%'
   447  10C6  3466               	retlw	102	;'f'
   448  10C7  3400               	retlw	0
   449                           
   450                           	psect	cinit
   451  0019                     start_initialization:	
   452                           ; #config settings
   453                           
   454  0019                     __initialization:	
   455                           
   456                           ; Clear objects allocated to BANK1
   457  0019  1683               	bsf	3,5	;RP0=1, select bank1
   458  001A  1303               	bcf	3,6	;RP1=0, select bank1
   459  001B  01CF               	clrf	__pbssBANK1& (0+127)
   460  001C  01D0               	clrf	(__pbssBANK1+1)& (0+127)
   461  001D  01D1               	clrf	(__pbssBANK1+2)& (0+127)
   462  001E  01D2               	clrf	(__pbssBANK1+3)& (0+127)
   463                           
   464                           ; Clear objects allocated to BANK3
   465  001F  1683               	bsf	3,5	;RP0=1, select bank3
   466  0020  1703               	bsf	3,6	;RP1=1, select bank3
   467  0021  01C2               	clrf	__pbssBANK3& (0+127)
   468  0022  01C3               	clrf	(__pbssBANK3+1)& (0+127)
   469  0023  01C4               	clrf	(__pbssBANK3+2)& (0+127)
   470  0024  01C5               	clrf	(__pbssBANK3+3)& (0+127)
   471  0025  01C6               	clrf	(__pbssBANK3+4)& (0+127)
   472  0026                     end_of_initialization:	
   473                           ;End of C runtime variable initialization code
   474                           
   475  0026                     __end_of__initialization:	
   476  0026  0183               	clrf	3
   477  0027  160A  158A  2BF3   	ljmp	_main	;jump to C main() function
   478                           
   479                           	psect	bssBANK1
   480  00CF                     __pbssBANK1:	
   481  00CF                     _sekunde:	
   482  00CF                     	ds	4
   483                           
   484                           	psect	bssBANK3
   485  01C2                     __pbssBANK3:	
   486  01C2                     _counter:	
   487  01C2                     	ds	4
   488  01C6                     _value:	
   489  01C6                     	ds	1
   490                           
   491                           	psect	cstackBANK3
   492  0190                     __pcstackBANK3:	
   493  0190                     my_isr_routine@buf:	
   494                           
   495                           ; 30 bytes @ 0x0
   496  0190                     	ds	30
   497  01AE                     my_isr_routine@val:	
   498                           
   499                           ; 4 bytes @ 0x1E
   500  01AE                     	ds	4
   501  01B2                     _my_isr_routine$923:	
   502                           
   503                           ; 4 bytes @ 0x22
   504  01B2                     	ds	4
   505  01B6                     ??_lcd_port:	
   506  01B6                     ??_init_timer:	
   507                           ; 1 bytes @ 0x26
   508                           
   509  01B6                     ??_adc_init:	
   510                           ; 1 bytes @ 0x26
   511                           
   512  01B6                     lcd_port@a:	
   513                           ; 1 bytes @ 0x26
   514                           
   515                           
   516                           ; 1 bytes @ 0x26
   517  01B6                     	ds	1
   518  01B7                     ??_lcd_cmd:	
   519  01B7                     ??_lcd_write_char:	
   520                           ; 1 bytes @ 0x27
   521                           
   522                           
   523                           ; 1 bytes @ 0x27
   524  01B7                     	ds	1
   525  01B8                     lcd_write_char@temp:	
   526                           
   527                           ; 1 bytes @ 0x28
   528  01B8                     	ds	1
   529  01B9                     lcd_cmd@a:	
   530  01B9                     lcd_write_char@y:	
   531                           ; 1 bytes @ 0x29
   532                           
   533                           
   534                           ; 1 bytes @ 0x29
   535  01B9                     	ds	1
   536  01BA                     ??_lcd_clear:	
   537  01BA                     ?_lcd_set_cursor:	
   538                           ; 1 bytes @ 0x2A
   539                           
   540  01BA                     ??_lcd_init:	
   541                           ; 1 bytes @ 0x2A
   542                           
   543  01BA                     lcd_set_cursor@b:	
   544                           ; 1 bytes @ 0x2A
   545                           
   546  01BA                     lcd_write_char@a:	
   547                           ; 1 bytes @ 0x2A
   548                           
   549                           
   550                           ; 1 bytes @ 0x2A
   551  01BA                     	ds	1
   552  01BB                     ??_lcd_set_cursor:	
   553  01BB                     ?_lcd_write_string:	
   554                           ; 1 bytes @ 0x2B
   555                           
   556  01BB                     lcd_write_string@a:	
   557                           ; 1 bytes @ 0x2B
   558                           
   559                           
   560                           ; 2 bytes @ 0x2B
   561  01BB                     	ds	2
   562  01BD                     ??_lcd_write_string:	
   563  01BD                     lcd_set_cursor@a:	
   564                           ; 1 bytes @ 0x2D
   565                           
   566                           
   567                           ; 1 bytes @ 0x2D
   568  01BD                     	ds	1
   569  01BE                     lcd_set_cursor@z:	
   570                           
   571                           ; 1 bytes @ 0x2E
   572  01BE                     	ds	1
   573  01BF                     lcd_set_cursor@y:	
   574                           
   575                           ; 1 bytes @ 0x2F
   576  01BF                     	ds	1
   577  01C0                     lcd_set_cursor@temp:	
   578  01C0                     lcd_write_string@i:	
   579                           ; 1 bytes @ 0x30
   580                           
   581                           
   582                           ; 2 bytes @ 0x30
   583  01C0                     	ds	2
   584  01C2                     ??_main:	
   585                           
   586                           	psect	cstackBANK1
   587  00A0                     __pcstackBANK1:	
   588                           ; 1 bytes @ 0x32
   589                           
   590  00A0                     ??___fldiv:	
   591  00A0                     ?_sprintf:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  00A0                     sprintf@f:	
   595                           ; 2 bytes @ 0x0
   596                           
   597                           
   598                           ; 1 bytes @ 0x0
   599  00A0                     	ds	5
   600  00A5                     ??_sprintf:	
   601  00A5                     ___fldiv@rem:	
   602                           ; 1 bytes @ 0x5
   603                           
   604                           
   605                           ; 4 bytes @ 0x5
   606  00A5                     	ds	4
   607  00A9                     ___fldiv@sign:	
   608                           
   609                           ; 1 bytes @ 0x9
   610  00A9                     	ds	1
   611  00AA                     ___fldiv@new_exp:	
   612  00AA                     _sprintf$927:	
   613                           ; 2 bytes @ 0xA
   614                           
   615                           
   616                           ; 4 bytes @ 0xA
   617  00AA                     	ds	2
   618  00AC                     ___fldiv@grs:	
   619                           
   620                           ; 4 bytes @ 0xC
   621  00AC                     	ds	2
   622  00AE                     sprintf@ap:	
   623                           
   624                           ; 1 bytes @ 0xE
   625  00AE                     	ds	1
   626  00AF                     sprintf@flag:	
   627                           
   628                           ; 2 bytes @ 0xF
   629  00AF                     	ds	1
   630  00B0                     ___fldiv@bexp:	
   631                           
   632                           ; 1 bytes @ 0x10
   633  00B0                     	ds	1
   634  00B1                     ___fldiv@aexp:	
   635  00B1                     sprintf@prec:	
   636                           ; 1 bytes @ 0x11
   637                           
   638                           
   639                           ; 2 bytes @ 0x11
   640  00B1                     	ds	2
   641  00B3                     sprintf@val:	
   642                           
   643                           ; 4 bytes @ 0x13
   644  00B3                     	ds	4
   645  00B7                     sprintf@eexp:	
   646                           
   647                           ; 2 bytes @ 0x17
   648  00B7                     	ds	2
   649  00B9                     sprintf@tmpval:	
   650                           
   651                           ; 4 bytes @ 0x19
   652  00B9                     	ds	4
   653  00BD                     sprintf@sp:	
   654                           
   655                           ; 1 bytes @ 0x1D
   656  00BD                     	ds	1
   657  00BE                     sprintf@fval:	
   658                           
   659                           ; 4 bytes @ 0x1E
   660  00BE                     	ds	4
   661  00C2                     sprintf@c:	
   662                           
   663                           ; 1 bytes @ 0x22
   664  00C2                     	ds	1
   665  00C3                     ??_my_isr_routine:	
   666                           
   667                           ; 1 bytes @ 0x23
   668  00C3                     	ds	12
   669                           
   670                           	psect	cstackCOMMON
   671  0070                     __pcstackCOMMON:	
   672  0070                     ?___fleq:	
   673  0070                     ?___flge:	
   674                           ; 1 bit 
   675                           
   676  0070                     ?_lcd_port:	
   677                           ; 1 bit 
   678                           
   679  0070                     ?_lcd_cmd:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_lcd_clear:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_lcd_init:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_lcd_write_char:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_my_isr_routine:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_init_timer:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_adc_init:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?i1_lcd_port:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ??i1_lcd_port:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?i1_lcd_cmd:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?i1_lcd_clear:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?i1_lcd_write_char:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?__Umul8_16:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_main:	
   719                           ; 2 bytes @ 0x0
   720                           
   721  0070                     ?___wmul:	
   722                           ; 2 bytes @ 0x0
   723                           
   724  0070                     ?___awmod:	
   725                           ; 2 bytes @ 0x0
   726                           
   727  0070                     ?___lwmod:	
   728                           ; 2 bytes @ 0x0
   729                           
   730  0070                     ?__tdiv_to_l_:	
   731                           ; 2 bytes @ 0x0
   732                           
   733  0070                     ?__div_to_l_:	
   734                           ; 4 bytes @ 0x0
   735                           
   736  0070                     ?___lldiv:	
   737                           ; 4 bytes @ 0x0
   738                           
   739  0070                     ?___flneg:	
   740                           ; 4 bytes @ 0x0
   741                           
   742  0070                     ?___llmod:	
   743                           ; 4 bytes @ 0x0
   744                           
   745  0070                     ?___xxtofl:	
   746                           ; 4 bytes @ 0x0
   747                           
   748  0070                     __Umul8_16@multiplicand:	
   749                           ; 4 bytes @ 0x0
   750                           
   751  0070                     i1lcd_port@a:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ___wmul@multiplier:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ___awmod@divisor:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0070                     ___lwmod@divisor:	
   761                           ; 2 bytes @ 0x0
   762                           
   763  0070                     ___lldiv@divisor:	
   764                           ; 2 bytes @ 0x0
   765                           
   766  0070                     __div_to_l_@f1:	
   767                           ; 4 bytes @ 0x0
   768                           
   769  0070                     ___fleq@ff1:	
   770                           ; 4 bytes @ 0x0
   771                           
   772  0070                     ___flge@ff1:	
   773                           ; 4 bytes @ 0x0
   774                           
   775  0070                     ___flneg@f1:	
   776                           ; 4 bytes @ 0x0
   777                           
   778  0070                     __tdiv_to_l_@f1:	
   779                           ; 4 bytes @ 0x0
   780                           
   781  0070                     ___llmod@divisor:	
   782                           ; 4 bytes @ 0x0
   783                           
   784  0070                     ___xxtofl@val:	
   785                           ; 4 bytes @ 0x0
   786                           
   787                           
   788                           ; 4 bytes @ 0x0
   789  0070                     	ds	1
   790  0071                     ??i1_lcd_cmd:	
   791  0071                     ??i1_lcd_write_char:	
   792                           ; 1 bytes @ 0x1
   793                           
   794                           
   795                           ; 1 bytes @ 0x1
   796  0071                     	ds	1
   797  0072                     ??__Umul8_16:	
   798  0072                     i1lcd_write_char@temp:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0072                     ___wmul@multiplicand:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0072                     ___awmod@dividend:	
   805                           ; 2 bytes @ 0x2
   806                           
   807  0072                     ___lwmod@dividend:	
   808                           ; 2 bytes @ 0x2
   809                           
   810                           
   811                           ; 2 bytes @ 0x2
   812  0072                     	ds	1
   813  0073                     i1lcd_cmd@a:	
   814  0073                     i1lcd_write_char@y:	
   815                           ; 1 bytes @ 0x3
   816                           
   817                           
   818                           ; 1 bytes @ 0x3
   819  0073                     	ds	1
   820  0074                     ??___wmul:	
   821  0074                     ??___awmod:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0074                     ??___flneg:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0074                     ??___lwmod:	
   828                           ; 1 bytes @ 0x4
   829                           
   830  0074                     ??___xxtofl:	
   831                           ; 1 bytes @ 0x4
   832                           
   833  0074                     ??i1_lcd_clear:	
   834                           ; 1 bytes @ 0x4
   835                           
   836  0074                     ?i1_lcd_set_cursor:	
   837                           ; 1 bytes @ 0x4
   838                           
   839  0074                     i1lcd_set_cursor@b:	
   840                           ; 1 bytes @ 0x4
   841                           
   842  0074                     i1lcd_write_char@a:	
   843                           ; 1 bytes @ 0x4
   844                           
   845  0074                     ___wmul@product:	
   846                           ; 1 bytes @ 0x4
   847                           
   848  0074                     __Umul8_16@product:	
   849                           ; 2 bytes @ 0x4
   850                           
   851  0074                     ___lldiv@dividend:	
   852                           ; 2 bytes @ 0x4
   853                           
   854  0074                     __div_to_l_@f2:	
   855                           ; 4 bytes @ 0x4
   856                           
   857  0074                     ___fleq@ff2:	
   858                           ; 4 bytes @ 0x4
   859                           
   860  0074                     ___flge@ff2:	
   861                           ; 4 bytes @ 0x4
   862                           
   863  0074                     __tdiv_to_l_@f2:	
   864                           ; 4 bytes @ 0x4
   865                           
   866  0074                     ___llmod@dividend:	
   867                           ; 4 bytes @ 0x4
   868                           
   869                           
   870                           ; 4 bytes @ 0x4
   871  0074                     	ds	1
   872  0075                     ??i1_lcd_set_cursor:	
   873  0075                     ?i1_lcd_write_string:	
   874                           ; 1 bytes @ 0x5
   875                           
   876  0075                     ___awmod@counter:	
   877                           ; 1 bytes @ 0x5
   878                           
   879  0075                     ___lwmod@counter:	
   880                           ; 1 bytes @ 0x5
   881                           
   882  0075                     i1lcd_write_string@a:	
   883                           ; 1 bytes @ 0x5
   884                           
   885                           
   886                           ; 2 bytes @ 0x5
   887  0075                     	ds	1
   888  0076                     ?___lwdiv:	
   889  0076                     ___awmod@sign:	
   890                           ; 2 bytes @ 0x6
   891                           
   892  0076                     ___lwdiv@divisor:	
   893                           ; 1 bytes @ 0x6
   894                           
   895  0076                     __Umul8_16@word_mpld:	
   896                           ; 2 bytes @ 0x6
   897                           
   898                           
   899                           ; 2 bytes @ 0x6
   900  0076                     	ds	1
   901  0077                     ??i1_lcd_write_string:	
   902  0077                     ?___awdiv:	
   903                           ; 1 bytes @ 0x7
   904                           
   905  0077                     i1lcd_set_cursor@a:	
   906                           ; 2 bytes @ 0x7
   907                           
   908  0077                     ___awdiv@divisor:	
   909                           ; 1 bytes @ 0x7
   910                           
   911                           
   912                           ; 2 bytes @ 0x7
   913  0077                     	ds	1
   914  0078                     ??__tdiv_to_l_:	
   915  0078                     ??__div_to_l_:	
   916                           ; 1 bytes @ 0x8
   917                           
   918  0078                     ??___lldiv:	
   919                           ; 1 bytes @ 0x8
   920                           
   921  0078                     ??___fleq:	
   922                           ; 1 bytes @ 0x8
   923                           
   924  0078                     ??___flge:	
   925                           ; 1 bytes @ 0x8
   926                           
   927  0078                     ??___llmod:	
   928                           ; 1 bytes @ 0x8
   929                           
   930  0078                     ___xxtofl@sign:	
   931                           ; 1 bytes @ 0x8
   932                           
   933  0078                     __Umul8_16@multiplier:	
   934                           ; 1 bytes @ 0x8
   935                           
   936  0078                     i1lcd_set_cursor@z:	
   937                           ; 1 bytes @ 0x8
   938                           
   939  0078                     ___lwdiv@dividend:	
   940                           ; 1 bytes @ 0x8
   941                           
   942                           
   943                           ; 2 bytes @ 0x8
   944  0078                     	ds	1
   945  0079                     ___llmod@counter:	
   946  0079                     ___xxtofl@exp:	
   947                           ; 1 bytes @ 0x9
   948                           
   949  0079                     i1lcd_set_cursor@y:	
   950                           ; 1 bytes @ 0x9
   951                           
   952  0079                     ___awdiv@dividend:	
   953                           ; 1 bytes @ 0x9
   954                           
   955  0079                     ___lldiv@quotient:	
   956                           ; 2 bytes @ 0x9
   957                           
   958                           
   959                           ; 4 bytes @ 0x9
   960  0079                     	ds	1
   961  007A                     ??___lwdiv:	
   962  007A                     i1lcd_set_cursor@temp:	
   963                           ; 1 bytes @ 0xA
   964                           
   965  007A                     i1lcd_write_string@i:	
   966                           ; 1 bytes @ 0xA
   967                           
   968  007A                     ___xxtofl@arg:	
   969                           ; 2 bytes @ 0xA
   970                           
   971                           
   972                           ; 4 bytes @ 0xA
   973  007A                     	ds	1
   974  007B                     ??___awdiv:	
   975  007B                     ___lwdiv@quotient:	
   976                           ; 1 bytes @ 0xB
   977                           
   978                           
   979                           ; 2 bytes @ 0xB
   980  007B                     	ds	2
   981  007D                     ___lldiv@counter:	
   982  007D                     ___lwdiv@counter:	
   983                           ; 1 bytes @ 0xD
   984                           
   985                           
   986                           ; 1 bytes @ 0xD
   987  007D                     	ds	1
   988  007E                     ??___flsub:	
   989                           
   990                           	psect	cstackBANK0
   991  0020                     __pcstackBANK0:	
   992                           ; 1 bytes @ 0xE
   993                           
   994  0020                     ___awdiv@counter:	
   995  0020                     __div_to_l_@quot:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0020                     __tdiv_to_l_@quot:	
   999                           ; 4 bytes @ 0x0
  1000                           
  1001                           
  1002                           ; 4 bytes @ 0x0
  1003  0020                     	ds	1
  1004  0021                     ___awdiv@sign:	
  1005                           
  1006                           ; 1 bytes @ 0x1
  1007  0021                     	ds	1
  1008  0022                     ___awdiv@quotient:	
  1009                           
  1010                           ; 2 bytes @ 0x2
  1011  0022                     	ds	2
  1012  0024                     ?___flmul:	
  1013  0024                     __div_to_l_@cntr:	
  1014                           ; 4 bytes @ 0x4
  1015                           
  1016  0024                     __tdiv_to_l_@cntr:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019  0024                     ___flmul@b:	
  1020                           ; 1 bytes @ 0x4
  1021                           
  1022                           
  1023                           ; 4 bytes @ 0x4
  1024  0024                     	ds	1
  1025  0025                     __div_to_l_@exp1:	
  1026  0025                     __tdiv_to_l_@exp1:	
  1027                           ; 1 bytes @ 0x5
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x5
  1031  0025                     	ds	3
  1032  0028                     ___flmul@a:	
  1033                           
  1034                           ; 4 bytes @ 0x8
  1035  0028                     	ds	4
  1036  002C                     ??___flmul:	
  1037                           
  1038                           ; 1 bytes @ 0xC
  1039  002C                     	ds	5
  1040  0031                     ___flmul@sign:	
  1041                           
  1042                           ; 1 bytes @ 0x11
  1043  0031                     	ds	1
  1044  0032                     ___flmul@grs:	
  1045                           
  1046                           ; 4 bytes @ 0x12
  1047  0032                     	ds	4
  1048  0036                     ___flmul@aexp:	
  1049                           
  1050                           ; 1 bytes @ 0x16
  1051  0036                     	ds	1
  1052  0037                     ___flmul@bexp:	
  1053                           
  1054                           ; 1 bytes @ 0x17
  1055  0037                     	ds	1
  1056  0038                     ___flmul@prod:	
  1057                           
  1058                           ; 4 bytes @ 0x18
  1059  0038                     	ds	4
  1060  003C                     ___flmul@temp:	
  1061                           
  1062                           ; 2 bytes @ 0x1C
  1063  003C                     	ds	2
  1064  003E                     ?_fround:	
  1065  003E                     ?_scale:	
  1066                           ; 4 bytes @ 0x1E
  1067                           
  1068                           
  1069                           ; 4 bytes @ 0x1E
  1070  003E                     	ds	4
  1071  0042                     ??_fround:	
  1072  0042                     ??_scale:	
  1073                           ; 1 bytes @ 0x22
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x22
  1077  0042                     	ds	7
  1078  0049                     _fround$925:	
  1079                           
  1080                           ; 4 bytes @ 0x29
  1081  0049                     	ds	3
  1082  004C                     _scale$926:	
  1083                           
  1084                           ; 4 bytes @ 0x2C
  1085  004C                     	ds	1
  1086  004D                     _fround$924:	
  1087                           
  1088                           ; 4 bytes @ 0x2D
  1089  004D                     	ds	3
  1090  0050                     scale@scl:	
  1091                           
  1092                           ; 1 bytes @ 0x30
  1093  0050                     	ds	1
  1094  0051                     ?___fltol:	
  1095  0051                     fround@prec:	
  1096                           ; 4 bytes @ 0x31
  1097                           
  1098  0051                     ___fltol@f1:	
  1099                           ; 1 bytes @ 0x31
  1100                           
  1101                           
  1102                           ; 4 bytes @ 0x31
  1103  0051                     	ds	1
  1104  0052                     ?___fladd:	
  1105  0052                     ___fladd@b:	
  1106                           ; 4 bytes @ 0x32
  1107                           
  1108                           
  1109                           ; 4 bytes @ 0x32
  1110  0052                     	ds	3
  1111  0055                     ??___fltol:	
  1112                           
  1113                           ; 1 bytes @ 0x35
  1114  0055                     	ds	1
  1115  0056                     ___fladd@a:	
  1116                           
  1117                           ; 4 bytes @ 0x36
  1118  0056                     	ds	4
  1119  005A                     ??___fladd:	
  1120  005A                     ___fltol@sign1:	
  1121                           ; 1 bytes @ 0x3A
  1122                           
  1123                           
  1124                           ; 1 bytes @ 0x3A
  1125  005A                     	ds	1
  1126  005B                     ___fltol@exp1:	
  1127                           
  1128                           ; 1 bytes @ 0x3B
  1129  005B                     	ds	7
  1130  0062                     ___fladd@signs:	
  1131                           
  1132                           ; 1 bytes @ 0x42
  1133  0062                     	ds	1
  1134  0063                     ___fladd@aexp:	
  1135                           
  1136                           ; 1 bytes @ 0x43
  1137  0063                     	ds	1
  1138  0064                     ___fladd@bexp:	
  1139                           
  1140                           ; 1 bytes @ 0x44
  1141  0064                     	ds	1
  1142  0065                     ___fladd@grs:	
  1143                           
  1144                           ; 1 bytes @ 0x45
  1145  0065                     	ds	1
  1146  0066                     ?___flsub:	
  1147  0066                     ?___fldiv:	
  1148                           ; 4 bytes @ 0x46
  1149                           
  1150  0066                     ___flsub@a:	
  1151                           ; 4 bytes @ 0x46
  1152                           
  1153  0066                     ___fldiv@a:	
  1154                           ; 4 bytes @ 0x46
  1155                           
  1156                           
  1157                           ; 4 bytes @ 0x46
  1158  0066                     	ds	4
  1159  006A                     ___flsub@b:	
  1160  006A                     ___fldiv@b:	
  1161                           ; 4 bytes @ 0x4A
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0x4A
  1165  006A                     	ds	4
  1166                           
  1167                           	psect	maintext
  1168  1BF3                     __pmaintext:	
  1169 ;;
  1170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1171 ;;
  1172 ;; *************** function _main *****************
  1173 ;; Defined at:
  1174 ;;		line 98 in file "lcd.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  a               1    0        unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  2  122[None  ] int 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : B00/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1188 ;;      Params:         0       0       0       0       0
  1189 ;;      Locals:         0       0       0       1       0
  1190 ;;      Temps:          0       0       0       0       0
  1191 ;;      Totals:         0       0       0       1       0
  1192 ;;Total ram usage:        1 bytes
  1193 ;; Hardware stack levels required when called:    8
  1194 ;; This function calls:
  1195 ;;		_adc_init
  1196 ;;		_init_timer
  1197 ;;		_lcd_clear
  1198 ;;		_lcd_init
  1199 ;;		_lcd_set_cursor
  1200 ;;		_lcd_write_string
  1201 ;; This function is called by:
  1202 ;;		Startup code after reset
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function _main
  1208  1BF3                     _main:	
  1209                           
  1210                           ;lcd.c: 100:     TRISD=0x00;
  1211                           
  1212                           ;incstack = 0
  1213                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1214  1BF3  1683               	bsf	3,5	;RP0=1, select bank1
  1215  1BF4  1303               	bcf	3,6	;RP1=0, select bank1
  1216  1BF5  0188               	clrf	8	;volatile
  1217                           
  1218                           ;lcd.c: 101:     PORTD=0x00;
  1219  1BF6  1283               	bcf	3,5	;RP0=0, select bank0
  1220  1BF7  1303               	bcf	3,6	;RP1=0, select bank0
  1221  1BF8  0188               	clrf	8	;volatile
  1222                           
  1223                           ;lcd.c: 102:     TRISB=0x00;
  1224  1BF9  1683               	bsf	3,5	;RP0=1, select bank1
  1225  1BFA  1303               	bcf	3,6	;RP1=0, select bank1
  1226  1BFB  0186               	clrf	6	;volatile
  1227                           
  1228                           ;lcd.c: 103:     PORTB=0x00;
  1229  1BFC  1283               	bcf	3,5	;RP0=0, select bank0
  1230  1BFD  1303               	bcf	3,6	;RP1=0, select bank0
  1231  1BFE  0186               	clrf	6	;volatile
  1232                           
  1233                           ;lcd.c: 105:     lcd_init();
  1234  1BFF  160A  158A  279F  160A  158A  	fcall	_lcd_init
  1235                           
  1236                           ;lcd.c: 106:     init_timer();
  1237  1C04  120A  118A  27F1  160A  158A  	fcall	_init_timer
  1238                           
  1239                           ;lcd.c: 107:     adc_init();
  1240  1C09  160A  158A  22CE  160A  158A  	fcall	_adc_init
  1241                           
  1242                           ;lcd.c: 110:     lcd_clear();
  1243  1C0E  160A  118A  20CF  160A  158A  	fcall	_lcd_clear
  1244                           
  1245                           ;lcd.c: 111:     lcd_set_cursor(1,1);
  1246  1C13  1683               	bsf	3,5	;RP0=1, select bank3
  1247  1C14  1703               	bsf	3,6	;RP1=1, select bank3
  1248  1C15  01BA               	clrf	lcd_set_cursor@b^(0+384)
  1249  1C16  0ABA               	incf	lcd_set_cursor@b^(0+384),f
  1250  1C17  3001               	movlw	1
  1251  1C18  160A  158A  2696  160A  158A  	fcall	_lcd_set_cursor
  1252                           
  1253                           ;lcd.c: 113:     lcd_write_string("Welcome motherfuckers");
  1254  1C1D  3091               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1255  1C1E  1683               	bsf	3,5	;RP0=1, select bank3
  1256  1C1F  1703               	bsf	3,6	;RP1=1, select bank3
  1257  1C20  00BB               	movwf	lcd_write_string@a^(0+384)
  1258  1C21  3080               	movlw	128
  1259  1C22  00BC               	movwf	(lcd_write_string@a+1)^(0+384)
  1260  1C23  160A  158A  2647  160A  158A  	fcall	_lcd_write_string
  1261  1C28                     l123:	
  1262                           ;lcd.c: 115:     while(1){
  1263                           
  1264                           
  1265                           ;lcd.c: 117:     }
  1266  1C28  2C28               	goto	l123
  1267  1C29                     __end_of_main:	
  1268                           
  1269                           	psect	text1
  1270  1E47                     __ptext1:	
  1271 ;; *************** function _lcd_write_string *****************
  1272 ;; Defined at:
  1273 ;;		line 95 in file "./lcd.h"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  a               2   43[BANK3 ] PTR unsigned char 
  1276 ;;		 -> STR_3(22), my_isr_routine@buf(30), STR_1(11), 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  i               2   48[BANK3 ] int 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1288 ;;      Params:         0       0       0       2       0
  1289 ;;      Locals:         0       0       0       2       0
  1290 ;;      Temps:          0       0       0       3       0
  1291 ;;      Totals:         0       0       0       7       0
  1292 ;;Total ram usage:        7 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    7
  1295 ;; This function calls:
  1296 ;;		_lcd_write_char
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _lcd_write_string
  1304  1E47                     _lcd_write_string:	
  1305                           
  1306                           ;./lcd.h: 95: }void lcd_write_string(char *a);./lcd.h: 96: {;./lcd.h: 97:     int i;;./l
      +                          cd.h: 98:     for(i=0;a[i]!='\0';i++)
  1307                           
  1308                           ;incstack = 0
  1309 ;; using string table level
  1310                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1311  1E47  1683               	bsf	3,5	;RP0=1, select bank3
  1312  1E48  1703               	bsf	3,6	;RP1=1, select bank3
  1313  1E49  01C0               	clrf	lcd_write_string@i^(0+384)
  1314  1E4A  01C1               	clrf	(lcd_write_string@i+1)^(0+384)
  1315  1E4B                     l3199:	
  1316  1E4B  0840               	movf	lcd_write_string@i^(0+384),w
  1317  1E4C  073B               	addwf	lcd_write_string@a^(0+384),w
  1318  1E4D  00BE               	movwf	(??_lcd_write_string+1)^(0+384)
  1319  1E4E  083C               	movf	(lcd_write_string@a+1)^(0+384),w
  1320  1E4F  00BD               	movwf	??_lcd_write_string^(0+384)
  1321  1E50  1803               	skipnc
  1322  1E51  0ABD               	incf	??_lcd_write_string^(0+384),f
  1323  1E52  1BC0               	btfsc	lcd_write_string@i^(0+384),7
  1324  1E53  03BD               	decf	??_lcd_write_string^(0+384),f
  1325  1E54  1683               	bsf	3,5	;RP0=1, select bank3
  1326  1E55  1703               	bsf	3,6	;RP1=1, select bank3
  1327  1E56  083D               	movf	??_lcd_write_string^(0+384),w
  1328  1E57  00BF               	movwf	((??_lcd_write_string+1)^(0+384)+1)
  1329  1E58  083F               	movf	(??_lcd_write_string+2)^(0+384),w
  1330  1E59  1283               	bcf	3,5	;RP0=0, select bank0
  1331  1E5A  1303               	bcf	3,6	;RP1=0, select bank0
  1332  1E5B  00FF               	movwf	127
  1333  1E5C  1683               	bsf	3,5	;RP0=1, select bank3
  1334  1E5D  1703               	bsf	3,6	;RP1=1, select bank3
  1335  1E5E  083E               	movf	(??_lcd_write_string+1)^(0+384),w
  1336  1E5F  0084               	movwf	4
  1337  1E60  1283               	bcf	3,5	;RP0=0, select bank0
  1338  1E61  1303               	bcf	3,6	;RP1=0, select bank0
  1339  1E62  160A  118A  2000  160A  158A  	fcall	stringtab
  1340  1E67  3A00               	xorlw	0
  1341  1E68  1903               	btfsc	3,2
  1342  1E69  0008               	return
  1343                           
  1344                           ;./lcd.h: 99:         lcd_write_char(a[i]);
  1345  1E6A  1683               	bsf	3,5	;RP0=1, select bank3
  1346  1E6B  1703               	bsf	3,6	;RP1=1, select bank3
  1347  1E6C  0840               	movf	lcd_write_string@i^(0+384),w
  1348  1E6D  073B               	addwf	lcd_write_string@a^(0+384),w
  1349  1E6E  00BE               	movwf	(??_lcd_write_string+1)^(0+384)
  1350  1E6F  083C               	movf	(lcd_write_string@a+1)^(0+384),w
  1351  1E70  00BD               	movwf	??_lcd_write_string^(0+384)
  1352  1E71  1803               	skipnc
  1353  1E72  0ABD               	incf	??_lcd_write_string^(0+384),f
  1354  1E73  1BC0               	btfsc	lcd_write_string@i^(0+384),7
  1355  1E74  03BD               	decf	??_lcd_write_string^(0+384),f
  1356  1E75  1683               	bsf	3,5	;RP0=1, select bank3
  1357  1E76  1703               	bsf	3,6	;RP1=1, select bank3
  1358  1E77  083D               	movf	??_lcd_write_string^(0+384),w
  1359  1E78  00BF               	movwf	((??_lcd_write_string+1)^(0+384)+1)
  1360  1E79  083F               	movf	(??_lcd_write_string+2)^(0+384),w
  1361  1E7A  1283               	bcf	3,5	;RP0=0, select bank0
  1362  1E7B  1303               	bcf	3,6	;RP1=0, select bank0
  1363  1E7C  00FF               	movwf	127
  1364  1E7D  1683               	bsf	3,5	;RP0=1, select bank3
  1365  1E7E  1703               	bsf	3,6	;RP1=1, select bank3
  1366  1E7F  083E               	movf	(??_lcd_write_string+1)^(0+384),w
  1367  1E80  0084               	movwf	4
  1368  1E81  1283               	bcf	3,5	;RP0=0, select bank0
  1369  1E82  1303               	bcf	3,6	;RP1=0, select bank0
  1370  1E83  160A  118A  2000  160A  158A  	fcall	stringtab
  1371  1E88  160A  158A  24DB  160A  158A  	fcall	_lcd_write_char
  1372  1E8D  3001               	movlw	1
  1373  1E8E  1683               	bsf	3,5	;RP0=1, select bank3
  1374  1E8F  1703               	bsf	3,6	;RP1=1, select bank3
  1375  1E90  07C0               	addwf	lcd_write_string@i^(0+384),f
  1376  1E91  1803               	skipnc
  1377  1E92  0AC1               	incf	(lcd_write_string@i+1)^(0+384),f
  1378  1E93  3000               	movlw	0
  1379  1E94  07C1               	addwf	(lcd_write_string@i+1)^(0+384),f
  1380  1E95  2E4B               	goto	l3199
  1381  1E96                     __end_of_lcd_write_string:	
  1382                           
  1383                           	psect	text2
  1384  1CDB                     __ptext2:	
  1385 ;; *************** function _lcd_write_char *****************
  1386 ;; Defined at:
  1387 ;;		line 81 in file "./lcd.h"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  a               1    wreg     unsigned char 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  a               1   42[BANK3 ] unsigned char 
  1392 ;;  y               1   41[BANK3 ] unsigned char 
  1393 ;;  temp            1   40[BANK3 ] unsigned char 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0, pclath, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         0       0       0       0       0
  1404 ;;      Locals:         0       0       0       3       0
  1405 ;;      Temps:          0       0       0       1       0
  1406 ;;      Totals:         0       0       0       4       0
  1407 ;;Total ram usage:        4 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    6
  1410 ;; This function calls:
  1411 ;;		_lcd_port
  1412 ;; This function is called by:
  1413 ;;		_lcd_write_string
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _lcd_write_char
  1419  1CDB                     _lcd_write_char:	
  1420                           
  1421                           ;incstack = 0
  1422                           ; Regs used in _lcd_write_char: [wreg+status,2+status,0+pclath+cstack]
  1423                           ;lcd_write_char@a stored from wreg
  1424  1CDB  1683               	bsf	3,5	;RP0=1, select bank3
  1425  1CDC  1703               	bsf	3,6	;RP1=1, select bank3
  1426  1CDD  00BA               	movwf	lcd_write_char@a^(0+384)
  1427                           
  1428                           ;./lcd.h: 82:     char temp,y;;./lcd.h: 83:     temp=a&0x0F;
  1429  1CDE  083A               	movf	lcd_write_char@a^(0+384),w
  1430  1CDF  390F               	andlw	15
  1431  1CE0  00B7               	movwf	??_lcd_write_char^(0+384)
  1432  1CE1  0837               	movf	??_lcd_write_char^(0+384),w
  1433  1CE2  00B8               	movwf	lcd_write_char@temp^(0+384)
  1434                           
  1435                           ;./lcd.h: 84:     y=a&0xF0;
  1436  1CE3  083A               	movf	lcd_write_char@a^(0+384),w
  1437  1CE4  39F0               	andlw	240
  1438  1CE5  00B7               	movwf	??_lcd_write_char^(0+384)
  1439  1CE6  0837               	movf	??_lcd_write_char^(0+384),w
  1440  1CE7  00B9               	movwf	lcd_write_char@y^(0+384)
  1441                           
  1442                           ;./lcd.h: 85:     RD2=1;
  1443  1CE8  1283               	bcf	3,5	;RP0=0, select bank0
  1444  1CE9  1303               	bcf	3,6	;RP1=0, select bank0
  1445  1CEA  1508               	bsf	8,2	;volatile
  1446                           
  1447                           ;./lcd.h: 86:     lcd_port(y>>4);
  1448  1CEB  1683               	bsf	3,5	;RP0=1, select bank3
  1449  1CEC  1703               	bsf	3,6	;RP1=1, select bank3
  1450  1CED  0839               	movf	lcd_write_char@y^(0+384),w
  1451  1CEE  00B7               	movwf	??_lcd_write_char^(0+384)
  1452  1CEF  3004               	movlw	4
  1453  1CF0                     u4335:	
  1454  1CF0  1003               	clrc
  1455  1CF1  0CB7               	rrf	??_lcd_write_char^(0+384),f
  1456  1CF2  3EFF               	addlw	-1
  1457  1CF3  1D03               	skipz
  1458  1CF4  2CF0               	goto	u4335
  1459  1CF5  0837               	movf	??_lcd_write_char^(0+384),w
  1460  1CF6  160A  158A  2393  160A  158A  	fcall	_lcd_port
  1461                           
  1462                           ;./lcd.h: 87:     RD3=1;
  1463  1CFB  1283               	bcf	3,5	;RP0=0, select bank0
  1464  1CFC  1303               	bcf	3,6	;RP1=0, select bank0
  1465  1CFD  1588               	bsf	8,3	;volatile
  1466                           
  1467                           ;./lcd.h: 88:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  1468  1CFE  3041               	movlw	65
  1469  1CFF  1683               	bsf	3,5	;RP0=1, select bank3
  1470  1D00  1703               	bsf	3,6	;RP1=1, select bank3
  1471  1D01  00B7               	movwf	??_lcd_write_char^(0+384)
  1472  1D02                     u6137:	
  1473  1D02  0BB7               	decfsz	??_lcd_write_char^(0+384),f
  1474  1D03  2D02               	goto	u6137
  1475  1D04  2D05               	nop2
  1476                           
  1477                           ;./lcd.h: 89:     RD3=0;
  1478  1D05  1283               	bcf	3,5	;RP0=0, select bank0
  1479  1D06  1303               	bcf	3,6	;RP1=0, select bank0
  1480  1D07  1188               	bcf	8,3	;volatile
  1481                           
  1482                           ;./lcd.h: 90:     lcd_port(temp);
  1483  1D08  1683               	bsf	3,5	;RP0=1, select bank3
  1484  1D09  1703               	bsf	3,6	;RP1=1, select bank3
  1485  1D0A  0838               	movf	lcd_write_char@temp^(0+384),w
  1486  1D0B  160A  158A  2393  160A  158A  	fcall	_lcd_port
  1487                           
  1488                           ;./lcd.h: 91:     RD3=1;
  1489  1D10  1283               	bcf	3,5	;RP0=0, select bank0
  1490  1D11  1303               	bcf	3,6	;RP1=0, select bank0
  1491  1D12  1588               	bsf	8,3	;volatile
  1492                           
  1493                           ;./lcd.h: 92:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  1494  1D13  3041               	movlw	65
  1495  1D14  1683               	bsf	3,5	;RP0=1, select bank3
  1496  1D15  1703               	bsf	3,6	;RP1=1, select bank3
  1497  1D16  00B7               	movwf	??_lcd_write_char^(0+384)
  1498  1D17                     u6147:	
  1499  1D17  0BB7               	decfsz	??_lcd_write_char^(0+384),f
  1500  1D18  2D17               	goto	u6147
  1501  1D19  2D1A               	nop2
  1502                           
  1503                           ;./lcd.h: 93:     RD3=0;
  1504  1D1A  1283               	bcf	3,5	;RP0=0, select bank0
  1505  1D1B  1303               	bcf	3,6	;RP1=0, select bank0
  1506  1D1C  1188               	bcf	8,3	;volatile
  1507  1D1D  0008               	return
  1508  1D1E                     __end_of_lcd_write_char:	
  1509                           
  1510                           	psect	text3
  1511  1E96                     __ptext3:	
  1512 ;; *************** function _lcd_set_cursor *****************
  1513 ;; Defined at:
  1514 ;;		line 40 in file "./lcd.h"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  a               1    wreg     unsigned char 
  1517 ;;  b               1   42[BANK3 ] unsigned char 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  a               1   45[BANK3 ] unsigned char 
  1520 ;;  temp            1   48[BANK3 ] unsigned char 
  1521 ;;  y               1   47[BANK3 ] unsigned char 
  1522 ;;  z               1   46[BANK3 ] unsigned char 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0, pclath, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1532 ;;      Params:         0       0       0       1       0
  1533 ;;      Locals:         0       0       0       4       0
  1534 ;;      Temps:          0       0       0       2       0
  1535 ;;      Totals:         0       0       0       7       0
  1536 ;;Total ram usage:        7 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    7
  1539 ;; This function calls:
  1540 ;;		_lcd_cmd
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function _lcd_set_cursor
  1548  1E96                     _lcd_set_cursor:	
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1552                           ;lcd_set_cursor@a stored from wreg
  1553  1E96  1683               	bsf	3,5	;RP0=1, select bank3
  1554  1E97  1703               	bsf	3,6	;RP1=1, select bank3
  1555  1E98  00BD               	movwf	lcd_set_cursor@a^(0+384)
  1556                           
  1557                           ;./lcd.h: 40: void lcd_set_cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:     char t
      +                          emp,z,y;;./lcd.h: 43:     if(a==1)
  1558  1E99  033D               	decf	lcd_set_cursor@a^(0+384),w
  1559  1E9A  1D03               	btfss	3,2
  1560  1E9B  2EBF               	goto	l3173
  1561                           
  1562                           ;./lcd.h: 44:     {;./lcd.h: 45:         temp=0x80+b-1;
  1563  1E9C  083A               	movf	lcd_set_cursor@b^(0+384),w
  1564  1E9D  3E7F               	addlw	127
  1565  1E9E  00BB               	movwf	??_lcd_set_cursor^(0+384)
  1566  1E9F  083B               	movf	??_lcd_set_cursor^(0+384),w
  1567  1EA0  00C0               	movwf	lcd_set_cursor@temp^(0+384)
  1568                           
  1569                           ;./lcd.h: 46:         z=temp>>4;
  1570  1EA1  0840               	movf	lcd_set_cursor@temp^(0+384),w
  1571  1EA2  00BB               	movwf	??_lcd_set_cursor^(0+384)
  1572  1EA3  3004               	movlw	4
  1573  1EA4                     u5395:	
  1574  1EA4  1003               	clrc
  1575  1EA5  0CBB               	rrf	??_lcd_set_cursor^(0+384),f
  1576  1EA6  3EFF               	addlw	-1
  1577  1EA7  1D03               	skipz
  1578  1EA8  2EA4               	goto	u5395
  1579  1EA9  083B               	movf	??_lcd_set_cursor^(0+384),w
  1580  1EAA  00BC               	movwf	(??_lcd_set_cursor+1)^(0+384)
  1581  1EAB  083C               	movf	(??_lcd_set_cursor+1)^(0+384),w
  1582  1EAC  00BE               	movwf	lcd_set_cursor@z^(0+384)
  1583                           
  1584                           ;./lcd.h: 47:         y=temp & 0x0F;
  1585  1EAD  0840               	movf	lcd_set_cursor@temp^(0+384),w
  1586  1EAE  390F               	andlw	15
  1587  1EAF  00BB               	movwf	??_lcd_set_cursor^(0+384)
  1588  1EB0  083B               	movf	??_lcd_set_cursor^(0+384),w
  1589  1EB1  00BF               	movwf	lcd_set_cursor@y^(0+384)
  1590                           
  1591                           ;./lcd.h: 48:         lcd_cmd(z);
  1592  1EB2  083E               	movf	lcd_set_cursor@z^(0+384),w
  1593  1EB3  160A  158A  230D  160A  158A  	fcall	_lcd_cmd
  1594                           
  1595                           ;./lcd.h: 49:         lcd_cmd(y);
  1596  1EB8  1683               	bsf	3,5	;RP0=1, select bank3
  1597  1EB9  1703               	bsf	3,6	;RP1=1, select bank3
  1598  1EBA  083F               	movf	lcd_set_cursor@y^(0+384),w
  1599  1EBB  160A  158A  230D   	fcall	_lcd_cmd
  1600                           
  1601                           ;./lcd.h: 50:     }
  1602  1EBE  0008               	return
  1603  1EBF                     l3173:	
  1604  1EBF  3002               	movlw	2
  1605  1EC0  063D               	xorwf	lcd_set_cursor@a^(0+384),w
  1606  1EC1  1D03               	btfss	3,2
  1607  1EC2  0008               	return
  1608                           
  1609                           ;./lcd.h: 53:     {;./lcd.h: 54:          temp=0xC0+b-1;
  1610  1EC3  083A               	movf	lcd_set_cursor@b^(0+384),w
  1611  1EC4  3EBF               	addlw	191
  1612  1EC5  00BB               	movwf	??_lcd_set_cursor^(0+384)
  1613  1EC6  083B               	movf	??_lcd_set_cursor^(0+384),w
  1614  1EC7  00C0               	movwf	lcd_set_cursor@temp^(0+384)
  1615                           
  1616                           ;./lcd.h: 55:         z=temp>>4;
  1617  1EC8  0840               	movf	lcd_set_cursor@temp^(0+384),w
  1618  1EC9  00BB               	movwf	??_lcd_set_cursor^(0+384)
  1619  1ECA  3004               	movlw	4
  1620  1ECB                     u5415:	
  1621  1ECB  1003               	clrc
  1622  1ECC  0CBB               	rrf	??_lcd_set_cursor^(0+384),f
  1623  1ECD  3EFF               	addlw	-1
  1624  1ECE  1D03               	skipz
  1625  1ECF  2ECB               	goto	u5415
  1626  1ED0  083B               	movf	??_lcd_set_cursor^(0+384),w
  1627  1ED1  00BC               	movwf	(??_lcd_set_cursor+1)^(0+384)
  1628  1ED2  083C               	movf	(??_lcd_set_cursor+1)^(0+384),w
  1629  1ED3  00BE               	movwf	lcd_set_cursor@z^(0+384)
  1630                           
  1631                           ;./lcd.h: 56:         y=temp & 0x0F;
  1632  1ED4  0840               	movf	lcd_set_cursor@temp^(0+384),w
  1633  1ED5  390F               	andlw	15
  1634  1ED6  00BB               	movwf	??_lcd_set_cursor^(0+384)
  1635  1ED7  083B               	movf	??_lcd_set_cursor^(0+384),w
  1636  1ED8  00BF               	movwf	lcd_set_cursor@y^(0+384)
  1637                           
  1638                           ;./lcd.h: 57:         lcd_cmd(z);
  1639  1ED9  083E               	movf	lcd_set_cursor@z^(0+384),w
  1640  1EDA  160A  158A  230D  160A  158A  	fcall	_lcd_cmd
  1641                           
  1642                           ;./lcd.h: 58:         lcd_cmd(y);
  1643  1EDF  1683               	bsf	3,5	;RP0=1, select bank3
  1644  1EE0  1703               	bsf	3,6	;RP1=1, select bank3
  1645  1EE1  083F               	movf	lcd_set_cursor@y^(0+384),w
  1646  1EE2  160A  158A  230D   	fcall	_lcd_cmd
  1647  1EE5  0008               	return
  1648  1EE6                     __end_of_lcd_set_cursor:	
  1649                           
  1650                           	psect	text4
  1651  1F9F                     __ptext4:	
  1652 ;; *************** function _lcd_init *****************
  1653 ;; Defined at:
  1654 ;;		line 62 in file "./lcd.h"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0
  1670 ;;      Temps:          0       0       0       2       0
  1671 ;;      Totals:         0       0       0       2       0
  1672 ;;Total ram usage:        2 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    7
  1675 ;; This function calls:
  1676 ;;		_lcd_cmd
  1677 ;;		_lcd_port
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function _lcd_init
  1685  1F9F                     _lcd_init:	
  1686                           
  1687                           ;./lcd.h: 64:     lcd_port(0x00);
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1691  1F9F  3000               	movlw	0
  1692  1FA0  160A  158A  2393  160A  158A  	fcall	_lcd_port
  1693                           
  1694                           ;./lcd.h: 65:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1695  1FA5  3082               	movlw	130
  1696  1FA6  1683               	bsf	3,5	;RP0=1, select bank3
  1697  1FA7  1703               	bsf	3,6	;RP1=1, select bank3
  1698  1FA8  00BB               	movwf	(??_lcd_init^(0+384)+1)
  1699  1FA9  30DD               	movlw	221
  1700  1FAA  00BA               	movwf	??_lcd_init^(0+384)
  1701  1FAB                     u6157:	
  1702  1FAB  0BBA               	decfsz	??_lcd_init^(0+384),f
  1703  1FAC  2FAB               	goto	u6157
  1704  1FAD  0BBB               	decfsz	(??_lcd_init^(0+384)+1),f
  1705  1FAE  2FAB               	goto	u6157
  1706                           
  1707                           ;./lcd.h: 66:     lcd_cmd(0x03);
  1708  1FAF  3003               	movlw	3
  1709  1FB0  160A  158A  230D  160A  158A  	fcall	_lcd_cmd
  1710                           
  1711                           ;./lcd.h: 67:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1712  1FB5  3021               	movlw	33
  1713  1FB6  1683               	bsf	3,5	;RP0=1, select bank3
  1714  1FB7  1703               	bsf	3,6	;RP1=1, select bank3
  1715  1FB8  00BB               	movwf	(??_lcd_init^(0+384)+1)
  1716  1FB9  3075               	movlw	117
  1717  1FBA  00BA               	movwf	??_lcd_init^(0+384)
  1718  1FBB                     u6167:	
  1719  1FBB  0BBA               	decfsz	??_lcd_init^(0+384),f
  1720  1FBC  2FBB               	goto	u6167
  1721  1FBD  0BBB               	decfsz	(??_lcd_init^(0+384)+1),f
  1722  1FBE  2FBB               	goto	u6167
  1723  1FBF  2FC0               	nop2
  1724                           
  1725                           ;./lcd.h: 68:     lcd_cmd(0x03);
  1726  1FC0  3003               	movlw	3
  1727  1FC1  160A  158A  230D  160A  158A  	fcall	_lcd_cmd
  1728                           
  1729                           ;./lcd.h: 69:     _delay((unsigned long)((11)*(20000000/4000.0)));
  1730  1FC6  3048               	movlw	72
  1731  1FC7  1683               	bsf	3,5	;RP0=1, select bank3
  1732  1FC8  1703               	bsf	3,6	;RP1=1, select bank3
  1733  1FC9  00BB               	movwf	(??_lcd_init^(0+384)+1)
  1734  1FCA  306B               	movlw	107
  1735  1FCB  00BA               	movwf	??_lcd_init^(0+384)
  1736  1FCC                     u6177:	
  1737  1FCC  0BBA               	decfsz	??_lcd_init^(0+384),f
  1738  1FCD  2FCC               	goto	u6177
  1739  1FCE  0BBB               	decfsz	(??_lcd_init^(0+384)+1),f
  1740  1FCF  2FCC               	goto	u6177
  1741  1FD0  2FD1               	nop2
  1742                           
  1743                           ;./lcd.h: 70:     lcd_cmd(0x03);
  1744  1FD1  3003               	movlw	3
  1745  1FD2  160A  158A  230D  160A  158A  	fcall	_lcd_cmd
  1746                           
  1747                           ;./lcd.h: 72:     lcd_cmd(0x02);
  1748  1FD7  3002               	movlw	2
  1749  1FD8  160A  158A  230D  160A  158A  	fcall	_lcd_cmd
  1750                           
  1751                           ;./lcd.h: 73:     lcd_cmd(0x02);
  1752  1FDD  3002               	movlw	2
  1753  1FDE  160A  158A  230D  160A  158A  	fcall	_lcd_cmd
  1754                           
  1755                           ;./lcd.h: 74:     lcd_cmd(0x08);
  1756  1FE3  3008               	movlw	8
  1757  1FE4  160A  158A  230D  160A  158A  	fcall	_lcd_cmd
  1758                           
  1759                           ;./lcd.h: 75:     lcd_cmd(0x00);
  1760  1FE9  3000               	movlw	0
  1761  1FEA  160A  158A  230D  160A  158A  	fcall	_lcd_cmd
  1762                           
  1763                           ;./lcd.h: 76:     lcd_cmd(0x0C);
  1764  1FEF  300C               	movlw	12
  1765  1FF0  160A  158A  230D  160A  158A  	fcall	_lcd_cmd
  1766                           
  1767                           ;./lcd.h: 77:     lcd_cmd(0x00);
  1768  1FF5  3000               	movlw	0
  1769  1FF6  160A  158A  230D  160A  158A  	fcall	_lcd_cmd
  1770                           
  1771                           ;./lcd.h: 78:     lcd_cmd(0x06);
  1772  1FFB  3006               	movlw	6
  1773  1FFC  160A  158A  230D   	fcall	_lcd_cmd
  1774  1FFF  0008               	return
  1775  2000                     __end_of_lcd_init:	
  1776                           
  1777                           	psect	text5
  1778  10CF                     __ptext5:	
  1779 ;; *************** function _lcd_clear *****************
  1780 ;; Defined at:
  1781 ;;		line 34 in file "./lcd.h"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0, pclath, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1795 ;;      Params:         0       0       0       0       0
  1796 ;;      Locals:         0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0
  1798 ;;      Totals:         0       0       0       0       0
  1799 ;;Total ram usage:        0 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    7
  1802 ;; This function calls:
  1803 ;;		_lcd_cmd
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _lcd_clear
  1811  10CF                     _lcd_clear:	
  1812                           
  1813                           ;./lcd.h: 36:     lcd_cmd(0);
  1814                           
  1815                           ;incstack = 0
  1816                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1817  10CF  3000               	movlw	0
  1818  10D0  160A  158A  230D  160A  118A  	fcall	_lcd_cmd
  1819                           
  1820                           ;./lcd.h: 37:      lcd_cmd(1);
  1821  10D5  3001               	movlw	1
  1822  10D6  160A  158A  230D   	fcall	_lcd_cmd
  1823  10D9  0008               	return
  1824  10DA                     __end_of_lcd_clear:	
  1825                           
  1826                           	psect	text6
  1827  1B0D                     __ptext6:	
  1828 ;; *************** function _lcd_cmd *****************
  1829 ;; Defined at:
  1830 ;;		line 25 in file "./lcd.h"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  a               1    wreg     unsigned char 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  a               1   41[BANK3 ] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       0       0       0       0
  1845 ;;      Locals:         0       0       0       1       0
  1846 ;;      Temps:          0       0       0       2       0
  1847 ;;      Totals:         0       0       0       3       0
  1848 ;;Total ram usage:        3 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    6
  1851 ;; This function calls:
  1852 ;;		_lcd_port
  1853 ;; This function is called by:
  1854 ;;		_lcd_clear
  1855 ;;		_lcd_set_cursor
  1856 ;;		_lcd_init
  1857 ;;		_lcd_shift_right
  1858 ;;		_lcd_shift_left
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _lcd_cmd
  1864  1B0D                     _lcd_cmd:	
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  1868                           ;lcd_cmd@a stored from wreg
  1869  1B0D  1683               	bsf	3,5	;RP0=1, select bank3
  1870  1B0E  1703               	bsf	3,6	;RP1=1, select bank3
  1871  1B0F  00B9               	movwf	lcd_cmd@a^(0+384)
  1872                           
  1873                           ;./lcd.h: 25: void lcd_cmd(char a);./lcd.h: 26: {;./lcd.h: 27:     RD2=0;
  1874  1B10  1283               	bcf	3,5	;RP0=0, select bank0
  1875  1B11  1303               	bcf	3,6	;RP1=0, select bank0
  1876  1B12  1108               	bcf	8,2	;volatile
  1877                           
  1878                           ;./lcd.h: 28:     lcd_port(a);
  1879  1B13  1683               	bsf	3,5	;RP0=1, select bank3
  1880  1B14  1703               	bsf	3,6	;RP1=1, select bank3
  1881  1B15  0839               	movf	lcd_cmd@a^(0+384),w
  1882  1B16  160A  158A  2393  160A  158A  	fcall	_lcd_port
  1883                           
  1884                           ;./lcd.h: 29:     RD3=1;
  1885  1B1B  1283               	bcf	3,5	;RP0=0, select bank0
  1886  1B1C  1303               	bcf	3,6	;RP1=0, select bank0
  1887  1B1D  1588               	bsf	8,3	;volatile
  1888                           
  1889                           ;./lcd.h: 30:     _delay((unsigned long)((4)*(20000000/4000.0)));
  1890  1B1E  301A               	movlw	26
  1891  1B1F  1683               	bsf	3,5	;RP0=1, select bank3
  1892  1B20  1703               	bsf	3,6	;RP1=1, select bank3
  1893  1B21  00B8               	movwf	(??_lcd_cmd^(0+384)+1)
  1894  1B22  30F7               	movlw	247
  1895  1B23  00B7               	movwf	??_lcd_cmd^(0+384)
  1896  1B24                     u6187:	
  1897  1B24  0BB7               	decfsz	??_lcd_cmd^(0+384),f
  1898  1B25  2B24               	goto	u6187
  1899  1B26  0BB8               	decfsz	(??_lcd_cmd^(0+384)+1),f
  1900  1B27  2B24               	goto	u6187
  1901  1B28  2B29               	nop2
  1902                           
  1903                           ;./lcd.h: 31:     RD3=0;
  1904  1B29  1283               	bcf	3,5	;RP0=0, select bank0
  1905  1B2A  1303               	bcf	3,6	;RP1=0, select bank0
  1906  1B2B  1188               	bcf	8,3	;volatile
  1907  1B2C  0008               	return
  1908  1B2D                     __end_of_lcd_cmd:	
  1909                           
  1910                           	psect	text7
  1911  1B93                     __ptext7:	
  1912 ;; *************** function _lcd_port *****************
  1913 ;; Defined at:
  1914 ;;		line 1 in file "./lcd.h"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  a               1    wreg     unsigned char 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  a               1   38[BANK3 ] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         0       0       0       0       0
  1929 ;;      Locals:         0       0       0       1       0
  1930 ;;      Temps:          0       0       0       0       0
  1931 ;;      Totals:         0       0       0       1       0
  1932 ;;Total ram usage:        1 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    5
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_lcd_cmd
  1939 ;;		_lcd_init
  1940 ;;		_lcd_write_char
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           
  1945                           ;psect for function _lcd_port
  1946  1B93                     _lcd_port:	
  1947                           
  1948                           ;incstack = 0
  1949                           ; Regs used in _lcd_port: [wreg]
  1950                           ;lcd_port@a stored from wreg
  1951  1B93  1683               	bsf	3,5	;RP0=1, select bank3
  1952  1B94  1703               	bsf	3,6	;RP1=1, select bank3
  1953  1B95  00B6               	movwf	lcd_port@a^(0+384)
  1954                           
  1955                           ;./lcd.h: 1: void lcd_port (char a);./lcd.h: 2: {;./lcd.h: 3:     if(a & 1)
  1956  1B96  1C36               	btfss	lcd_port@a^(0+384),0
  1957  1B97  2B9C               	goto	l49
  1958                           
  1959                           ;./lcd.h: 4:         RD4=1;
  1960  1B98  1283               	bcf	3,5	;RP0=0, select bank0
  1961  1B99  1303               	bcf	3,6	;RP1=0, select bank0
  1962  1B9A  1608               	bsf	8,4	;volatile
  1963  1B9B  2B9F               	goto	l50
  1964  1B9C                     l49:	
  1965                           ;./lcd.h: 5:     else
  1966                           
  1967                           
  1968                           ;./lcd.h: 6:         RD4=0;
  1969  1B9C  1283               	bcf	3,5	;RP0=0, select bank0
  1970  1B9D  1303               	bcf	3,6	;RP1=0, select bank0
  1971  1B9E  1208               	bcf	8,4	;volatile
  1972  1B9F                     l50:	
  1973                           
  1974                           ;./lcd.h: 8:      if(a & 2)
  1975  1B9F  1683               	bsf	3,5	;RP0=1, select bank3
  1976  1BA0  1703               	bsf	3,6	;RP1=1, select bank3
  1977  1BA1  1CB6               	btfss	lcd_port@a^(0+384),1
  1978  1BA2  2BA7               	goto	l51
  1979                           
  1980                           ;./lcd.h: 9:         RD5=1;
  1981  1BA3  1283               	bcf	3,5	;RP0=0, select bank0
  1982  1BA4  1303               	bcf	3,6	;RP1=0, select bank0
  1983  1BA5  1688               	bsf	8,5	;volatile
  1984  1BA6  2BAA               	goto	l52
  1985  1BA7                     l51:	
  1986                           ;./lcd.h: 10:     else
  1987                           
  1988                           
  1989                           ;./lcd.h: 11:         RD5=0;
  1990  1BA7  1283               	bcf	3,5	;RP0=0, select bank0
  1991  1BA8  1303               	bcf	3,6	;RP1=0, select bank0
  1992  1BA9  1288               	bcf	8,5	;volatile
  1993  1BAA                     l52:	
  1994                           
  1995                           ;./lcd.h: 13:      if(a & 4)
  1996  1BAA  1683               	bsf	3,5	;RP0=1, select bank3
  1997  1BAB  1703               	bsf	3,6	;RP1=1, select bank3
  1998  1BAC  1D36               	btfss	lcd_port@a^(0+384),2
  1999  1BAD  2BB2               	goto	l53
  2000                           
  2001                           ;./lcd.h: 14:         RD6=1;
  2002  1BAE  1283               	bcf	3,5	;RP0=0, select bank0
  2003  1BAF  1303               	bcf	3,6	;RP1=0, select bank0
  2004  1BB0  1708               	bsf	8,6	;volatile
  2005  1BB1  2BB5               	goto	l54
  2006  1BB2                     l53:	
  2007                           ;./lcd.h: 15:     else
  2008                           
  2009                           
  2010                           ;./lcd.h: 16:         RD6=0;
  2011  1BB2  1283               	bcf	3,5	;RP0=0, select bank0
  2012  1BB3  1303               	bcf	3,6	;RP1=0, select bank0
  2013  1BB4  1308               	bcf	8,6	;volatile
  2014  1BB5                     l54:	
  2015                           
  2016                           ;./lcd.h: 18:      if(a & 8)
  2017  1BB5  1683               	bsf	3,5	;RP0=1, select bank3
  2018  1BB6  1703               	bsf	3,6	;RP1=1, select bank3
  2019  1BB7  1DB6               	btfss	lcd_port@a^(0+384),3
  2020  1BB8  2BBD               	goto	l55
  2021                           
  2022                           ;./lcd.h: 19:         RD7=1;
  2023  1BB9  1283               	bcf	3,5	;RP0=0, select bank0
  2024  1BBA  1303               	bcf	3,6	;RP1=0, select bank0
  2025  1BBB  1788               	bsf	8,7	;volatile
  2026  1BBC  0008               	return
  2027  1BBD                     l55:	
  2028                           ;./lcd.h: 20:     else
  2029                           
  2030                           
  2031                           ;./lcd.h: 21:         RD7=0;
  2032  1BBD  1283               	bcf	3,5	;RP0=0, select bank0
  2033  1BBE  1303               	bcf	3,6	;RP1=0, select bank0
  2034  1BBF  1388               	bcf	8,7	;volatile
  2035  1BC0  0008               	return
  2036  1BC1                     __end_of_lcd_port:	
  2037                           
  2038                           	psect	text8
  2039  07F1                     __ptext8:	
  2040 ;; *************** function _init_timer *****************
  2041 ;; Defined at:
  2042 ;;		line 78 in file "lcd.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    5
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _init_timer
  2072  07F1                     _init_timer:	
  2073                           
  2074                           ;lcd.c: 79:     OPTION_REG = 0x87;
  2075                           
  2076                           ;incstack = 0
  2077                           ; Regs used in _init_timer: [wreg]
  2078  07F1  3087               	movlw	135
  2079  07F2  1683               	bsf	3,5	;RP0=1, select bank1
  2080  07F3  1303               	bcf	3,6	;RP1=0, select bank1
  2081  07F4  0081               	movwf	1	;volatile
  2082                           
  2083                           ;lcd.c: 80:     TMR0=0x06;
  2084  07F5  3006               	movlw	6
  2085  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  2086  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  2087  07F8  0081               	movwf	1	;volatile
  2088                           
  2089                           ;lcd.c: 81:     TMR0IE=1;
  2090  07F9  168B               	bsf	11,5	;volatile
  2091                           
  2092                           ;lcd.c: 82:     GIE=1;
  2093  07FA  178B               	bsf	11,7	;volatile
  2094                           
  2095                           ;lcd.c: 83:     PEIE=1;
  2096  07FB  170B               	bsf	11,6	;volatile
  2097  07FC  0008               	return
  2098  07FD                     __end_of_init_timer:	
  2099                           
  2100                           	psect	text9
  2101  1ACE                     __ptext9:	
  2102 ;; *************** function _adc_init *****************
  2103 ;; Defined at:
  2104 ;;		line 86 in file "lcd.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		None
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2118 ;;      Params:         0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0
  2121 ;;      Totals:         0       0       0       0       0
  2122 ;;Total ram usage:        0 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    5
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           
  2133                           ;psect for function _adc_init
  2134  1ACE                     _adc_init:	
  2135                           
  2136                           ;lcd.c: 87:     ADCON0bits.ADCS0 = 1;
  2137                           
  2138                           ;incstack = 0
  2139                           ; Regs used in _adc_init: []
  2140  1ACE  1283               	bcf	3,5	;RP0=0, select bank0
  2141  1ACF  1303               	bcf	3,6	;RP1=0, select bank0
  2142  1AD0  171F               	bsf	31,6	;volatile
  2143                           
  2144                           ;lcd.c: 88:     ADCON0bits.ADCS1 = 1;
  2145  1AD1  179F               	bsf	31,7	;volatile
  2146                           
  2147                           ;lcd.c: 89:     ADCON0bits.CHS0 = 1;
  2148  1AD2  159F               	bsf	31,3	;volatile
  2149                           
  2150                           ;lcd.c: 90:     ADCON0bits.ADON = 1;
  2151  1AD3  141F               	bsf	31,0	;volatile
  2152                           
  2153                           ;lcd.c: 91:     ADCON1bits.ADFM = 1;
  2154  1AD4  1683               	bsf	3,5	;RP0=1, select bank1
  2155  1AD5  1303               	bcf	3,6	;RP1=0, select bank1
  2156  1AD6  179F               	bsf	31,7	;volatile
  2157                           
  2158                           ;lcd.c: 93:     ADCON1bits.PCFG3 = 1;
  2159  1AD7  159F               	bsf	31,3	;volatile
  2160  1AD8  0008               	return
  2161  1AD9                     __end_of_adc_init:	
  2162                           
  2163                           	psect	text10
  2164  0800                     __ptext10:	
  2165 ;; *************** function _my_isr_routine *****************
  2166 ;; Defined at:
  2167 ;;		line 37 in file "lcd.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  buf            30    0[BANK3 ] unsigned char [30]
  2172 ;;  val             4   30[BANK3 ] float 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2182 ;;      Params:         0       0       0       0       0
  2183 ;;      Locals:         0       0       0      38       0
  2184 ;;      Temps:          0       0      12       0       0
  2185 ;;      Totals:         0       0      12      38       0
  2186 ;;Total ram usage:       50 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    4
  2189 ;; This function calls:
  2190 ;;		___fladd
  2191 ;;		___fldiv
  2192 ;;		___fleq
  2193 ;;		___flmul
  2194 ;;		___xxtofl
  2195 ;;		_sprintf
  2196 ;;		i1_lcd_clear
  2197 ;;		i1_lcd_set_cursor
  2198 ;;		i1_lcd_write_string
  2199 ;; This function is called by:
  2200 ;;		Interrupt level 1
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _my_isr_routine
  2206  0800                     _my_isr_routine:	
  2207                           
  2208                           ;lcd.c: 38:     if(TMR0IF==1){
  2209  0800  1D0B               	btfss	11,2	;volatile
  2210  0801  2991               	goto	i1l112
  2211                           
  2212                           ;lcd.c: 39:         TMR0IF=0;
  2213  0802  110B               	bcf	11,2	;volatile
  2214                           
  2215                           ;lcd.c: 40:         if(counter == 74){
  2216  0803  1683               	bsf	3,5	;RP0=1, select bank3
  2217  0804  1703               	bsf	3,6	;RP1=1, select bank3
  2218  0805  0845               	movf	(_counter+3)^(0+384),w
  2219  0806  00F3               	movwf	___fleq@ff1+3
  2220  0807  0844               	movf	(_counter+2)^(0+384),w
  2221  0808  00F2               	movwf	___fleq@ff1+2
  2222  0809  0843               	movf	(_counter+1)^(0+384),w
  2223  080A  00F1               	movwf	___fleq@ff1+1
  2224  080B  0842               	movf	_counter^(0+384),w
  2225  080C  00F0               	movwf	___fleq@ff1
  2226  080D  3042               	movlw	66
  2227  080E  00F7               	movwf	___fleq@ff2+3
  2228  080F  3094               	movlw	148
  2229  0810  00F6               	movwf	___fleq@ff2+2
  2230  0811  3000               	movlw	0
  2231  0812  00F5               	movwf	___fleq@ff2+1
  2232  0813  3000               	movlw	0
  2233  0814  00F4               	movwf	___fleq@ff2
  2234  0815  160A  158A  251E  120A  158A  	fcall	___fleq
  2235  081A  1C03               	btfss	3,0
  2236  081B  2952               	goto	i1l3593
  2237                           
  2238                           ;lcd.c: 41:             TMR0 = 0x06;
  2239  081C  3006               	movlw	6
  2240  081D  1283               	bcf	3,5	;RP0=0, select bank0
  2241  081E  1303               	bcf	3,6	;RP1=0, select bank0
  2242  081F  0081               	movwf	1	;volatile
  2243                           
  2244                           ;lcd.c: 43:             counter = 0;
  2245  0820  3000               	movlw	0
  2246  0821  1683               	bsf	3,5	;RP0=1, select bank3
  2247  0822  1703               	bsf	3,6	;RP1=1, select bank3
  2248  0823  00C5               	movwf	(_counter+3)^(0+384)
  2249  0824  3000               	movlw	0
  2250  0825  00C4               	movwf	(_counter+2)^(0+384)
  2251  0826  3000               	movlw	0
  2252  0827  00C3               	movwf	(_counter+1)^(0+384)
  2253  0828  3000               	movlw	0
  2254  0829  00C2               	movwf	_counter^(0+384)
  2255                           
  2256                           ;lcd.c: 46:             lcd_clear();
  2257  082A  160A  158A  22C3  120A  158A  	fcall	i1_lcd_clear
  2258                           
  2259                           ;lcd.c: 47:             lcd_set_cursor(1,1);
  2260  082F  01F4               	clrf	i1lcd_set_cursor@b
  2261  0830  0AF4               	incf	i1lcd_set_cursor@b,f
  2262  0831  3001               	movlw	1
  2263  0832  160A  158A  2566  120A  158A  	fcall	i1_lcd_set_cursor
  2264                           
  2265                           ;lcd.c: 48:             lcd_write_string("ADC Result");
  2266  0837  30A7               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2267  0838  00F5               	movwf	i1lcd_write_string@a
  2268  0839  3080               	movlw	128
  2269  083A  00F6               	movwf	i1lcd_write_string@a+1
  2270  083B  160A  158A  249E  120A  158A  	fcall	i1_lcd_write_string
  2271                           
  2272                           ;lcd.c: 51:             ADCON0bits.GO_DONE = 1;
  2273  0840  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0841  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0842  151F               	bsf	31,2	;volatile
  2276  0843                     i1l106:	
  2277                           ;lcd.c: 52:             while(ADCON0bits.GO_DONE);
  2278                           
  2279  0843  191F               	btfsc	31,2	;volatile
  2280  0844  2843               	goto	i1l106
  2281                           
  2282                           ;lcd.c: 56:             lcd_set_cursor(2,1);
  2283  0845  01F4               	clrf	i1lcd_set_cursor@b
  2284  0846  0AF4               	incf	i1lcd_set_cursor@b,f
  2285  0847  3002               	movlw	2
  2286  0848  160A  158A  2566  120A  158A  	fcall	i1_lcd_set_cursor
  2287                           
  2288                           ;lcd.c: 57:             float val = ((float)((float)ADRESH * 256 + (float)ADRESL) * 5) /
      +                           1023;
  2289  084D  1683               	bsf	3,5	;RP0=1, select bank1
  2290  084E  1303               	bcf	3,6	;RP1=0, select bank1
  2291  084F  081E               	movf	30,w	;volatile
  2292  0850  00C3               	movwf	??_my_isr_routine^(0+128)
  2293  0851  01C4               	clrf	(??_my_isr_routine^(0+128)+1)
  2294  0852  01C5               	clrf	(??_my_isr_routine^(0+128)+2)
  2295  0853  01C6               	clrf	(??_my_isr_routine^(0+128)+3)
  2296  0854  0846               	movf	(??_my_isr_routine+3)^(0+128),w
  2297  0855  00F3               	movwf	___xxtofl@val+3
  2298  0856  0845               	movf	(??_my_isr_routine+2)^(0+128),w
  2299  0857  00F2               	movwf	___xxtofl@val+2
  2300  0858  0844               	movf	(??_my_isr_routine+1)^(0+128),w
  2301  0859  00F1               	movwf	___xxtofl@val+1
  2302  085A  0843               	movf	??_my_isr_routine^(0+128),w
  2303  085B  00F0               	movwf	___xxtofl@val
  2304  085C  3000               	movlw	0
  2305  085D  160A  118A  21DA  120A  158A  	fcall	___xxtofl
  2306  0862  0873               	movf	?___xxtofl+3,w
  2307  0863  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0864  1303               	bcf	3,6	;RP1=0, select bank0
  2309  0865  00D5               	movwf	___fladd@b+3
  2310  0866  0872               	movf	?___xxtofl+2,w
  2311  0867  00D4               	movwf	___fladd@b+2
  2312  0868  0871               	movf	?___xxtofl+1,w
  2313  0869  00D3               	movwf	___fladd@b+1
  2314  086A  0870               	movf	?___xxtofl,w
  2315  086B  00D2               	movwf	___fladd@b
  2316  086C  3043               	movlw	67
  2317  086D  00A7               	movwf	___flmul@b+3
  2318  086E  3080               	movlw	128
  2319  086F  00A6               	movwf	___flmul@b+2
  2320  0870  3000               	movlw	0
  2321  0871  00A5               	movwf	___flmul@b+1
  2322  0872  3000               	movlw	0
  2323  0873  00A4               	movwf	___flmul@b
  2324  0874  081E               	movf	30,w	;volatile
  2325  0875  1683               	bsf	3,5	;RP0=1, select bank1
  2326  0876  1303               	bcf	3,6	;RP1=0, select bank1
  2327  0877  00C7               	movwf	(??_my_isr_routine+4)^(0+128)
  2328  0878  01C8               	clrf	((??_my_isr_routine+4)^(0+128)+1)
  2329  0879  01C9               	clrf	((??_my_isr_routine+4)^(0+128)+2)
  2330  087A  01CA               	clrf	((??_my_isr_routine+4)^(0+128)+3)
  2331  087B  084A               	movf	(??_my_isr_routine+7)^(0+128),w
  2332  087C  00F3               	movwf	___xxtofl@val+3
  2333  087D  0849               	movf	(??_my_isr_routine+6)^(0+128),w
  2334  087E  00F2               	movwf	___xxtofl@val+2
  2335  087F  0848               	movf	(??_my_isr_routine+5)^(0+128),w
  2336  0880  00F1               	movwf	___xxtofl@val+1
  2337  0881  0847               	movf	(??_my_isr_routine+4)^(0+128),w
  2338  0882  00F0               	movwf	___xxtofl@val
  2339  0883  3000               	movlw	0
  2340  0884  160A  118A  21DA  120A  158A  	fcall	___xxtofl
  2341  0889  0873               	movf	?___xxtofl+3,w
  2342  088A  1283               	bcf	3,5	;RP0=0, select bank0
  2343  088B  1303               	bcf	3,6	;RP1=0, select bank0
  2344  088C  00AB               	movwf	___flmul@a+3
  2345  088D  0872               	movf	?___xxtofl+2,w
  2346  088E  00AA               	movwf	___flmul@a+2
  2347  088F  0871               	movf	?___xxtofl+1,w
  2348  0890  00A9               	movwf	___flmul@a+1
  2349  0891  0870               	movf	?___xxtofl,w
  2350  0892  00A8               	movwf	___flmul@a
  2351  0893  120A  158A  21A2  120A  158A  	fcall	___flmul
  2352  0898  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0899  1303               	bcf	3,6	;RP1=0, select bank0
  2354  089A  0827               	movf	?___flmul+3,w
  2355  089B  00D9               	movwf	___fladd@a+3
  2356  089C  0826               	movf	?___flmul+2,w
  2357  089D  00D8               	movwf	___fladd@a+2
  2358  089E  0825               	movf	?___flmul+1,w
  2359  089F  00D7               	movwf	___fladd@a+1
  2360  08A0  0824               	movf	?___flmul,w
  2361  08A1  00D6               	movwf	___fladd@a
  2362  08A2  160A  118A  25D1  120A  158A  	fcall	___fladd
  2363  08A7  1283               	bcf	3,5	;RP0=0, select bank0
  2364  08A8  1303               	bcf	3,6	;RP1=0, select bank0
  2365  08A9  0855               	movf	?___fladd+3,w
  2366  08AA  1683               	bsf	3,5	;RP0=1, select bank3
  2367  08AB  1703               	bsf	3,6	;RP1=1, select bank3
  2368  08AC  00B5               	movwf	(_my_isr_routine$923+3)^(0+384)
  2369  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  2370  08AE  1303               	bcf	3,6	;RP1=0, select bank0
  2371  08AF  0854               	movf	?___fladd+2,w
  2372  08B0  1683               	bsf	3,5	;RP0=1, select bank3
  2373  08B1  1703               	bsf	3,6	;RP1=1, select bank3
  2374  08B2  00B4               	movwf	(_my_isr_routine$923+2)^(0+384)
  2375  08B3  1283               	bcf	3,5	;RP0=0, select bank0
  2376  08B4  1303               	bcf	3,6	;RP1=0, select bank0
  2377  08B5  0853               	movf	?___fladd+1,w
  2378  08B6  1683               	bsf	3,5	;RP0=1, select bank3
  2379  08B7  1703               	bsf	3,6	;RP1=1, select bank3
  2380  08B8  00B3               	movwf	(_my_isr_routine$923+1)^(0+384)
  2381  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  2382  08BA  1303               	bcf	3,6	;RP1=0, select bank0
  2383  08BB  0852               	movf	?___fladd,w
  2384  08BC  1683               	bsf	3,5	;RP0=1, select bank3
  2385  08BD  1703               	bsf	3,6	;RP1=1, select bank3
  2386  08BE  00B2               	movwf	_my_isr_routine$923^(0+384)
  2387                           
  2388                           ;lcd.c: 57:             float val = ((float)((float)ADRESH * 256 + (float)ADRESL) * 5) /
      +                           1023;
  2389  08BF  3044               	movlw	68
  2390  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  2391  08C1  1303               	bcf	3,6	;RP1=0, select bank0
  2392  08C2  00E9               	movwf	___fldiv@a+3
  2393  08C3  307F               	movlw	127
  2394  08C4  00E8               	movwf	___fldiv@a+2
  2395  08C5  30C0               	movlw	192
  2396  08C6  00E7               	movwf	___fldiv@a+1
  2397  08C7  3000               	movlw	0
  2398  08C8  00E6               	movwf	___fldiv@a
  2399  08C9  3040               	movlw	64
  2400  08CA  00A7               	movwf	___flmul@b+3
  2401  08CB  30A0               	movlw	160
  2402  08CC  00A6               	movwf	___flmul@b+2
  2403  08CD  3000               	movlw	0
  2404  08CE  00A5               	movwf	___flmul@b+1
  2405  08CF  3000               	movlw	0
  2406  08D0  00A4               	movwf	___flmul@b
  2407  08D1  1683               	bsf	3,5	;RP0=1, select bank3
  2408  08D2  1703               	bsf	3,6	;RP1=1, select bank3
  2409  08D3  0835               	movf	(_my_isr_routine$923+3)^(0+384),w
  2410  08D4  1283               	bcf	3,5	;RP0=0, select bank0
  2411  08D5  1303               	bcf	3,6	;RP1=0, select bank0
  2412  08D6  00AB               	movwf	___flmul@a+3
  2413  08D7  1683               	bsf	3,5	;RP0=1, select bank3
  2414  08D8  1703               	bsf	3,6	;RP1=1, select bank3
  2415  08D9  0834               	movf	(_my_isr_routine$923+2)^(0+384),w
  2416  08DA  1283               	bcf	3,5	;RP0=0, select bank0
  2417  08DB  1303               	bcf	3,6	;RP1=0, select bank0
  2418  08DC  00AA               	movwf	___flmul@a+2
  2419  08DD  1683               	bsf	3,5	;RP0=1, select bank3
  2420  08DE  1703               	bsf	3,6	;RP1=1, select bank3
  2421  08DF  0833               	movf	(_my_isr_routine$923+1)^(0+384),w
  2422  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  2423  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  2424  08E2  00A9               	movwf	___flmul@a+1
  2425  08E3  1683               	bsf	3,5	;RP0=1, select bank3
  2426  08E4  1703               	bsf	3,6	;RP1=1, select bank3
  2427  08E5  0832               	movf	_my_isr_routine$923^(0+384),w
  2428  08E6  1283               	bcf	3,5	;RP0=0, select bank0
  2429  08E7  1303               	bcf	3,6	;RP1=0, select bank0
  2430  08E8  00A8               	movwf	___flmul@a
  2431  08E9  120A  158A  21A2  120A  158A  	fcall	___flmul
  2432  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  2433  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  2434  08F0  0827               	movf	?___flmul+3,w
  2435  08F1  00ED               	movwf	___fldiv@b+3
  2436  08F2  0826               	movf	?___flmul+2,w
  2437  08F3  00EC               	movwf	___fldiv@b+2
  2438  08F4  0825               	movf	?___flmul+1,w
  2439  08F5  00EB               	movwf	___fldiv@b+1
  2440  08F6  0824               	movf	?___flmul,w
  2441  08F7  00EA               	movwf	___fldiv@b
  2442  08F8  120A  118A  2596  120A  158A  	fcall	___fldiv
  2443  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  2444  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  2445  08FF  0869               	movf	?___fldiv+3,w
  2446  0900  1683               	bsf	3,5	;RP0=1, select bank3
  2447  0901  1703               	bsf	3,6	;RP1=1, select bank3
  2448  0902  00B1               	movwf	(my_isr_routine@val+3)^(0+384)
  2449  0903  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0904  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0905  0868               	movf	?___fldiv+2,w
  2452  0906  1683               	bsf	3,5	;RP0=1, select bank3
  2453  0907  1703               	bsf	3,6	;RP1=1, select bank3
  2454  0908  00B0               	movwf	(my_isr_routine@val+2)^(0+384)
  2455  0909  1283               	bcf	3,5	;RP0=0, select bank0
  2456  090A  1303               	bcf	3,6	;RP1=0, select bank0
  2457  090B  0867               	movf	?___fldiv+1,w
  2458  090C  1683               	bsf	3,5	;RP0=1, select bank3
  2459  090D  1703               	bsf	3,6	;RP1=1, select bank3
  2460  090E  00AF               	movwf	(my_isr_routine@val+1)^(0+384)
  2461  090F  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0910  1303               	bcf	3,6	;RP1=0, select bank0
  2463  0911  0866               	movf	?___fldiv,w
  2464  0912  1683               	bsf	3,5	;RP0=1, select bank3
  2465  0913  1703               	bsf	3,6	;RP1=1, select bank3
  2466  0914  00AE               	movwf	my_isr_routine@val^(0+384)
  2467                           
  2468                           ;lcd.c: 58:             char buf[30];;lcd.c: 59:             sprintf (buf, "A = %f", val
      +                          );
  2469  0915  30B2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2470  0916  1683               	bsf	3,5	;RP0=1, select bank1
  2471  0917  1303               	bcf	3,6	;RP1=0, select bank1
  2472  0918  00C3               	movwf	??_my_isr_routine^(0+128)
  2473  0919  0843               	movf	??_my_isr_routine^(0+128),w
  2474  091A  00A0               	movwf	sprintf@f^(0+128)
  2475  091B  1683               	bsf	3,5	;RP0=1, select bank3
  2476  091C  1703               	bsf	3,6	;RP1=1, select bank3
  2477  091D  0831               	movf	(my_isr_routine@val+3)^(0+384),w
  2478  091E  1683               	bsf	3,5	;RP0=1, select bank1
  2479  091F  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0920  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2481  0921  1683               	bsf	3,5	;RP0=1, select bank3
  2482  0922  1703               	bsf	3,6	;RP1=1, select bank3
  2483  0923  0830               	movf	(my_isr_routine@val+2)^(0+384),w
  2484  0924  1683               	bsf	3,5	;RP0=1, select bank1
  2485  0925  1303               	bcf	3,6	;RP1=0, select bank1
  2486  0926  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2487  0927  1683               	bsf	3,5	;RP0=1, select bank3
  2488  0928  1703               	bsf	3,6	;RP1=1, select bank3
  2489  0929  082F               	movf	(my_isr_routine@val+1)^(0+384),w
  2490  092A  1683               	bsf	3,5	;RP0=1, select bank1
  2491  092B  1303               	bcf	3,6	;RP1=0, select bank1
  2492  092C  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2493  092D  1683               	bsf	3,5	;RP0=1, select bank3
  2494  092E  1703               	bsf	3,6	;RP1=1, select bank3
  2495  092F  082E               	movf	my_isr_routine@val^(0+384),w
  2496  0930  1683               	bsf	3,5	;RP0=1, select bank1
  2497  0931  1303               	bcf	3,6	;RP1=0, select bank1
  2498  0932  00A1               	movwf	(?_sprintf^(0+128)+1)
  2499  0933  3090               	movlw	(low (my_isr_routine@buf| (0+256)))& (0+255)
  2500  0934  120A  118A  202A  120A  158A  	fcall	_sprintf
  2501                           
  2502                           ;lcd.c: 61:             lcd_write_string(buf);
  2503  0939  3090               	movlw	(low (my_isr_routine@buf| (0+256)))& (0+255)
  2504  093A  00F5               	movwf	i1lcd_write_string@a
  2505  093B  3001               	movlw	1
  2506  093C  00F6               	movwf	i1lcd_write_string@a+1
  2507  093D  160A  158A  249E  120A  158A  	fcall	i1_lcd_write_string
  2508                           
  2509                           ;lcd.c: 63:             if(!value){
  2510  0942  1683               	bsf	3,5	;RP0=1, select bank3
  2511  0943  1703               	bsf	3,6	;RP1=1, select bank3
  2512  0944  0846               	movf	_value^(0+384),w
  2513  0945  1D03               	btfss	3,2
  2514  0946  294D               	goto	i1l3589
  2515                           
  2516                           ;lcd.c: 64:                 value = 1;
  2517  0947  01C6               	clrf	_value^(0+384)
  2518  0948  0AC6               	incf	_value^(0+384),f
  2519                           
  2520                           ;lcd.c: 65:                 PORTBbits.RB1 = 1;
  2521  0949  1283               	bcf	3,5	;RP0=0, select bank0
  2522  094A  1303               	bcf	3,6	;RP1=0, select bank0
  2523  094B  1486               	bsf	6,1	;volatile
  2524                           
  2525                           ;lcd.c: 66:             }else{
  2526  094C  2991               	goto	i1l112
  2527  094D                     i1l3589:	
  2528                           
  2529                           ;lcd.c: 67:                 value = 0;
  2530  094D  01C6               	clrf	_value^(0+384)
  2531                           
  2532                           ;lcd.c: 68:                 PORTBbits.RB1 = 0;
  2533  094E  1283               	bcf	3,5	;RP0=0, select bank0
  2534  094F  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0950  1086               	bcf	6,1	;volatile
  2536  0951  2991               	goto	i1l112
  2537  0952                     i1l3593:	
  2538  0952  303F               	movlw	63
  2539  0953  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0954  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0955  00D5               	movwf	___fladd@b+3
  2542  0956  3080               	movlw	128
  2543  0957  00D4               	movwf	___fladd@b+2
  2544  0958  3000               	movlw	0
  2545  0959  00D3               	movwf	___fladd@b+1
  2546  095A  3000               	movlw	0
  2547  095B  00D2               	movwf	___fladd@b
  2548  095C  1683               	bsf	3,5	;RP0=1, select bank3
  2549  095D  1703               	bsf	3,6	;RP1=1, select bank3
  2550  095E  0845               	movf	(_counter+3)^(0+384),w
  2551  095F  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0960  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0961  00D9               	movwf	___fladd@a+3
  2554  0962  1683               	bsf	3,5	;RP0=1, select bank3
  2555  0963  1703               	bsf	3,6	;RP1=1, select bank3
  2556  0964  0844               	movf	(_counter+2)^(0+384),w
  2557  0965  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0966  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0967  00D8               	movwf	___fladd@a+2
  2560  0968  1683               	bsf	3,5	;RP0=1, select bank3
  2561  0969  1703               	bsf	3,6	;RP1=1, select bank3
  2562  096A  0843               	movf	(_counter+1)^(0+384),w
  2563  096B  1283               	bcf	3,5	;RP0=0, select bank0
  2564  096C  1303               	bcf	3,6	;RP1=0, select bank0
  2565  096D  00D7               	movwf	___fladd@a+1
  2566  096E  1683               	bsf	3,5	;RP0=1, select bank3
  2567  096F  1703               	bsf	3,6	;RP1=1, select bank3
  2568  0970  0842               	movf	_counter^(0+384),w
  2569  0971  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0972  1303               	bcf	3,6	;RP1=0, select bank0
  2571  0973  00D6               	movwf	___fladd@a
  2572  0974  160A  118A  25D1  120A  158A  	fcall	___fladd
  2573  0979  1283               	bcf	3,5	;RP0=0, select bank0
  2574  097A  1303               	bcf	3,6	;RP1=0, select bank0
  2575  097B  0855               	movf	?___fladd+3,w
  2576  097C  1683               	bsf	3,5	;RP0=1, select bank3
  2577  097D  1703               	bsf	3,6	;RP1=1, select bank3
  2578  097E  00C5               	movwf	(_counter+3)^(0+384)
  2579  097F  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0980  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0981  0854               	movf	?___fladd+2,w
  2582  0982  1683               	bsf	3,5	;RP0=1, select bank3
  2583  0983  1703               	bsf	3,6	;RP1=1, select bank3
  2584  0984  00C4               	movwf	(_counter+2)^(0+384)
  2585  0985  1283               	bcf	3,5	;RP0=0, select bank0
  2586  0986  1303               	bcf	3,6	;RP1=0, select bank0
  2587  0987  0853               	movf	?___fladd+1,w
  2588  0988  1683               	bsf	3,5	;RP0=1, select bank3
  2589  0989  1703               	bsf	3,6	;RP1=1, select bank3
  2590  098A  00C3               	movwf	(_counter+1)^(0+384)
  2591  098B  1283               	bcf	3,5	;RP0=0, select bank0
  2592  098C  1303               	bcf	3,6	;RP1=0, select bank0
  2593  098D  0852               	movf	?___fladd,w
  2594  098E  1683               	bsf	3,5	;RP0=1, select bank3
  2595  098F  1703               	bsf	3,6	;RP1=1, select bank3
  2596  0990  00C2               	movwf	_counter^(0+384)
  2597  0991                     i1l112:	
  2598  0991  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0992  1303               	bcf	3,6	;RP1=0, select bank1
  2600  0993  084E               	movf	(??_my_isr_routine+11)^(0+128),w
  2601  0994  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0995  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0996  00FF               	movwf	127
  2604  0997  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0998  1303               	bcf	3,6	;RP1=0, select bank1
  2606  0999  084D               	movf	(??_my_isr_routine+10)^(0+128),w
  2607  099A  008A               	movwf	10
  2608  099B  084C               	movf	(??_my_isr_routine+9)^(0+128),w
  2609  099C  0084               	movwf	4
  2610  099D  0E4B               	swapf	(??_my_isr_routine+8)^(0+128),w
  2611  099E  0083               	movwf	3
  2612  099F  0EFE               	swapf	126,f
  2613  09A0  0E7E               	swapf	126,w
  2614  09A1  0009               	retfie
  2615  09A2                     __end_of_my_isr_routine:	
  2616                           
  2617                           	psect	intentry
  2618  0004                     __pintentry:	
  2619                           ;incstack = 0
  2620                           ; Regs used in _my_isr_routine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2621                           
  2622  0004                     interrupt_function:	
  2623  007E                     saved_w	set	btemp
  2624  0004  00FE               	movwf	btemp
  2625  0005  0E03               	swapf	3,w
  2626  0006  1683               	bsf	3,5	;RP0=1, select bank1
  2627  0007  1303               	bcf	3,6	;RP1=0, select bank1
  2628  0008  00CB               	movwf	(??_my_isr_routine+8)^(0+128)
  2629  0009  0804               	movf	4,w
  2630  000A  00CC               	movwf	(??_my_isr_routine+9)^(0+128)
  2631  000B  080A               	movf	10,w
  2632  000C  00CD               	movwf	(??_my_isr_routine+10)^(0+128)
  2633  000D  1283               	bcf	3,5	;RP0=0, select bank0
  2634  000E  1303               	bcf	3,6	;RP1=0, select bank0
  2635  000F  087F               	movf	btemp+1,w
  2636  0010  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0011  1303               	bcf	3,6	;RP1=0, select bank1
  2638  0012  00CE               	movwf	(??_my_isr_routine+11)^(0+128)
  2639  0013  120A  158A  2800   	ljmp	_my_isr_routine
  2640                           
  2641                           	psect	text11
  2642  1C9E                     __ptext11:	
  2643 ;; *************** function i1_lcd_write_string *****************
  2644 ;; Defined at:
  2645 ;;		line 95 in file "./lcd.h"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  a               2    5[COMMON] PTR unsigned char 
  2648 ;;		 -> STR_3(22), my_isr_routine@buf(30), STR_1(11), 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  lcd_write_st    2   10[COMMON] int 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         2       0       0       0       0
  2661 ;;      Locals:         2       0       0       0       0
  2662 ;;      Temps:          3       0       0       0       0
  2663 ;;      Totals:         7       0       0       0       0
  2664 ;;Total ram usage:        7 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    2
  2667 ;; This function calls:
  2668 ;;		i1_lcd_write_char
  2669 ;; This function is called by:
  2670 ;;		_my_isr_routine
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           
  2675                           ;psect for function i1_lcd_write_string
  2676  1C9E                     i1_lcd_write_string:	
  2677                           
  2678                           ;./lcd.h: 95: }void lcd_write_string(char *a);./lcd.h: 96: {;./lcd.h: 97:     int i;;./l
      +                          cd.h: 98:     for(i=0;a[i]!='\0';i++)
  2679                           
  2680                           ;incstack = 0
  2681                           ; Regs used in i1_lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2682  1C9E  01FA               	clrf	i1lcd_write_string@i
  2683  1C9F  01FB               	clrf	i1lcd_write_string@i+1
  2684  1CA0                     i1l3553:	
  2685  1CA0  087A               	movf	i1lcd_write_string@i,w
  2686  1CA1  0775               	addwf	i1lcd_write_string@a,w
  2687  1CA2  00F8               	movwf	??i1_lcd_write_string+1
  2688  1CA3  0876               	movf	i1lcd_write_string@a+1,w
  2689  1CA4  00F7               	movwf	??i1_lcd_write_string
  2690  1CA5  1803               	skipnc
  2691  1CA6  0AF7               	incf	??i1_lcd_write_string,f
  2692  1CA7  1BFA               	btfsc	i1lcd_write_string@i,7
  2693  1CA8  03F7               	decf	??i1_lcd_write_string,f
  2694  1CA9  0877               	movf	??i1_lcd_write_string,w
  2695  1CAA  00F9               	movwf	??i1_lcd_write_string+2
  2696  1CAB  0879               	movf	??i1_lcd_write_string+2,w
  2697  1CAC  1283               	bcf	3,5	;RP0=0, select bank0
  2698  1CAD  1303               	bcf	3,6	;RP1=0, select bank0
  2699  1CAE  00FF               	movwf	127
  2700  1CAF  0878               	movf	??i1_lcd_write_string+1,w
  2701  1CB0  0084               	movwf	4
  2702  1CB1  160A  118A  2000  160A  158A  	fcall	stringtab
  2703  1CB6  3A00               	xorlw	0
  2704  1CB7  1903               	btfsc	3,2
  2705  1CB8  0008               	return
  2706                           
  2707                           ;./lcd.h: 99:         lcd_write_char(a[i]);
  2708  1CB9  087A               	movf	i1lcd_write_string@i,w
  2709  1CBA  0775               	addwf	i1lcd_write_string@a,w
  2710  1CBB  00F8               	movwf	??i1_lcd_write_string+1
  2711  1CBC  0876               	movf	i1lcd_write_string@a+1,w
  2712  1CBD  00F7               	movwf	??i1_lcd_write_string
  2713  1CBE  1803               	skipnc
  2714  1CBF  0AF7               	incf	??i1_lcd_write_string,f
  2715  1CC0  1BFA               	btfsc	i1lcd_write_string@i,7
  2716  1CC1  03F7               	decf	??i1_lcd_write_string,f
  2717  1CC2  0877               	movf	??i1_lcd_write_string,w
  2718  1CC3  00F9               	movwf	??i1_lcd_write_string+2
  2719  1CC4  0879               	movf	??i1_lcd_write_string+2,w
  2720  1CC5  1283               	bcf	3,5	;RP0=0, select bank0
  2721  1CC6  1303               	bcf	3,6	;RP1=0, select bank0
  2722  1CC7  00FF               	movwf	127
  2723  1CC8  0878               	movf	??i1_lcd_write_string+1,w
  2724  1CC9  0084               	movwf	4
  2725  1CCA  160A  118A  2000  160A  158A  	fcall	stringtab
  2726  1CCF  160A  158A  2429  160A  158A  	fcall	i1_lcd_write_char
  2727  1CD4  3001               	movlw	1
  2728  1CD5  07FA               	addwf	i1lcd_write_string@i,f
  2729  1CD6  1803               	skipnc
  2730  1CD7  0AFB               	incf	i1lcd_write_string@i+1,f
  2731  1CD8  3000               	movlw	0
  2732  1CD9  07FB               	addwf	i1lcd_write_string@i+1,f
  2733  1CDA  2CA0               	goto	i1l3553
  2734  1CDB                     __end_ofi1_lcd_write_string:	
  2735                           
  2736                           	psect	text12
  2737  1C29                     __ptext12:	
  2738 ;; *************** function i1_lcd_write_char *****************
  2739 ;; Defined at:
  2740 ;;		line 81 in file "./lcd.h"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  a               1    wreg     unsigned char 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  a               1    4[COMMON] unsigned char 
  2745 ;;  lcd_write_ch    1    3[COMMON] unsigned char 
  2746 ;;  lcd_write_ch    1    2[COMMON] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0, pclath, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2756 ;;      Params:         0       0       0       0       0
  2757 ;;      Locals:         3       0       0       0       0
  2758 ;;      Temps:          1       0       0       0       0
  2759 ;;      Totals:         4       0       0       0       0
  2760 ;;Total ram usage:        4 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    1
  2763 ;; This function calls:
  2764 ;;		i1_lcd_port
  2765 ;; This function is called by:
  2766 ;;		i1_lcd_write_string
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           
  2771                           ;psect for function i1_lcd_write_char
  2772  1C29                     i1_lcd_write_char:	
  2773                           
  2774                           ;incstack = 0
  2775                           ; Regs used in i1_lcd_write_char: [wreg+status,2+status,0+pclath+cstack]
  2776                           ;i1lcd_write_char@a stored from wreg
  2777  1C29  00F4               	movwf	i1lcd_write_char@a
  2778                           
  2779                           ;./lcd.h: 82:     char temp,y;;./lcd.h: 83:     temp=a&0x0F;
  2780  1C2A  0874               	movf	i1lcd_write_char@a,w
  2781  1C2B  390F               	andlw	15
  2782  1C2C  00F1               	movwf	??i1_lcd_write_char
  2783  1C2D  0871               	movf	??i1_lcd_write_char,w
  2784  1C2E  00F2               	movwf	i1lcd_write_char@temp
  2785                           
  2786                           ;./lcd.h: 84:     y=a&0xF0;
  2787  1C2F  0874               	movf	i1lcd_write_char@a,w
  2788  1C30  39F0               	andlw	240
  2789  1C31  00F1               	movwf	??i1_lcd_write_char
  2790  1C32  0871               	movf	??i1_lcd_write_char,w
  2791  1C33  00F3               	movwf	i1lcd_write_char@y
  2792                           
  2793                           ;./lcd.h: 85:     RD2=1;
  2794  1C34  1283               	bcf	3,5	;RP0=0, select bank0
  2795  1C35  1303               	bcf	3,6	;RP1=0, select bank0
  2796  1C36  1508               	bsf	8,2	;volatile
  2797                           
  2798                           ;./lcd.h: 86:     lcd_port(y>>4);
  2799  1C37  0873               	movf	i1lcd_write_char@y,w
  2800  1C38  00F1               	movwf	??i1_lcd_write_char
  2801  1C39  3004               	movlw	4
  2802  1C3A                     u537_25:	
  2803  1C3A  1003               	clrc
  2804  1C3B  0CF1               	rrf	??i1_lcd_write_char,f
  2805  1C3C  3EFF               	addlw	-1
  2806  1C3D  1D03               	skipz
  2807  1C3E  2C3A               	goto	u537_25
  2808  1C3F  0871               	movf	??i1_lcd_write_char,w
  2809  1C40  160A  158A  22D9  160A  158A  	fcall	i1_lcd_port
  2810                           
  2811                           ;./lcd.h: 87:     RD3=1;
  2812  1C45  1283               	bcf	3,5	;RP0=0, select bank0
  2813  1C46  1303               	bcf	3,6	;RP1=0, select bank0
  2814  1C47  1588               	bsf	8,3	;volatile
  2815                           
  2816                           ;./lcd.h: 88:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  2817  1C48  3042               	movlw	66
  2818  1C49  00F1               	movwf	??i1_lcd_write_char
  2819  1C4A                     u619_27:	
  2820  1C4A  0BF1               	decfsz	??i1_lcd_write_char,f
  2821  1C4B  2C4A               	goto	u619_27
  2822  1C4C  0000               	nop
  2823                           
  2824                           ;./lcd.h: 89:     RD3=0;
  2825  1C4D  1283               	bcf	3,5	;RP0=0, select bank0
  2826  1C4E  1303               	bcf	3,6	;RP1=0, select bank0
  2827  1C4F  1188               	bcf	8,3	;volatile
  2828                           
  2829                           ;./lcd.h: 90:     lcd_port(temp);
  2830  1C50  0872               	movf	i1lcd_write_char@temp,w
  2831  1C51  160A  158A  22D9  160A  158A  	fcall	i1_lcd_port
  2832                           
  2833                           ;./lcd.h: 91:     RD3=1;
  2834  1C56  1283               	bcf	3,5	;RP0=0, select bank0
  2835  1C57  1303               	bcf	3,6	;RP1=0, select bank0
  2836  1C58  1588               	bsf	8,3	;volatile
  2837                           
  2838                           ;./lcd.h: 92:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  2839  1C59  3042               	movlw	66
  2840  1C5A  00F1               	movwf	??i1_lcd_write_char
  2841  1C5B                     u620_27:	
  2842  1C5B  0BF1               	decfsz	??i1_lcd_write_char,f
  2843  1C5C  2C5B               	goto	u620_27
  2844  1C5D  0000               	nop
  2845                           
  2846                           ;./lcd.h: 93:     RD3=0;
  2847  1C5E  1283               	bcf	3,5	;RP0=0, select bank0
  2848  1C5F  1303               	bcf	3,6	;RP1=0, select bank0
  2849  1C60  1188               	bcf	8,3	;volatile
  2850  1C61  0008               	return
  2851  1C62                     __end_ofi1_lcd_write_char:	
  2852                           
  2853                           	psect	text13
  2854  1D66                     __ptext13:	
  2855 ;; *************** function i1_lcd_set_cursor *****************
  2856 ;; Defined at:
  2857 ;;		line 40 in file "./lcd.h"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  a               1    wreg     unsigned char 
  2860 ;;  b               1    4[COMMON] unsigned char 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  a               1    7[COMMON] unsigned char 
  2863 ;;  lcd_set_curs    1   10[COMMON] unsigned char 
  2864 ;;  lcd_set_curs    1    9[COMMON] unsigned char 
  2865 ;;  lcd_set_curs    1    8[COMMON] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, pclath, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2875 ;;      Params:         1       0       0       0       0
  2876 ;;      Locals:         4       0       0       0       0
  2877 ;;      Temps:          2       0       0       0       0
  2878 ;;      Totals:         7       0       0       0       0
  2879 ;;Total ram usage:        7 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    2
  2882 ;; This function calls:
  2883 ;;		i1_lcd_cmd
  2884 ;; This function is called by:
  2885 ;;		_my_isr_routine
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           
  2890                           ;psect for function i1_lcd_set_cursor
  2891  1D66                     i1_lcd_set_cursor:	
  2892                           
  2893                           ;incstack = 0
  2894                           ; Regs used in i1_lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  2895                           ;i1lcd_set_cursor@a stored from wreg
  2896  1D66  00F7               	movwf	i1lcd_set_cursor@a
  2897                           
  2898                           ;./lcd.h: 40: void lcd_set_cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:     char t
      +                          emp,z,y;;./lcd.h: 43:     if(a==1)
  2899  1D67  0377               	decf	i1lcd_set_cursor@a,w
  2900  1D68  1D03               	btfss	3,2
  2901  1D69  2D8B               	goto	i1l3537
  2902                           
  2903                           ;./lcd.h: 44:     {;./lcd.h: 45:         temp=0x80+b-1;
  2904  1D6A  0874               	movf	i1lcd_set_cursor@b,w
  2905  1D6B  3E7F               	addlw	127
  2906  1D6C  00F5               	movwf	??i1_lcd_set_cursor
  2907  1D6D  0875               	movf	??i1_lcd_set_cursor,w
  2908  1D6E  00FA               	movwf	i1lcd_set_cursor@temp
  2909                           
  2910                           ;./lcd.h: 46:         z=temp>>4;
  2911  1D6F  087A               	movf	i1lcd_set_cursor@temp,w
  2912  1D70  00F5               	movwf	??i1_lcd_set_cursor
  2913  1D71  3004               	movlw	4
  2914  1D72                     u603_25:	
  2915  1D72  1003               	clrc
  2916  1D73  0CF5               	rrf	??i1_lcd_set_cursor,f
  2917  1D74  3EFF               	addlw	-1
  2918  1D75  1D03               	skipz
  2919  1D76  2D72               	goto	u603_25
  2920  1D77  0875               	movf	??i1_lcd_set_cursor,w
  2921  1D78  00F6               	movwf	??i1_lcd_set_cursor+1
  2922  1D79  0876               	movf	??i1_lcd_set_cursor+1,w
  2923  1D7A  00F8               	movwf	i1lcd_set_cursor@z
  2924                           
  2925                           ;./lcd.h: 47:         y=temp & 0x0F;
  2926  1D7B  087A               	movf	i1lcd_set_cursor@temp,w
  2927  1D7C  390F               	andlw	15
  2928  1D7D  00F5               	movwf	??i1_lcd_set_cursor
  2929  1D7E  0875               	movf	??i1_lcd_set_cursor,w
  2930  1D7F  00F9               	movwf	i1lcd_set_cursor@y
  2931                           
  2932                           ;./lcd.h: 48:         lcd_cmd(z);
  2933  1D80  0878               	movf	i1lcd_set_cursor@z,w
  2934  1D81  160A  158A  22F3  160A  158A  	fcall	i1_lcd_cmd
  2935                           
  2936                           ;./lcd.h: 49:         lcd_cmd(y);
  2937  1D86  0879               	movf	i1lcd_set_cursor@y,w
  2938  1D87  160A  158A  22F3   	fcall	i1_lcd_cmd
  2939                           
  2940                           ;./lcd.h: 50:     }
  2941  1D8A  0008               	return
  2942  1D8B                     i1l3537:	
  2943  1D8B  3002               	movlw	2
  2944  1D8C  0677               	xorwf	i1lcd_set_cursor@a,w
  2945  1D8D  1D03               	btfss	3,2
  2946  1D8E  0008               	return
  2947                           
  2948                           ;./lcd.h: 53:     {;./lcd.h: 54:          temp=0xC0+b-1;
  2949  1D8F  0874               	movf	i1lcd_set_cursor@b,w
  2950  1D90  3EBF               	addlw	191
  2951  1D91  00F5               	movwf	??i1_lcd_set_cursor
  2952  1D92  0875               	movf	??i1_lcd_set_cursor,w
  2953  1D93  00FA               	movwf	i1lcd_set_cursor@temp
  2954                           
  2955                           ;./lcd.h: 55:         z=temp>>4;
  2956  1D94  087A               	movf	i1lcd_set_cursor@temp,w
  2957  1D95  00F5               	movwf	??i1_lcd_set_cursor
  2958  1D96  3004               	movlw	4
  2959  1D97                     u605_25:	
  2960  1D97  1003               	clrc
  2961  1D98  0CF5               	rrf	??i1_lcd_set_cursor,f
  2962  1D99  3EFF               	addlw	-1
  2963  1D9A  1D03               	skipz
  2964  1D9B  2D97               	goto	u605_25
  2965  1D9C  0875               	movf	??i1_lcd_set_cursor,w
  2966  1D9D  00F6               	movwf	??i1_lcd_set_cursor+1
  2967  1D9E  0876               	movf	??i1_lcd_set_cursor+1,w
  2968  1D9F  00F8               	movwf	i1lcd_set_cursor@z
  2969                           
  2970                           ;./lcd.h: 56:         y=temp & 0x0F;
  2971  1DA0  087A               	movf	i1lcd_set_cursor@temp,w
  2972  1DA1  390F               	andlw	15
  2973  1DA2  00F5               	movwf	??i1_lcd_set_cursor
  2974  1DA3  0875               	movf	??i1_lcd_set_cursor,w
  2975  1DA4  00F9               	movwf	i1lcd_set_cursor@y
  2976                           
  2977                           ;./lcd.h: 57:         lcd_cmd(z);
  2978  1DA5  0878               	movf	i1lcd_set_cursor@z,w
  2979  1DA6  160A  158A  22F3  160A  158A  	fcall	i1_lcd_cmd
  2980                           
  2981                           ;./lcd.h: 58:         lcd_cmd(y);
  2982  1DAB  0879               	movf	i1lcd_set_cursor@y,w
  2983  1DAC  160A  158A  22F3   	fcall	i1_lcd_cmd
  2984  1DAF  0008               	return
  2985  1DB0                     __end_ofi1_lcd_set_cursor:	
  2986                           
  2987                           	psect	text14
  2988  1AC3                     __ptext14:	
  2989 ;; *************** function i1_lcd_clear *****************
  2990 ;; Defined at:
  2991 ;;		line 34 in file "./lcd.h"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0, pclath, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3005 ;;      Params:         0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    2
  3012 ;; This function calls:
  3013 ;;		i1_lcd_cmd
  3014 ;; This function is called by:
  3015 ;;		_my_isr_routine
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function i1_lcd_clear
  3021  1AC3                     i1_lcd_clear:	
  3022                           
  3023                           ;./lcd.h: 36:     lcd_cmd(0);
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in i1_lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  3027  1AC3  3000               	movlw	0
  3028  1AC4  160A  158A  22F3  160A  158A  	fcall	i1_lcd_cmd
  3029                           
  3030                           ;./lcd.h: 37:      lcd_cmd(1);
  3031  1AC9  3001               	movlw	1
  3032  1ACA  160A  158A  22F3   	fcall	i1_lcd_cmd
  3033  1ACD  0008               	return
  3034  1ACE                     __end_ofi1_lcd_clear:	
  3035                           
  3036                           	psect	text15
  3037  1AF3                     __ptext15:	
  3038 ;; *************** function i1_lcd_cmd *****************
  3039 ;; Defined at:
  3040 ;;		line 25 in file "./lcd.h"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  a               1    wreg     unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  a               1    3[COMMON] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0, pclath, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3054 ;;      Params:         0       0       0       0       0
  3055 ;;      Locals:         1       0       0       0       0
  3056 ;;      Temps:          2       0       0       0       0
  3057 ;;      Totals:         3       0       0       0       0
  3058 ;;Total ram usage:        3 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    1
  3061 ;; This function calls:
  3062 ;;		i1_lcd_port
  3063 ;; This function is called by:
  3064 ;;		i1_lcd_clear
  3065 ;;		i1_lcd_set_cursor
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function i1_lcd_cmd
  3071  1AF3                     i1_lcd_cmd:	
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in i1_lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3075                           ;i1lcd_cmd@a stored from wreg
  3076  1AF3  00F3               	movwf	i1lcd_cmd@a
  3077                           
  3078                           ;./lcd.h: 25: void lcd_cmd(char a);./lcd.h: 26: {;./lcd.h: 27:     RD2=0;
  3079  1AF4  1283               	bcf	3,5	;RP0=0, select bank0
  3080  1AF5  1303               	bcf	3,6	;RP1=0, select bank0
  3081  1AF6  1108               	bcf	8,2	;volatile
  3082                           
  3083                           ;./lcd.h: 28:     lcd_port(a);
  3084  1AF7  0873               	movf	i1lcd_cmd@a,w
  3085  1AF8  160A  158A  22D9  160A  158A  	fcall	i1_lcd_port
  3086                           
  3087                           ;./lcd.h: 29:     RD3=1;
  3088  1AFD  1283               	bcf	3,5	;RP0=0, select bank0
  3089  1AFE  1303               	bcf	3,6	;RP1=0, select bank0
  3090  1AFF  1588               	bsf	8,3	;volatile
  3091                           
  3092                           ;./lcd.h: 30:     _delay((unsigned long)((4)*(20000000/4000.0)));
  3093  1B00  301A               	movlw	26
  3094  1B01  00F2               	movwf	??i1_lcd_cmd+1
  3095  1B02  30F8               	movlw	248
  3096  1B03  00F1               	movwf	??i1_lcd_cmd
  3097  1B04                     u621_27:	
  3098  1B04  0BF1               	decfsz	??i1_lcd_cmd,f
  3099  1B05  2B04               	goto	u621_27
  3100  1B06  0BF2               	decfsz	??i1_lcd_cmd+1,f
  3101  1B07  2B04               	goto	u621_27
  3102  1B08  0000               	nop
  3103                           
  3104                           ;./lcd.h: 31:     RD3=0;
  3105  1B09  1283               	bcf	3,5	;RP0=0, select bank0
  3106  1B0A  1303               	bcf	3,6	;RP1=0, select bank0
  3107  1B0B  1188               	bcf	8,3	;volatile
  3108  1B0C  0008               	return
  3109  1B0D                     __end_ofi1_lcd_cmd:	
  3110                           
  3111                           	psect	text16
  3112  1AD9                     __ptext16:	
  3113 ;; *************** function i1_lcd_port *****************
  3114 ;; Defined at:
  3115 ;;		line 1 in file "./lcd.h"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  a               1    wreg     unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  a               1    0[COMMON] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         1       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0
  3132 ;;      Totals:         1       0       0       0       0
  3133 ;;Total ram usage:        1 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		i1_lcd_cmd
  3139 ;;		i1_lcd_write_char
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function i1_lcd_port
  3145  1AD9                     i1_lcd_port:	
  3146                           
  3147                           ;incstack = 0
  3148                           ; Regs used in i1_lcd_port: [wreg]
  3149                           ;i1lcd_port@a stored from wreg
  3150  1AD9  00F0               	movwf	i1lcd_port@a
  3151                           
  3152                           ;./lcd.h: 1: void lcd_port (char a);./lcd.h: 2: {;./lcd.h: 3:     if(a & 1)
  3153  1ADA  1C70               	btfss	i1lcd_port@a,0
  3154  1ADB  2AE0               	goto	i1l49
  3155                           
  3156                           ;./lcd.h: 4:         RD4=1;
  3157  1ADC  1283               	bcf	3,5	;RP0=0, select bank0
  3158  1ADD  1303               	bcf	3,6	;RP1=0, select bank0
  3159  1ADE  1608               	bsf	8,4	;volatile
  3160  1ADF  2AE3               	goto	i1l50
  3161  1AE0                     i1l49:	
  3162                           ;./lcd.h: 5:     else
  3163                           
  3164                           
  3165                           ;./lcd.h: 6:         RD4=0;
  3166  1AE0  1283               	bcf	3,5	;RP0=0, select bank0
  3167  1AE1  1303               	bcf	3,6	;RP1=0, select bank0
  3168  1AE2  1208               	bcf	8,4	;volatile
  3169  1AE3                     i1l50:	
  3170                           
  3171                           ;./lcd.h: 8:      if(a & 2)
  3172  1AE3  1CF0               	btfss	i1lcd_port@a,1
  3173  1AE4  2AE7               	goto	i1l51
  3174                           
  3175                           ;./lcd.h: 9:         RD5=1;
  3176  1AE5  1688               	bsf	8,5	;volatile
  3177  1AE6  2AE8               	goto	i1l52
  3178  1AE7                     i1l51:	
  3179                           ;./lcd.h: 10:     else
  3180                           
  3181                           
  3182                           ;./lcd.h: 11:         RD5=0;
  3183  1AE7  1288               	bcf	8,5	;volatile
  3184  1AE8                     i1l52:	
  3185                           
  3186                           ;./lcd.h: 13:      if(a & 4)
  3187  1AE8  1D70               	btfss	i1lcd_port@a,2
  3188  1AE9  2AEC               	goto	i1l53
  3189                           
  3190                           ;./lcd.h: 14:         RD6=1;
  3191  1AEA  1708               	bsf	8,6	;volatile
  3192  1AEB  2AED               	goto	i1l54
  3193  1AEC                     i1l53:	
  3194                           ;./lcd.h: 15:     else
  3195                           
  3196                           
  3197                           ;./lcd.h: 16:         RD6=0;
  3198  1AEC  1308               	bcf	8,6	;volatile
  3199  1AED                     i1l54:	
  3200                           
  3201                           ;./lcd.h: 18:      if(a & 8)
  3202  1AED  1DF0               	btfss	i1lcd_port@a,3
  3203  1AEE  2AF1               	goto	i1l55
  3204                           
  3205                           ;./lcd.h: 19:         RD7=1;
  3206  1AEF  1788               	bsf	8,7	;volatile
  3207  1AF0  0008               	return
  3208  1AF1                     i1l55:	
  3209                           ;./lcd.h: 20:     else
  3210                           
  3211                           
  3212                           ;./lcd.h: 21:         RD7=0;
  3213  1AF1  1388               	bcf	8,7	;volatile
  3214  1AF2  0008               	return
  3215  1AF3                     __end_ofi1_lcd_port:	
  3216                           
  3217                           	psect	text17
  3218  002A                     __ptext17:	
  3219 ;; *************** function _sprintf *****************
  3220 ;; Defined at:
  3221 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  sp              1    wreg     PTR unsigned char 
  3224 ;;		 -> my_isr_routine@buf(30), 
  3225 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  3226 ;;		 -> STR_2(7), 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  3229 ;;		 -> my_isr_routine@buf(30), 
  3230 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  3231 ;;  tmpval          4   25[BANK1 ] struct .
  3232 ;;  val             4   19[BANK1 ] unsigned long 
  3233 ;;  eexp            2   23[BANK1 ] int 
  3234 ;;  prec            2   17[BANK1 ] int 
  3235 ;;  flag            2   15[BANK1 ] unsigned short 
  3236 ;;  cp              2    0        PTR const unsigned char 
  3237 ;;  len             2    0        unsigned int 
  3238 ;;  width           2    0        int 
  3239 ;;  c               1   34[BANK1 ] unsigned char 
  3240 ;;  ap              1   14[BANK1 ] PTR void [1]
  3241 ;;		 -> ?_sprintf(2), 
  3242 ;;  d               1    0        unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  2    0[BANK1 ] int 
  3245 ;; Registers used:
  3246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3252 ;;      Params:         0       0       5       0       0
  3253 ;;      Locals:         0       0      25       0       0
  3254 ;;      Temps:          0       0       5       0       0
  3255 ;;      Totals:         0       0      35       0       0
  3256 ;;Total ram usage:       35 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    3
  3259 ;; This function calls:
  3260 ;;		___awdiv
  3261 ;;		___fladd
  3262 ;;		___fleq
  3263 ;;		___flge
  3264 ;;		___flmul
  3265 ;;		___flneg
  3266 ;;		___flsub
  3267 ;;		___fltol
  3268 ;;		___lldiv
  3269 ;;		___llmod
  3270 ;;		___wmul
  3271 ;;		___xxtofl
  3272 ;;		__div_to_l_
  3273 ;;		__tdiv_to_l_
  3274 ;;		_fround
  3275 ;;		_scale
  3276 ;; This function is called by:
  3277 ;;		_my_isr_routine
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function _sprintf
  3283  002A                     _sprintf:	
  3284                           
  3285                           ;incstack = 0
  3286 ;; using string table level
  3287                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3288                           ;sprintf@sp stored from wreg
  3289  002A  1683               	bsf	3,5	;RP0=1, select bank1
  3290  002B  1303               	bcf	3,6	;RP1=0, select bank1
  3291  002C  00BD               	movwf	sprintf@sp^(0+128)
  3292                           
  3293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  3294  002D  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3295  002E  00A5               	movwf	??_sprintf^(0+128)
  3296  002F  0825               	movf	??_sprintf^(0+128),w
  3297  0030  00AE               	movwf	sprintf@ap^(0+128)
  3298  0031                     i1l3361:	
  3299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  3300                           
  3301                           
  3302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  3303  0031  3001               	movlw	1
  3304  0032  07A0               	addwf	sprintf@f^(0+128),f
  3305  0033  30FF               	movlw	-1
  3306  0034  0720               	addwf	sprintf@f^(0+128),w
  3307  0035  0084               	movwf	4
  3308  0036  160A  118A  200A  120A  118A  	fcall	stringdir
  3309  003B  00A5               	movwf	??_sprintf^(0+128)
  3310  003C  0825               	movf	??_sprintf^(0+128),w
  3311  003D  00C2               	movwf	sprintf@c^(0+128)
  3312  003E  0842               	movf	sprintf@c^(0+128),w
  3313  003F  1903               	btfsc	3,2
  3314  0040  2D91               	goto	i1l3363
  3315                           
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  3317  0041  3025               	movlw	37
  3318  0042  0642               	xorwf	sprintf@c^(0+128),w
  3319  0043  1903               	btfsc	3,2
  3320  0044  2847               	goto	i1l3209
  3321                           
  3322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  3323  0045  0842               	movf	sprintf@c^(0+128),w
  3324  0046  2D86               	goto	L5
  3325  0047                     i1l3209:	
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  3327                           
  3328                           
  3329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  3330  0047  01AF               	clrf	sprintf@flag^(0+128)
  3331  0048  01B0               	clrf	(sprintf@flag+1)^(0+128)
  3332                           
  3333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  3334  0049  284C               	goto	i1l3213
  3335  004A                     i1l247:	
  3336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  3337                           
  3338                           
  3339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  3340  004A  1530               	bsf	(sprintf@flag^(0+128)+1),2
  3341                           
  3342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  3343  004B  2866               	goto	i1l3215
  3344  004C                     i1l3213:	
  3345  004C  3001               	movlw	1
  3346  004D  07A0               	addwf	sprintf@f^(0+128),f
  3347  004E  30FF               	movlw	-1
  3348  004F  0720               	addwf	sprintf@f^(0+128),w
  3349  0050  0084               	movwf	4
  3350  0051  160A  118A  200A  120A  118A  	fcall	stringdir
  3351  0056  00C2               	movwf	sprintf@c^(0+128)
  3352  0057  00A5               	movwf	??_sprintf^(0+128)
  3353  0058  01A6               	clrf	(??_sprintf^(0+128)+1)
  3354                           
  3355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3356                           ; Switch size 1, requested type "simple"
  3357                           ; Number of cases is 1, Range of values is 0 to 0
  3358                           ; switch strategies available:
  3359                           ; Name         Instructions Cycles
  3360                           ; simple_byte            4     3 (average)
  3361                           ; direct_byte           11     8 (fixed)
  3362                           ; jumptable            260     6 (fixed)
  3363                           ;	Chosen strategy is simple_byte
  3364  0059  0826               	movf	(??_sprintf+1)^(0+128),w
  3365  005A  3A00               	xorlw	0	; case 0
  3366  005B  1903               	skipnz
  3367  005C  285E               	goto	i1l3639
  3368  005D  2831               	goto	i1l3361
  3369  005E                     i1l3639:	
  3370                           
  3371                           ; Switch size 1, requested type "simple"
  3372                           ; Number of cases is 2, Range of values is 0 to 102
  3373                           ; switch strategies available:
  3374                           ; Name         Instructions Cycles
  3375                           ; simple_byte            7     4 (average)
  3376                           ; jumptable            260     6 (fixed)
  3377                           ;	Chosen strategy is simple_byte
  3378  005E  0825               	movf	??_sprintf^(0+128),w
  3379  005F  3A00               	xorlw	0	; case 0
  3380  0060  1903               	skipnz
  3381  0061  2D91               	goto	i1l3363
  3382  0062  3A66               	xorlw	102	; case 102
  3383  0063  1903               	skipnz
  3384  0064  284A               	goto	i1l247
  3385  0065  2831               	goto	i1l3361
  3386  0066                     i1l3215:	
  3387                           
  3388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  3389  0066  3000               	movlw	0
  3390  0067  052F               	andwf	sprintf@flag^(0+128),w
  3391  0068  00A5               	movwf	??_sprintf^(0+128)
  3392  0069  3007               	movlw	7
  3393  006A  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3394  006B  00A6               	movwf	(??_sprintf+1)^(0+128)
  3395  006C  0825               	movf	??_sprintf^(0+128),w
  3396  006D  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3397  006E  1903               	btfsc	3,2
  3398  006F  2D7B               	goto	i1l3355
  3399                           
  3400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  3401  0070  3006               	movlw	6
  3402  0071  00B1               	movwf	sprintf@prec^(0+128)
  3403  0072  3000               	movlw	0
  3404  0073  00B2               	movwf	(sprintf@prec^(0+128)+1)
  3405                           
  3406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  3407  0074  082E               	movf	sprintf@ap^(0+128),w
  3408  0075  0084               	movwf	4
  3409  0076  1383               	bcf	3,7	;select IRP bank0
  3410  0077  0800               	movf	0,w
  3411  0078  00BE               	movwf	sprintf@fval^(0+128)
  3412  0079  0A84               	incf	4,f
  3413  007A  0800               	movf	0,w
  3414  007B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3415  007C  0A84               	incf	4,f
  3416  007D  0800               	movf	0,w
  3417  007E  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3418  007F  0A84               	incf	4,f
  3419  0080  0800               	movf	0,w
  3420  0081  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3421  0082  3004               	movlw	4
  3422  0083  00A5               	movwf	??_sprintf^(0+128)
  3423  0084  0825               	movf	??_sprintf^(0+128),w
  3424  0085  07AE               	addwf	sprintf@ap^(0+128),f
  3425                           
  3426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  3427  0086  0841               	movf	(sprintf@fval+3)^(0+128),w
  3428  0087  00F3               	movwf	___flge@ff1+3
  3429  0088  0840               	movf	(sprintf@fval+2)^(0+128),w
  3430  0089  00F2               	movwf	___flge@ff1+2
  3431  008A  083F               	movf	(sprintf@fval+1)^(0+128),w
  3432  008B  00F1               	movwf	___flge@ff1+1
  3433  008C  083E               	movf	sprintf@fval^(0+128),w
  3434  008D  00F0               	movwf	___flge@ff1
  3435  008E  3000               	movlw	0
  3436  008F  00F7               	movwf	___flge@ff2+3
  3437  0090  3000               	movlw	0
  3438  0091  00F6               	movwf	___flge@ff2+2
  3439  0092  3000               	movlw	0
  3440  0093  00F5               	movwf	___flge@ff2+1
  3441  0094  3000               	movlw	0
  3442  0095  00F4               	movwf	___flge@ff2
  3443  0096  160A  118A  2147  120A  118A  	fcall	___flge
  3444  009B  1803               	btfsc	3,0
  3445  009C  28BA               	goto	i1l3229
  3446                           
  3447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  3448  009D  1683               	bsf	3,5	;RP0=1, select bank1
  3449  009E  1303               	bcf	3,6	;RP1=0, select bank1
  3450  009F  0841               	movf	(sprintf@fval+3)^(0+128),w
  3451  00A0  00F3               	movwf	___flneg@f1+3
  3452  00A1  0840               	movf	(sprintf@fval+2)^(0+128),w
  3453  00A2  00F2               	movwf	___flneg@f1+2
  3454  00A3  083F               	movf	(sprintf@fval+1)^(0+128),w
  3455  00A4  00F1               	movwf	___flneg@f1+1
  3456  00A5  083E               	movf	sprintf@fval^(0+128),w
  3457  00A6  00F0               	movwf	___flneg@f1
  3458  00A7  160A  158A  22BA  120A  118A  	fcall	___flneg
  3459  00AC  0873               	movf	?___flneg+3,w
  3460  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  3461  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  3462  00AF  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3463  00B0  0872               	movf	?___flneg+2,w
  3464  00B1  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3465  00B2  0871               	movf	?___flneg+1,w
  3466  00B3  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3467  00B4  0870               	movf	?___flneg,w
  3468  00B5  00BE               	movwf	sprintf@fval^(0+128)
  3469                           
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  3471  00B6  3003               	movlw	3
  3472  00B7  04AF               	iorwf	sprintf@flag^(0+128),f
  3473  00B8  3000               	movlw	0
  3474  00B9  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  3475  00BA                     i1l3229:	
  3476                           
  3477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  3478  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  3479  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  3480  00BC  01B7               	clrf	sprintf@eexp^(0+128)
  3481  00BD  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  3482                           
  3483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  3484  00BE  0841               	movf	(sprintf@fval+3)^(0+128),w
  3485  00BF  00F3               	movwf	___fleq@ff1+3
  3486  00C0  0840               	movf	(sprintf@fval+2)^(0+128),w
  3487  00C1  00F2               	movwf	___fleq@ff1+2
  3488  00C2  083F               	movf	(sprintf@fval+1)^(0+128),w
  3489  00C3  00F1               	movwf	___fleq@ff1+1
  3490  00C4  083E               	movf	sprintf@fval^(0+128),w
  3491  00C5  00F0               	movwf	___fleq@ff1
  3492  00C6  3000               	movlw	0
  3493  00C7  00F7               	movwf	___fleq@ff2+3
  3494  00C8  3000               	movlw	0
  3495  00C9  00F6               	movwf	___fleq@ff2+2
  3496  00CA  3000               	movlw	0
  3497  00CB  00F5               	movwf	___fleq@ff2+1
  3498  00CC  3000               	movlw	0
  3499  00CD  00F4               	movwf	___fleq@ff2
  3500  00CE  160A  158A  251E  120A  118A  	fcall	___fleq
  3501  00D3  1803               	btfsc	3,0
  3502  00D4  29BE               	goto	i1l3259
  3503                           
  3504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  3505  00D5  1003               	clrc
  3506  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  3507  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  3508  00D8  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  3509  00D9  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  3510  00DA  3E82               	addlw	130
  3511  00DB  00B7               	movwf	sprintf@eexp^(0+128)
  3512  00DC  30FF               	movlw	255
  3513  00DD  1803               	skipnc
  3514  00DE  3000               	movlw	0
  3515  00DF  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  3516                           
  3517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  3518  00E0  30FF               	movlw	255
  3519  00E1  07B7               	addwf	sprintf@eexp^(0+128),f
  3520  00E2  1803               	skipnc
  3521  00E3  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3522  00E4  30FF               	movlw	255
  3523  00E5  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3524                           
  3525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  3526  00E6  3003               	movlw	3
  3527  00E7  00F0               	movwf	___wmul@multiplier
  3528  00E8  3000               	movlw	0
  3529  00E9  00F1               	movwf	___wmul@multiplier+1
  3530  00EA  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3531  00EB  00F3               	movwf	___wmul@multiplicand+1
  3532  00EC  0837               	movf	sprintf@eexp^(0+128),w
  3533  00ED  00F2               	movwf	___wmul@multiplicand
  3534  00EE  160A  158A  232D  120A  118A  	fcall	___wmul
  3535  00F3  0871               	movf	?___wmul+1,w
  3536  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  3537  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  3538  00F6  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  3539  00F7  0870               	movf	?___wmul,w
  3540  00F8  00B7               	movwf	sprintf@eexp^(0+128)
  3541                           
  3542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  3543  00F9  300A               	movlw	10
  3544  00FA  00F7               	movwf	___awdiv@divisor
  3545  00FB  3000               	movlw	0
  3546  00FC  00F8               	movwf	___awdiv@divisor+1
  3547  00FD  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3548  00FE  00FA               	movwf	___awdiv@dividend+1
  3549  00FF  0837               	movf	sprintf@eexp^(0+128),w
  3550  0100  00F9               	movwf	___awdiv@dividend
  3551  0101  160A  158A  26E6  120A  118A  	fcall	___awdiv
  3552  0106  0878               	movf	?___awdiv+1,w
  3553  0107  1683               	bsf	3,5	;RP0=1, select bank1
  3554  0108  1303               	bcf	3,6	;RP1=0, select bank1
  3555  0109  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  3556  010A  0877               	movf	?___awdiv,w
  3557  010B  00B7               	movwf	sprintf@eexp^(0+128)
  3558                           
  3559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  3560  010C  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  3561  010D  2914               	goto	i1l3245
  3562                           
  3563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  3564  010E  30FF               	movlw	255
  3565  010F  07B7               	addwf	sprintf@eexp^(0+128),f
  3566  0110  1803               	skipnc
  3567  0111  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3568  0112  30FF               	movlw	255
  3569  0113  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3570  0114                     i1l3245:	
  3571                           
  3572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  3573  0114  0337               	decf	sprintf@eexp^(0+128),w
  3574  0115  3AFF               	xorlw	255
  3575  0116  120A  158A  24B7  120A  118A  	fcall	_scale
  3576  011B  1283               	bcf	3,5	;RP0=0, select bank0
  3577  011C  1303               	bcf	3,6	;RP1=0, select bank0
  3578  011D  0841               	movf	?_scale+3,w
  3579  011E  1683               	bsf	3,5	;RP0=1, select bank1
  3580  011F  1303               	bcf	3,6	;RP1=0, select bank1
  3581  0120  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3582  0121  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0122  1303               	bcf	3,6	;RP1=0, select bank0
  3584  0123  0840               	movf	?_scale+2,w
  3585  0124  1683               	bsf	3,5	;RP0=1, select bank1
  3586  0125  1303               	bcf	3,6	;RP1=0, select bank1
  3587  0126  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3588  0127  1283               	bcf	3,5	;RP0=0, select bank0
  3589  0128  1303               	bcf	3,6	;RP1=0, select bank0
  3590  0129  083F               	movf	?_scale+1,w
  3591  012A  1683               	bsf	3,5	;RP0=1, select bank1
  3592  012B  1303               	bcf	3,6	;RP1=0, select bank1
  3593  012C  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3594  012D  1283               	bcf	3,5	;RP0=0, select bank0
  3595  012E  1303               	bcf	3,6	;RP1=0, select bank0
  3596  012F  083E               	movf	?_scale,w
  3597  0130  1683               	bsf	3,5	;RP0=1, select bank1
  3598  0131  1303               	bcf	3,6	;RP1=0, select bank1
  3599  0132  00B9               	movwf	sprintf@tmpval^(0+128)
  3600                           
  3601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  3602  0133  0841               	movf	(sprintf@fval+3)^(0+128),w
  3603  0134  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0135  1303               	bcf	3,6	;RP1=0, select bank0
  3605  0136  00A7               	movwf	___flmul@b+3
  3606  0137  1683               	bsf	3,5	;RP0=1, select bank1
  3607  0138  1303               	bcf	3,6	;RP1=0, select bank1
  3608  0139  0840               	movf	(sprintf@fval+2)^(0+128),w
  3609  013A  1283               	bcf	3,5	;RP0=0, select bank0
  3610  013B  1303               	bcf	3,6	;RP1=0, select bank0
  3611  013C  00A6               	movwf	___flmul@b+2
  3612  013D  1683               	bsf	3,5	;RP0=1, select bank1
  3613  013E  1303               	bcf	3,6	;RP1=0, select bank1
  3614  013F  083F               	movf	(sprintf@fval+1)^(0+128),w
  3615  0140  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0141  1303               	bcf	3,6	;RP1=0, select bank0
  3617  0142  00A5               	movwf	___flmul@b+1
  3618  0143  1683               	bsf	3,5	;RP0=1, select bank1
  3619  0144  1303               	bcf	3,6	;RP1=0, select bank1
  3620  0145  083E               	movf	sprintf@fval^(0+128),w
  3621  0146  1283               	bcf	3,5	;RP0=0, select bank0
  3622  0147  1303               	bcf	3,6	;RP1=0, select bank0
  3623  0148  00A4               	movwf	___flmul@b
  3624  0149  1683               	bsf	3,5	;RP0=1, select bank1
  3625  014A  1303               	bcf	3,6	;RP1=0, select bank1
  3626  014B  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3627  014C  1283               	bcf	3,5	;RP0=0, select bank0
  3628  014D  1303               	bcf	3,6	;RP1=0, select bank0
  3629  014E  00AB               	movwf	___flmul@a+3
  3630  014F  1683               	bsf	3,5	;RP0=1, select bank1
  3631  0150  1303               	bcf	3,6	;RP1=0, select bank1
  3632  0151  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3633  0152  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0153  1303               	bcf	3,6	;RP1=0, select bank0
  3635  0154  00AA               	movwf	___flmul@a+2
  3636  0155  1683               	bsf	3,5	;RP0=1, select bank1
  3637  0156  1303               	bcf	3,6	;RP1=0, select bank1
  3638  0157  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3639  0158  1283               	bcf	3,5	;RP0=0, select bank0
  3640  0159  1303               	bcf	3,6	;RP1=0, select bank0
  3641  015A  00A9               	movwf	___flmul@a+1
  3642  015B  1683               	bsf	3,5	;RP0=1, select bank1
  3643  015C  1303               	bcf	3,6	;RP1=0, select bank1
  3644  015D  0839               	movf	sprintf@tmpval^(0+128),w
  3645  015E  1283               	bcf	3,5	;RP0=0, select bank0
  3646  015F  1303               	bcf	3,6	;RP1=0, select bank0
  3647  0160  00A8               	movwf	___flmul@a
  3648  0161  120A  158A  21A2  120A  118A  	fcall	___flmul
  3649  0166  1283               	bcf	3,5	;RP0=0, select bank0
  3650  0167  1303               	bcf	3,6	;RP1=0, select bank0
  3651  0168  0827               	movf	?___flmul+3,w
  3652  0169  1683               	bsf	3,5	;RP0=1, select bank1
  3653  016A  1303               	bcf	3,6	;RP1=0, select bank1
  3654  016B  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3655  016C  1283               	bcf	3,5	;RP0=0, select bank0
  3656  016D  1303               	bcf	3,6	;RP1=0, select bank0
  3657  016E  0826               	movf	?___flmul+2,w
  3658  016F  1683               	bsf	3,5	;RP0=1, select bank1
  3659  0170  1303               	bcf	3,6	;RP1=0, select bank1
  3660  0171  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3661  0172  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0173  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0174  0825               	movf	?___flmul+1,w
  3664  0175  1683               	bsf	3,5	;RP0=1, select bank1
  3665  0176  1303               	bcf	3,6	;RP1=0, select bank1
  3666  0177  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3667  0178  1283               	bcf	3,5	;RP0=0, select bank0
  3668  0179  1303               	bcf	3,6	;RP1=0, select bank0
  3669  017A  0824               	movf	?___flmul,w
  3670  017B  1683               	bsf	3,5	;RP0=1, select bank1
  3671  017C  1303               	bcf	3,6	;RP1=0, select bank1
  3672  017D  00B9               	movwf	sprintf@tmpval^(0+128)
  3673                           
  3674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  3675  017E  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3676  017F  00F3               	movwf	___flge@ff1+3
  3677  0180  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3678  0181  00F2               	movwf	___flge@ff1+2
  3679  0182  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3680  0183  00F1               	movwf	___flge@ff1+1
  3681  0184  0839               	movf	sprintf@tmpval^(0+128),w
  3682  0185  00F0               	movwf	___flge@ff1
  3683  0186  303F               	movlw	63
  3684  0187  00F7               	movwf	___flge@ff2+3
  3685  0188  3080               	movlw	128
  3686  0189  00F6               	movwf	___flge@ff2+2
  3687  018A  3000               	movlw	0
  3688  018B  00F5               	movwf	___flge@ff2+1
  3689  018C  3000               	movlw	0
  3690  018D  00F4               	movwf	___flge@ff2
  3691  018E  160A  118A  2147  120A  118A  	fcall	___flge
  3692  0193  1803               	btfsc	3,0
  3693  0194  299D               	goto	i1l3253
  3694                           
  3695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  3696  0195  30FF               	movlw	255
  3697  0196  1683               	bsf	3,5	;RP0=1, select bank1
  3698  0197  1303               	bcf	3,6	;RP1=0, select bank1
  3699  0198  07B7               	addwf	sprintf@eexp^(0+128),f
  3700  0199  1803               	skipnc
  3701  019A  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3702  019B  30FF               	movlw	255
  3703  019C  29BD               	goto	L6
  3704  019D                     i1l3253:	
  3705  019D  1683               	bsf	3,5	;RP0=1, select bank1
  3706  019E  1303               	bcf	3,6	;RP1=0, select bank1
  3707  019F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3708  01A0  00F3               	movwf	___flge@ff1+3
  3709  01A1  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3710  01A2  00F2               	movwf	___flge@ff1+2
  3711  01A3  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3712  01A4  00F1               	movwf	___flge@ff1+1
  3713  01A5  0839               	movf	sprintf@tmpval^(0+128),w
  3714  01A6  00F0               	movwf	___flge@ff1
  3715  01A7  3041               	movlw	65
  3716  01A8  00F7               	movwf	___flge@ff2+3
  3717  01A9  3020               	movlw	32
  3718  01AA  00F6               	movwf	___flge@ff2+2
  3719  01AB  3000               	movlw	0
  3720  01AC  00F5               	movwf	___flge@ff2+1
  3721  01AD  3000               	movlw	0
  3722  01AE  00F4               	movwf	___flge@ff2
  3723  01AF  160A  118A  2147  120A  118A  	fcall	___flge
  3724  01B4  1C03               	btfss	3,0
  3725  01B5  29BE               	goto	i1l3259
  3726                           
  3727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  3728  01B6  3001               	movlw	1
  3729  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  3730  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  3731  01B9  07B7               	addwf	sprintf@eexp^(0+128),f
  3732  01BA  1803               	skipnc
  3733  01BB  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3734  01BC  3000               	movlw	0
  3735  01BD                     L6:	
  3736  01BD  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3737  01BE                     i1l3259:	
  3738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  3739                           
  3740                           
  3741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  3742  01BE  3006               	movlw	6
  3743  01BF  160A  118A  23D0  120A  118A  	fcall	_fround
  3744  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3745  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3746  01C6  0841               	movf	?_fround+3,w
  3747  01C7  00D5               	movwf	___fladd@b+3
  3748  01C8  0840               	movf	?_fround+2,w
  3749  01C9  00D4               	movwf	___fladd@b+2
  3750  01CA  083F               	movf	?_fround+1,w
  3751  01CB  00D3               	movwf	___fladd@b+1
  3752  01CC  083E               	movf	?_fround,w
  3753  01CD  00D2               	movwf	___fladd@b
  3754  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  3755  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  3756  01D0  0841               	movf	(sprintf@fval+3)^(0+128),w
  3757  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  3758  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  3759  01D3  00D9               	movwf	___fladd@a+3
  3760  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  3761  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  3762  01D6  0840               	movf	(sprintf@fval+2)^(0+128),w
  3763  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  3764  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  3765  01D9  00D8               	movwf	___fladd@a+2
  3766  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  3767  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  3768  01DC  083F               	movf	(sprintf@fval+1)^(0+128),w
  3769  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  3770  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  3771  01DF  00D7               	movwf	___fladd@a+1
  3772  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  3773  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  3774  01E2  083E               	movf	sprintf@fval^(0+128),w
  3775  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  3776  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  3777  01E5  00D6               	movwf	___fladd@a
  3778  01E6  160A  118A  25D1  120A  118A  	fcall	___fladd
  3779  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  3780  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  3781  01ED  0855               	movf	?___fladd+3,w
  3782  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  3783  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  3784  01F0  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3785  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  3786  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  3787  01F3  0854               	movf	?___fladd+2,w
  3788  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  3789  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  3790  01F6  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3791  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  3792  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  3793  01F9  0853               	movf	?___fladd+1,w
  3794  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  3795  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  3796  01FC  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3797  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  3798  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  3799  01FF  0852               	movf	?___fladd,w
  3800  0200  1683               	bsf	3,5	;RP0=1, select bank1
  3801  0201  1303               	bcf	3,6	;RP1=0, select bank1
  3802  0202  00BE               	movwf	sprintf@fval^(0+128)
  3803                           
  3804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3805  0203  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3806  0204  3A80               	xorlw	128
  3807  0205  00FF               	movwf	127
  3808  0206  3080               	movlw	128
  3809  0207  027F               	subwf	127,w
  3810  0208  1D03               	skipz
  3811  0209  2A0C               	goto	u552_25
  3812  020A  300A               	movlw	10
  3813  020B  0237               	subwf	sprintf@eexp^(0+128),w
  3814  020C                     u552_25:	
  3815  020C  1803               	skipnc
  3816  020D  2A59               	goto	i1l3269
  3817  020E  1683               	bsf	3,5	;RP0=1, select bank1
  3818  020F  1303               	bcf	3,6	;RP1=0, select bank1
  3819  0210  0841               	movf	(sprintf@fval+3)^(0+128),w
  3820  0211  00F3               	movwf	___fleq@ff1+3
  3821  0212  0840               	movf	(sprintf@fval+2)^(0+128),w
  3822  0213  00F2               	movwf	___fleq@ff1+2
  3823  0214  083F               	movf	(sprintf@fval+1)^(0+128),w
  3824  0215  00F1               	movwf	___fleq@ff1+1
  3825  0216  083E               	movf	sprintf@fval^(0+128),w
  3826  0217  00F0               	movwf	___fleq@ff1
  3827  0218  3000               	movlw	0
  3828  0219  00F7               	movwf	___fleq@ff2+3
  3829  021A  3000               	movlw	0
  3830  021B  00F6               	movwf	___fleq@ff2+2
  3831  021C  3000               	movlw	0
  3832  021D  00F5               	movwf	___fleq@ff2+1
  3833  021E  3000               	movlw	0
  3834  021F  00F4               	movwf	___fleq@ff2
  3835  0220  160A  158A  251E  120A  118A  	fcall	___fleq
  3836  0225  1803               	btfsc	3,0
  3837  0226  2AC2               	goto	i1l3283
  3838  0227  1683               	bsf	3,5	;RP0=1, select bank1
  3839  0228  1303               	bcf	3,6	;RP1=0, select bank1
  3840  0229  0841               	movf	(sprintf@fval+3)^(0+128),w
  3841  022A  1283               	bcf	3,5	;RP0=0, select bank0
  3842  022B  1303               	bcf	3,6	;RP1=0, select bank0
  3843  022C  00D4               	movwf	___fltol@f1+3
  3844  022D  1683               	bsf	3,5	;RP0=1, select bank1
  3845  022E  1303               	bcf	3,6	;RP1=0, select bank1
  3846  022F  0840               	movf	(sprintf@fval+2)^(0+128),w
  3847  0230  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0231  1303               	bcf	3,6	;RP1=0, select bank0
  3849  0232  00D3               	movwf	___fltol@f1+2
  3850  0233  1683               	bsf	3,5	;RP0=1, select bank1
  3851  0234  1303               	bcf	3,6	;RP1=0, select bank1
  3852  0235  083F               	movf	(sprintf@fval+1)^(0+128),w
  3853  0236  1283               	bcf	3,5	;RP0=0, select bank0
  3854  0237  1303               	bcf	3,6	;RP1=0, select bank0
  3855  0238  00D2               	movwf	___fltol@f1+1
  3856  0239  1683               	bsf	3,5	;RP0=1, select bank1
  3857  023A  1303               	bcf	3,6	;RP1=0, select bank1
  3858  023B  083E               	movf	sprintf@fval^(0+128),w
  3859  023C  1283               	bcf	3,5	;RP0=0, select bank0
  3860  023D  1303               	bcf	3,6	;RP1=0, select bank0
  3861  023E  00D1               	movwf	___fltol@f1
  3862  023F  160A  118A  20DA  120A  118A  	fcall	___fltol
  3863  0244  1283               	bcf	3,5	;RP0=0, select bank0
  3864  0245  1303               	bcf	3,6	;RP1=0, select bank0
  3865  0246  0854               	movf	?___fltol+3,w
  3866  0247  0453               	iorwf	?___fltol+2,w
  3867  0248  0452               	iorwf	?___fltol+1,w
  3868  0249  0451               	iorwf	?___fltol,w
  3869  024A  1D03               	skipz
  3870  024B  2AC2               	goto	i1l3283
  3871  024C  1683               	bsf	3,5	;RP0=1, select bank1
  3872  024D  1303               	bcf	3,6	;RP1=0, select bank1
  3873  024E  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3874  024F  3A80               	xorlw	128
  3875  0250  00FF               	movwf	127
  3876  0251  3080               	movlw	128
  3877  0252  027F               	subwf	127,w
  3878  0253  1D03               	skipz
  3879  0254  2A57               	goto	u555_25
  3880  0255  3002               	movlw	2
  3881  0256  0237               	subwf	sprintf@eexp^(0+128),w
  3882  0257                     u555_25:	
  3883  0257  1C03               	skipc
  3884  0258  2AC2               	goto	i1l3283
  3885  0259                     i1l3269:	
  3886                           
  3887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  3888  0259  1683               	bsf	3,5	;RP0=1, select bank1
  3889  025A  1303               	bcf	3,6	;RP1=0, select bank1
  3890  025B  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3891  025C  00F3               	movwf	___flge@ff1+3
  3892  025D  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3893  025E  00F2               	movwf	___flge@ff1+2
  3894  025F  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3895  0260  00F1               	movwf	___flge@ff1+1
  3896  0261  0839               	movf	sprintf@tmpval^(0+128),w
  3897  0262  00F0               	movwf	___flge@ff1
  3898  0263  3040               	movlw	64
  3899  0264  00F7               	movwf	___flge@ff2+3
  3900  0265  3089               	movlw	137
  3901  0266  00F6               	movwf	___flge@ff2+2
  3902  0267  3070               	movlw	112
  3903  0268  00F5               	movwf	___flge@ff2+1
  3904  0269  305F               	movlw	95
  3905  026A  00F4               	movwf	___flge@ff2
  3906  026B  160A  118A  2147  120A  118A  	fcall	___flge
  3907  0270  1803               	btfsc	3,0
  3908  0271  2A74               	goto	i1l3273
  3909                           
  3910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3911  0272  30F7               	movlw	247
  3912  0273  2A75               	goto	L1
  3913  0274                     i1l3273:	
  3914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  3915                           
  3916                           
  3917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3918  0274  30F8               	movlw	248
  3919  0275                     L1:	
  3920  0275  1683               	bsf	3,5	;RP0=1, select bank1
  3921  0276  1303               	bcf	3,6	;RP1=0, select bank1
  3922  0277  07B7               	addwf	sprintf@eexp^(0+128),f
  3923  0278  1803               	skipnc
  3924  0279  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3925  027A  30FF               	movlw	255
  3926  027B  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3927                           
  3928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  3929  027C  0837               	movf	sprintf@eexp^(0+128),w
  3930  027D  120A  158A  24B7  120A  118A  	fcall	_scale
  3931  0282  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0283  1303               	bcf	3,6	;RP1=0, select bank0
  3933  0284  0841               	movf	?_scale+3,w
  3934  0285  1683               	bsf	3,5	;RP0=1, select bank1
  3935  0286  1303               	bcf	3,6	;RP1=0, select bank1
  3936  0287  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3937  0288  1283               	bcf	3,5	;RP0=0, select bank0
  3938  0289  1303               	bcf	3,6	;RP1=0, select bank0
  3939  028A  0840               	movf	?_scale+2,w
  3940  028B  1683               	bsf	3,5	;RP0=1, select bank1
  3941  028C  1303               	bcf	3,6	;RP1=0, select bank1
  3942  028D  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3943  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3944  028F  1303               	bcf	3,6	;RP1=0, select bank0
  3945  0290  083F               	movf	?_scale+1,w
  3946  0291  1683               	bsf	3,5	;RP0=1, select bank1
  3947  0292  1303               	bcf	3,6	;RP1=0, select bank1
  3948  0293  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3949  0294  1283               	bcf	3,5	;RP0=0, select bank0
  3950  0295  1303               	bcf	3,6	;RP1=0, select bank0
  3951  0296  083E               	movf	?_scale,w
  3952  0297  1683               	bsf	3,5	;RP0=1, select bank1
  3953  0298  1303               	bcf	3,6	;RP1=0, select bank1
  3954  0299  00B9               	movwf	sprintf@tmpval^(0+128)
  3955  029A  0841               	movf	(sprintf@fval+3)^(0+128),w
  3956  029B  00F3               	movwf	__div_to_l_@f1+3
  3957  029C  0840               	movf	(sprintf@fval+2)^(0+128),w
  3958  029D  00F2               	movwf	__div_to_l_@f1+2
  3959  029E  083F               	movf	(sprintf@fval+1)^(0+128),w
  3960  029F  00F1               	movwf	__div_to_l_@f1+1
  3961  02A0  083E               	movf	sprintf@fval^(0+128),w
  3962  02A1  00F0               	movwf	__div_to_l_@f1
  3963  02A2  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3964  02A3  00F7               	movwf	__div_to_l_@f2+3
  3965  02A4  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3966  02A5  00F6               	movwf	__div_to_l_@f2+2
  3967  02A6  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3968  02A7  00F5               	movwf	__div_to_l_@f2+1
  3969  02A8  0839               	movf	sprintf@tmpval^(0+128),w
  3970  02A9  00F4               	movwf	__div_to_l_@f2
  3971  02AA  160A  118A  2326  120A  118A  	fcall	__div_to_l_
  3972  02AF  0873               	movf	?__div_to_l_+3,w
  3973  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  3974  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  3975  02B2  00B6               	movwf	(sprintf@val+3)^(0+128)
  3976  02B3  0872               	movf	?__div_to_l_+2,w
  3977  02B4  00B5               	movwf	(sprintf@val+2)^(0+128)
  3978  02B5  0871               	movf	?__div_to_l_+1,w
  3979  02B6  00B4               	movwf	(sprintf@val+1)^(0+128)
  3980  02B7  0870               	movf	?__div_to_l_,w
  3981  02B8  00B3               	movwf	sprintf@val^(0+128)
  3982                           
  3983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  3984  02B9  3000               	movlw	0
  3985  02BA  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3986  02BB  3000               	movlw	0
  3987  02BC  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3988  02BD  3000               	movlw	0
  3989  02BE  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3990  02BF  3000               	movlw	0
  3991  02C0  00BE               	movwf	sprintf@fval^(0+128)
  3992                           
  3993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  3994  02C1  2B46               	goto	i1l3289
  3995  02C2                     i1l3283:	
  3996                           
  3997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  3998  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  3999  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  4000  02C4  0841               	movf	(sprintf@fval+3)^(0+128),w
  4001  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  4002  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  4003  02C7  00D4               	movwf	___fltol@f1+3
  4004  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  4005  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  4006  02CA  0840               	movf	(sprintf@fval+2)^(0+128),w
  4007  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  4008  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  4009  02CD  00D3               	movwf	___fltol@f1+2
  4010  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  4011  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  4012  02D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  4013  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  4014  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  4015  02D3  00D2               	movwf	___fltol@f1+1
  4016  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  4017  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  4018  02D6  083E               	movf	sprintf@fval^(0+128),w
  4019  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  4020  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  4021  02D9  00D1               	movwf	___fltol@f1
  4022  02DA  160A  118A  20DA  120A  118A  	fcall	___fltol
  4023  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  4024  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  4025  02E1  0854               	movf	?___fltol+3,w
  4026  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  4027  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  4028  02E4  00B6               	movwf	(sprintf@val+3)^(0+128)
  4029  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  4030  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  4031  02E7  0853               	movf	?___fltol+2,w
  4032  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  4033  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  4034  02EA  00B5               	movwf	(sprintf@val+2)^(0+128)
  4035  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  4036  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  4037  02ED  0852               	movf	?___fltol+1,w
  4038  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  4039  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  4040  02F0  00B4               	movwf	(sprintf@val+1)^(0+128)
  4041  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  4042  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  4043  02F3  0851               	movf	?___fltol,w
  4044  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  4045  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  4046  02F6  00B3               	movwf	sprintf@val^(0+128)
  4047                           
  4048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  4049  02F7  0836               	movf	(sprintf@val+3)^(0+128),w
  4050  02F8  00F3               	movwf	___xxtofl@val+3
  4051  02F9  0835               	movf	(sprintf@val+2)^(0+128),w
  4052  02FA  00F2               	movwf	___xxtofl@val+2
  4053  02FB  0834               	movf	(sprintf@val+1)^(0+128),w
  4054  02FC  00F1               	movwf	___xxtofl@val+1
  4055  02FD  0833               	movf	sprintf@val^(0+128),w
  4056  02FE  00F0               	movwf	___xxtofl@val
  4057  02FF  3000               	movlw	0
  4058  0300  160A  118A  21DA  120A  118A  	fcall	___xxtofl
  4059  0305  0873               	movf	?___xxtofl+3,w
  4060  0306  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0307  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0308  00E9               	movwf	___flsub@a+3
  4063  0309  0872               	movf	?___xxtofl+2,w
  4064  030A  00E8               	movwf	___flsub@a+2
  4065  030B  0871               	movf	?___xxtofl+1,w
  4066  030C  00E7               	movwf	___flsub@a+1
  4067  030D  0870               	movf	?___xxtofl,w
  4068  030E  00E6               	movwf	___flsub@a
  4069  030F  1683               	bsf	3,5	;RP0=1, select bank1
  4070  0310  1303               	bcf	3,6	;RP1=0, select bank1
  4071  0311  0841               	movf	(sprintf@fval+3)^(0+128),w
  4072  0312  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0313  1303               	bcf	3,6	;RP1=0, select bank0
  4074  0314  00ED               	movwf	___flsub@b+3
  4075  0315  1683               	bsf	3,5	;RP0=1, select bank1
  4076  0316  1303               	bcf	3,6	;RP1=0, select bank1
  4077  0317  0840               	movf	(sprintf@fval+2)^(0+128),w
  4078  0318  1283               	bcf	3,5	;RP0=0, select bank0
  4079  0319  1303               	bcf	3,6	;RP1=0, select bank0
  4080  031A  00EC               	movwf	___flsub@b+2
  4081  031B  1683               	bsf	3,5	;RP0=1, select bank1
  4082  031C  1303               	bcf	3,6	;RP1=0, select bank1
  4083  031D  083F               	movf	(sprintf@fval+1)^(0+128),w
  4084  031E  1283               	bcf	3,5	;RP0=0, select bank0
  4085  031F  1303               	bcf	3,6	;RP1=0, select bank0
  4086  0320  00EB               	movwf	___flsub@b+1
  4087  0321  1683               	bsf	3,5	;RP0=1, select bank1
  4088  0322  1303               	bcf	3,6	;RP1=0, select bank1
  4089  0323  083E               	movf	sprintf@fval^(0+128),w
  4090  0324  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0325  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0326  00EA               	movwf	___flsub@b
  4093  0327  160A  158A  234E  120A  118A  	fcall	___flsub
  4094  032C  1283               	bcf	3,5	;RP0=0, select bank0
  4095  032D  1303               	bcf	3,6	;RP1=0, select bank0
  4096  032E  0869               	movf	?___flsub+3,w
  4097  032F  1683               	bsf	3,5	;RP0=1, select bank1
  4098  0330  1303               	bcf	3,6	;RP1=0, select bank1
  4099  0331  00C1               	movwf	(sprintf@fval+3)^(0+128)
  4100  0332  1283               	bcf	3,5	;RP0=0, select bank0
  4101  0333  1303               	bcf	3,6	;RP1=0, select bank0
  4102  0334  0868               	movf	?___flsub+2,w
  4103  0335  1683               	bsf	3,5	;RP0=1, select bank1
  4104  0336  1303               	bcf	3,6	;RP1=0, select bank1
  4105  0337  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4106  0338  1283               	bcf	3,5	;RP0=0, select bank0
  4107  0339  1303               	bcf	3,6	;RP1=0, select bank0
  4108  033A  0867               	movf	?___flsub+1,w
  4109  033B  1683               	bsf	3,5	;RP0=1, select bank1
  4110  033C  1303               	bcf	3,6	;RP1=0, select bank1
  4111  033D  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4112  033E  1283               	bcf	3,5	;RP0=0, select bank0
  4113  033F  1303               	bcf	3,6	;RP1=0, select bank0
  4114  0340  0866               	movf	?___flsub,w
  4115  0341  1683               	bsf	3,5	;RP0=1, select bank1
  4116  0342  1303               	bcf	3,6	;RP1=0, select bank1
  4117  0343  00BE               	movwf	sprintf@fval^(0+128)
  4118                           
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  4120  0344  01B7               	clrf	sprintf@eexp^(0+128)
  4121  0345  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  4122  0346                     i1l3289:	
  4123                           
  4124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4125  0346  01C2               	clrf	sprintf@c^(0+128)
  4126  0347  0AC2               	incf	sprintf@c^(0+128),f
  4127  0348                     i1l3295:	
  4128                           
  4129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  4130  0348  0842               	movf	sprintf@c^(0+128),w
  4131  0349  00A5               	movwf	??_sprintf^(0+128)
  4132  034A  3001               	movlw	1
  4133  034B                     u557_25:	
  4134  034B  1003               	clrc
  4135  034C  0DA5               	rlf	??_sprintf^(0+128),f
  4136  034D  3EFF               	addlw	-1
  4137  034E  1D03               	skipz
  4138  034F  2B4B               	goto	u557_25
  4139  0350  1003               	clrc
  4140  0351  0D25               	rlf	??_sprintf^(0+128),w
  4141  0352  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4142  0353  0084               	movwf	4
  4143  0354  160A  118A  200A  120A  118A  	fcall	stringdir
  4144  0359  00A6               	movwf	(??_sprintf+1)^(0+128)
  4145  035A  160A  118A  200A  120A  118A  	fcall	stringdir
  4146  035F  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  4147  0360  160A  118A  200A  120A  118A  	fcall	stringdir
  4148  0365  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  4149  0366  160A  118A  200A  120A  118A  	fcall	stringdir
  4150  036B  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  4151  036C  0829               	movf	(??_sprintf+4)^(0+128),w
  4152  036D  0236               	subwf	(sprintf@val+3)^(0+128),w
  4153  036E  1D03               	skipz
  4154  036F  2B7A               	goto	u558_25
  4155  0370  0828               	movf	(??_sprintf+3)^(0+128),w
  4156  0371  0235               	subwf	(sprintf@val+2)^(0+128),w
  4157  0372  1D03               	skipz
  4158  0373  2B7A               	goto	u558_25
  4159  0374  0827               	movf	(??_sprintf+2)^(0+128),w
  4160  0375  0234               	subwf	(sprintf@val+1)^(0+128),w
  4161  0376  1D03               	skipz
  4162  0377  2B7A               	goto	u558_25
  4163  0378  0826               	movf	(??_sprintf+1)^(0+128),w
  4164  0379  0233               	subwf	sprintf@val^(0+128),w
  4165  037A                     u558_25:	
  4166  037A  1C03               	btfss	3,0
  4167  037B  2B84               	goto	i1l3301
  4168  037C  3001               	movlw	1
  4169  037D  00A5               	movwf	??_sprintf^(0+128)
  4170  037E  0825               	movf	??_sprintf^(0+128),w
  4171  037F  07C2               	addwf	sprintf@c^(0+128),f
  4172  0380  300A               	movlw	10
  4173  0381  0642               	xorwf	sprintf@c^(0+128),w
  4174  0382  1D03               	btfss	3,2
  4175  0383  2B48               	goto	i1l3295
  4176  0384                     i1l3301:	
  4177                           
  4178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  4179  0384  3003               	movlw	3
  4180  0385  052F               	andwf	sprintf@flag^(0+128),w
  4181  0386  00A5               	movwf	??_sprintf^(0+128)
  4182  0387  3000               	movlw	0
  4183  0388  0530               	andwf	(sprintf@flag+1)^(0+128),w
  4184  0389  00A6               	movwf	(??_sprintf+1)^(0+128)
  4185  038A  0825               	movf	??_sprintf^(0+128),w
  4186  038B  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4187  038C  1903               	btfsc	3,2
  4188  038D  2B99               	goto	i1l272
  4189                           
  4190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  4191  038E  302D               	movlw	45
  4192  038F                     L2:	
  4193  038F  00A5               	movwf	??_sprintf^(0+128)
  4194  0390  083D               	movf	sprintf@sp^(0+128),w
  4195  0391  0084               	movwf	4
  4196  0392  0825               	movf	??_sprintf^(0+128),w
  4197  0393  1783               	bsf	3,7	;select IRP bank2
  4198  0394  0080               	movwf	0
  4199  0395  3001               	movlw	1
  4200  0396  00A5               	movwf	??_sprintf^(0+128)
  4201  0397  0825               	movf	??_sprintf^(0+128),w
  4202  0398  07BD               	addwf	sprintf@sp^(0+128),f
  4203  0399                     i1l272:	
  4204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  4205                           
  4206                           
  4207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  4208  0399  3001               	movlw	1
  4209  039A  02C2               	subwf	sprintf@c^(0+128),f
  4210  039B  0A42               	incf	sprintf@c^(0+128),w
  4211  039C  1903               	btfsc	3,2
  4212  039D  2C0E               	goto	i1l3319
  4213                           
  4214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  4215  039E  0842               	movf	sprintf@c^(0+128),w
  4216  039F  00A5               	movwf	??_sprintf^(0+128)
  4217  03A0  3001               	movlw	1
  4218  03A1                     u561_25:	
  4219  03A1  1003               	clrc
  4220  03A2  0DA5               	rlf	??_sprintf^(0+128),f
  4221  03A3  3EFF               	addlw	-1
  4222  03A4  1D03               	skipz
  4223  03A5  2BA1               	goto	u561_25
  4224  03A6  1003               	clrc
  4225  03A7  0D25               	rlf	??_sprintf^(0+128),w
  4226  03A8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4227  03A9  0084               	movwf	4
  4228  03AA  160A  118A  200A  120A  118A  	fcall	stringdir
  4229  03AF  00F0               	movwf	___lldiv@divisor
  4230  03B0  160A  118A  200A  120A  118A  	fcall	stringdir
  4231  03B5  00F1               	movwf	___lldiv@divisor+1
  4232  03B6  160A  118A  200A  120A  118A  	fcall	stringdir
  4233  03BB  00F2               	movwf	___lldiv@divisor+2
  4234  03BC  160A  118A  200A  120A  118A  	fcall	stringdir
  4235  03C1  00F3               	movwf	___lldiv@divisor+3
  4236  03C2  0836               	movf	(sprintf@val+3)^(0+128),w
  4237  03C3  00F7               	movwf	___lldiv@dividend+3
  4238  03C4  0835               	movf	(sprintf@val+2)^(0+128),w
  4239  03C5  00F6               	movwf	___lldiv@dividend+2
  4240  03C6  0834               	movf	(sprintf@val+1)^(0+128),w
  4241  03C7  00F5               	movwf	___lldiv@dividend+1
  4242  03C8  0833               	movf	sprintf@val^(0+128),w
  4243  03C9  00F4               	movwf	___lldiv@dividend
  4244  03CA  160A  158A  2741  120A  118A  	fcall	___lldiv
  4245  03CF  0873               	movf	?___lldiv+3,w
  4246  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  4247  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  4248  03D2  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  4249  03D3  0872               	movf	?___lldiv+2,w
  4250  03D4  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  4251  03D5  0871               	movf	?___lldiv+1,w
  4252  03D6  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  4253  03D7  0870               	movf	?___lldiv,w
  4254  03D8  00B9               	movwf	sprintf@tmpval^(0+128)
  4255                           
  4256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  4257  03D9  3000               	movlw	0
  4258  03DA  00F3               	movwf	___llmod@divisor+3
  4259  03DB  3000               	movlw	0
  4260  03DC  00F2               	movwf	___llmod@divisor+2
  4261  03DD  3000               	movlw	0
  4262  03DE  00F1               	movwf	___llmod@divisor+1
  4263  03DF  300A               	movlw	10
  4264  03E0  00F0               	movwf	___llmod@divisor
  4265  03E1  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  4266  03E2  00F7               	movwf	___llmod@dividend+3
  4267  03E3  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  4268  03E4  00F6               	movwf	___llmod@dividend+2
  4269  03E5  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  4270  03E6  00F5               	movwf	___llmod@dividend+1
  4271  03E7  0839               	movf	sprintf@tmpval^(0+128),w
  4272  03E8  00F4               	movwf	___llmod@dividend
  4273  03E9  160A  158A  25FB  120A  118A  	fcall	___llmod
  4274  03EE  0873               	movf	?___llmod+3,w
  4275  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  4276  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  4277  03F1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  4278  03F2  0872               	movf	?___llmod+2,w
  4279  03F3  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  4280  03F4  0871               	movf	?___llmod+1,w
  4281  03F5  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  4282  03F6  0870               	movf	?___llmod,w
  4283  03F7  00B9               	movwf	sprintf@tmpval^(0+128)
  4284                           
  4285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  4286  03F8  0839               	movf	sprintf@tmpval^(0+128),w
  4287  03F9  3E30               	addlw	48
  4288  03FA  2B8F               	goto	L2
  4289  03FB                     i1l3313:	
  4290                           
  4291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  4292  03FB  3030               	movlw	48
  4293  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  4294  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  4295  03FE  00A5               	movwf	??_sprintf^(0+128)
  4296  03FF  083D               	movf	sprintf@sp^(0+128),w
  4297  0400  0084               	movwf	4
  4298  0401  0825               	movf	??_sprintf^(0+128),w
  4299  0402  1783               	bsf	3,7	;select IRP bank2
  4300  0403  0080               	movwf	0
  4301  0404  3001               	movlw	1
  4302  0405  00A5               	movwf	??_sprintf^(0+128)
  4303  0406  0825               	movf	??_sprintf^(0+128),w
  4304  0407  07BD               	addwf	sprintf@sp^(0+128),f
  4305                           
  4306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  4307  0408  30FF               	movlw	255
  4308  0409  07B7               	addwf	sprintf@eexp^(0+128),f
  4309  040A  1803               	skipnc
  4310  040B  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  4311  040C  30FF               	movlw	255
  4312  040D  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  4313  040E                     i1l3319:	
  4314                           
  4315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  4316  040E  0838               	movf	(sprintf@eexp+1)^(0+128),w
  4317  040F  3A80               	xorlw	128
  4318  0410  00FF               	movwf	127
  4319  0411  3080               	movlw	128
  4320  0412  027F               	subwf	127,w
  4321  0413  1D03               	skipz
  4322  0414  2C17               	goto	u563_25
  4323  0415  3001               	movlw	1
  4324  0416  0237               	subwf	sprintf@eexp^(0+128),w
  4325  0417                     u563_25:	
  4326  0417  1803               	skipnc
  4327  0418  2BFB               	goto	i1l3313
  4328                           
  4329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4330  0419  1683               	bsf	3,5	;RP0=1, select bank1
  4331  041A  1303               	bcf	3,6	;RP1=0, select bank1
  4332  041B  0832               	movf	(sprintf@prec+1)^(0+128),w
  4333  041C  3A80               	xorlw	128
  4334  041D  00FF               	movwf	127
  4335  041E  3080               	movlw	128
  4336  041F  027F               	subwf	127,w
  4337  0420  1D03               	skipz
  4338  0421  2C24               	goto	u564_25
  4339  0422  3009               	movlw	9
  4340  0423  0231               	subwf	sprintf@prec^(0+128),w
  4341  0424                     u564_25:	
  4342  0424  1C03               	skipc
  4343  0425  2C2A               	goto	i1l3325
  4344                           
  4345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  4346  0426  3008               	movlw	8
  4347  0427  1683               	bsf	3,5	;RP0=1, select bank1
  4348  0428  1303               	bcf	3,6	;RP1=0, select bank1
  4349  0429  2C2D               	goto	L3
  4350  042A                     i1l3325:	
  4351                           
  4352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  4353  042A  1683               	bsf	3,5	;RP0=1, select bank1
  4354  042B  1303               	bcf	3,6	;RP1=0, select bank1
  4355  042C  0831               	movf	sprintf@prec^(0+128),w
  4356  042D                     L3:	
  4357  042D  00A5               	movwf	??_sprintf^(0+128)
  4358  042E  0825               	movf	??_sprintf^(0+128),w
  4359  042F  00C2               	movwf	sprintf@c^(0+128)
  4360                           
  4361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  4362  0430  0842               	movf	sprintf@c^(0+128),w
  4363  0431  00A5               	movwf	??_sprintf^(0+128)
  4364  0432  01A6               	clrf	(??_sprintf^(0+128)+1)
  4365  0433  0825               	movf	??_sprintf^(0+128),w
  4366  0434  02B1               	subwf	sprintf@prec^(0+128),f
  4367  0435  0826               	movf	(??_sprintf+1)^(0+128),w
  4368  0436  1C03               	skipc
  4369  0437  03B2               	decf	(sprintf@prec+1)^(0+128),f
  4370  0438  02B2               	subwf	(sprintf@prec+1)^(0+128),f
  4371                           
  4372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  4373  0439  0842               	movf	sprintf@c^(0+128),w
  4374  043A  1903               	btfsc	3,2
  4375  043B  2C47               	goto	i1l3333
  4376                           
  4377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  4378  043C  302E               	movlw	46
  4379  043D  00A5               	movwf	??_sprintf^(0+128)
  4380  043E  083D               	movf	sprintf@sp^(0+128),w
  4381  043F  0084               	movwf	4
  4382  0440  0825               	movf	??_sprintf^(0+128),w
  4383  0441  1783               	bsf	3,7	;select IRP bank2
  4384  0442  0080               	movwf	0
  4385  0443  3001               	movlw	1
  4386  0444  00A5               	movwf	??_sprintf^(0+128)
  4387  0445  0825               	movf	??_sprintf^(0+128),w
  4388  0446  07BD               	addwf	sprintf@sp^(0+128),f
  4389  0447                     i1l3333:	
  4390                           
  4391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  4392  0447  0842               	movf	sprintf@c^(0+128),w
  4393  0448  120A  158A  24B7  120A  118A  	fcall	_scale
  4394  044D  1283               	bcf	3,5	;RP0=0, select bank0
  4395  044E  1303               	bcf	3,6	;RP1=0, select bank0
  4396  044F  0841               	movf	?_scale+3,w
  4397  0450  1683               	bsf	3,5	;RP0=1, select bank1
  4398  0451  1303               	bcf	3,6	;RP1=0, select bank1
  4399  0452  00AD               	movwf	(_sprintf$927+3)^(0+128)
  4400  0453  1283               	bcf	3,5	;RP0=0, select bank0
  4401  0454  1303               	bcf	3,6	;RP1=0, select bank0
  4402  0455  0840               	movf	?_scale+2,w
  4403  0456  1683               	bsf	3,5	;RP0=1, select bank1
  4404  0457  1303               	bcf	3,6	;RP1=0, select bank1
  4405  0458  00AC               	movwf	(_sprintf$927+2)^(0+128)
  4406  0459  1283               	bcf	3,5	;RP0=0, select bank0
  4407  045A  1303               	bcf	3,6	;RP1=0, select bank0
  4408  045B  083F               	movf	?_scale+1,w
  4409  045C  1683               	bsf	3,5	;RP0=1, select bank1
  4410  045D  1303               	bcf	3,6	;RP1=0, select bank1
  4411  045E  00AB               	movwf	(_sprintf$927+1)^(0+128)
  4412  045F  1283               	bcf	3,5	;RP0=0, select bank0
  4413  0460  1303               	bcf	3,6	;RP1=0, select bank0
  4414  0461  083E               	movf	?_scale,w
  4415  0462  1683               	bsf	3,5	;RP0=1, select bank1
  4416  0463  1303               	bcf	3,6	;RP1=0, select bank1
  4417  0464  00AA               	movwf	_sprintf$927^(0+128)
  4418                           
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  4420  0465  082D               	movf	(_sprintf$927+3)^(0+128),w
  4421  0466  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0467  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0468  00AB               	movwf	___flmul@a+3
  4424  0469  1683               	bsf	3,5	;RP0=1, select bank1
  4425  046A  1303               	bcf	3,6	;RP1=0, select bank1
  4426  046B  082C               	movf	(_sprintf$927+2)^(0+128),w
  4427  046C  1283               	bcf	3,5	;RP0=0, select bank0
  4428  046D  1303               	bcf	3,6	;RP1=0, select bank0
  4429  046E  00AA               	movwf	___flmul@a+2
  4430  046F  1683               	bsf	3,5	;RP0=1, select bank1
  4431  0470  1303               	bcf	3,6	;RP1=0, select bank1
  4432  0471  082B               	movf	(_sprintf$927+1)^(0+128),w
  4433  0472  1283               	bcf	3,5	;RP0=0, select bank0
  4434  0473  1303               	bcf	3,6	;RP1=0, select bank0
  4435  0474  00A9               	movwf	___flmul@a+1
  4436  0475  1683               	bsf	3,5	;RP0=1, select bank1
  4437  0476  1303               	bcf	3,6	;RP1=0, select bank1
  4438  0477  082A               	movf	_sprintf$927^(0+128),w
  4439  0478  1283               	bcf	3,5	;RP0=0, select bank0
  4440  0479  1303               	bcf	3,6	;RP1=0, select bank0
  4441  047A  00A8               	movwf	___flmul@a
  4442  047B  1683               	bsf	3,5	;RP0=1, select bank1
  4443  047C  1303               	bcf	3,6	;RP1=0, select bank1
  4444  047D  0841               	movf	(sprintf@fval+3)^(0+128),w
  4445  047E  1283               	bcf	3,5	;RP0=0, select bank0
  4446  047F  1303               	bcf	3,6	;RP1=0, select bank0
  4447  0480  00A7               	movwf	___flmul@b+3
  4448  0481  1683               	bsf	3,5	;RP0=1, select bank1
  4449  0482  1303               	bcf	3,6	;RP1=0, select bank1
  4450  0483  0840               	movf	(sprintf@fval+2)^(0+128),w
  4451  0484  1283               	bcf	3,5	;RP0=0, select bank0
  4452  0485  1303               	bcf	3,6	;RP1=0, select bank0
  4453  0486  00A6               	movwf	___flmul@b+2
  4454  0487  1683               	bsf	3,5	;RP0=1, select bank1
  4455  0488  1303               	bcf	3,6	;RP1=0, select bank1
  4456  0489  083F               	movf	(sprintf@fval+1)^(0+128),w
  4457  048A  1283               	bcf	3,5	;RP0=0, select bank0
  4458  048B  1303               	bcf	3,6	;RP1=0, select bank0
  4459  048C  00A5               	movwf	___flmul@b+1
  4460  048D  1683               	bsf	3,5	;RP0=1, select bank1
  4461  048E  1303               	bcf	3,6	;RP1=0, select bank1
  4462  048F  083E               	movf	sprintf@fval^(0+128),w
  4463  0490  1283               	bcf	3,5	;RP0=0, select bank0
  4464  0491  1303               	bcf	3,6	;RP1=0, select bank0
  4465  0492  00A4               	movwf	___flmul@b
  4466  0493  120A  158A  21A2  120A  118A  	fcall	___flmul
  4467  0498  1283               	bcf	3,5	;RP0=0, select bank0
  4468  0499  1303               	bcf	3,6	;RP1=0, select bank0
  4469  049A  0827               	movf	?___flmul+3,w
  4470  049B  00D4               	movwf	___fltol@f1+3
  4471  049C  0826               	movf	?___flmul+2,w
  4472  049D  00D3               	movwf	___fltol@f1+2
  4473  049E  0825               	movf	?___flmul+1,w
  4474  049F  00D2               	movwf	___fltol@f1+1
  4475  04A0  0824               	movf	?___flmul,w
  4476  04A1  00D1               	movwf	___fltol@f1
  4477  04A2  160A  118A  20DA  120A  118A  	fcall	___fltol
  4478  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  4479  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  4480  04A9  0854               	movf	?___fltol+3,w
  4481  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  4482  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  4483  04AC  00B6               	movwf	(sprintf@val+3)^(0+128)
  4484  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  4485  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  4486  04AF  0853               	movf	?___fltol+2,w
  4487  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  4488  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  4489  04B2  00B5               	movwf	(sprintf@val+2)^(0+128)
  4490  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  4491  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  4492  04B5  0852               	movf	?___fltol+1,w
  4493  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  4494  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  4495  04B8  00B4               	movwf	(sprintf@val+1)^(0+128)
  4496  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  4497  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  4498  04BB  0851               	movf	?___fltol,w
  4499  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  4500  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  4501  04BE                     L4:	
  4502  04BE  00B3               	movwf	sprintf@val^(0+128)
  4503                           
  4504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  4505  04BF  3001               	movlw	1
  4506  04C0  02C2               	subwf	sprintf@c^(0+128),f
  4507  04C1  0A42               	incf	sprintf@c^(0+128),w
  4508  04C2  1903               	btfsc	3,2
  4509  04C3  2D76               	goto	i1l3353
  4510                           
  4511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  4512                           
  4513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  4514  04C4  0842               	movf	sprintf@c^(0+128),w
  4515  04C5  00A5               	movwf	??_sprintf^(0+128)
  4516  04C6  3001               	movlw	1
  4517  04C7                     u566_25:	
  4518  04C7  1003               	clrc
  4519  04C8  0DA5               	rlf	??_sprintf^(0+128),f
  4520  04C9  3EFF               	addlw	-1
  4521  04CA  1D03               	skipz
  4522  04CB  2CC7               	goto	u566_25
  4523  04CC  1003               	clrc
  4524  04CD  0D25               	rlf	??_sprintf^(0+128),w
  4525  04CE  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4526  04CF  0084               	movwf	4
  4527  04D0  160A  118A  200A  120A  118A  	fcall	stringdir
  4528  04D5  00F0               	movwf	___lldiv@divisor
  4529  04D6  160A  118A  200A  120A  118A  	fcall	stringdir
  4530  04DB  00F1               	movwf	___lldiv@divisor+1
  4531  04DC  160A  118A  200A  120A  118A  	fcall	stringdir
  4532  04E1  00F2               	movwf	___lldiv@divisor+2
  4533  04E2  160A  118A  200A  120A  118A  	fcall	stringdir
  4534  04E7  00F3               	movwf	___lldiv@divisor+3
  4535  04E8  0836               	movf	(sprintf@val+3)^(0+128),w
  4536  04E9  00F7               	movwf	___lldiv@dividend+3
  4537  04EA  0835               	movf	(sprintf@val+2)^(0+128),w
  4538  04EB  00F6               	movwf	___lldiv@dividend+2
  4539  04EC  0834               	movf	(sprintf@val+1)^(0+128),w
  4540  04ED  00F5               	movwf	___lldiv@dividend+1
  4541  04EE  0833               	movf	sprintf@val^(0+128),w
  4542  04EF  00F4               	movwf	___lldiv@dividend
  4543  04F0  160A  158A  2741  120A  118A  	fcall	___lldiv
  4544  04F5  0873               	movf	?___lldiv+3,w
  4545  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  4546  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  4547  04F8  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  4548  04F9  0872               	movf	?___lldiv+2,w
  4549  04FA  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  4550  04FB  0871               	movf	?___lldiv+1,w
  4551  04FC  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  4552  04FD  0870               	movf	?___lldiv,w
  4553  04FE  00B9               	movwf	sprintf@tmpval^(0+128)
  4554                           
  4555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  4556  04FF  3000               	movlw	0
  4557  0500  00F3               	movwf	___llmod@divisor+3
  4558  0501  3000               	movlw	0
  4559  0502  00F2               	movwf	___llmod@divisor+2
  4560  0503  3000               	movlw	0
  4561  0504  00F1               	movwf	___llmod@divisor+1
  4562  0505  300A               	movlw	10
  4563  0506  00F0               	movwf	___llmod@divisor
  4564  0507  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  4565  0508  00F7               	movwf	___llmod@dividend+3
  4566  0509  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  4567  050A  00F6               	movwf	___llmod@dividend+2
  4568  050B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  4569  050C  00F5               	movwf	___llmod@dividend+1
  4570  050D  0839               	movf	sprintf@tmpval^(0+128),w
  4571  050E  00F4               	movwf	___llmod@dividend
  4572  050F  160A  158A  25FB  120A  118A  	fcall	___llmod
  4573  0514  0873               	movf	?___llmod+3,w
  4574  0515  1683               	bsf	3,5	;RP0=1, select bank1
  4575  0516  1303               	bcf	3,6	;RP1=0, select bank1
  4576  0517  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  4577  0518  0872               	movf	?___llmod+2,w
  4578  0519  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  4579  051A  0871               	movf	?___llmod+1,w
  4580  051B  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  4581  051C  0870               	movf	?___llmod,w
  4582  051D  00B9               	movwf	sprintf@tmpval^(0+128)
  4583                           
  4584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  4585  051E  0839               	movf	sprintf@tmpval^(0+128),w
  4586  051F  3E30               	addlw	48
  4587  0520  00A5               	movwf	??_sprintf^(0+128)
  4588  0521  083D               	movf	sprintf@sp^(0+128),w
  4589  0522  0084               	movwf	4
  4590  0523  0825               	movf	??_sprintf^(0+128),w
  4591  0524  1783               	bsf	3,7	;select IRP bank2
  4592  0525  0080               	movwf	0
  4593  0526  3001               	movlw	1
  4594  0527  00A5               	movwf	??_sprintf^(0+128)
  4595  0528  0825               	movf	??_sprintf^(0+128),w
  4596  0529  07BD               	addwf	sprintf@sp^(0+128),f
  4597                           
  4598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  4599  052A  0842               	movf	sprintf@c^(0+128),w
  4600  052B  00A5               	movwf	??_sprintf^(0+128)
  4601  052C  3001               	movlw	1
  4602  052D                     u567_25:	
  4603  052D  1003               	clrc
  4604  052E  0DA5               	rlf	??_sprintf^(0+128),f
  4605  052F  3EFF               	addlw	-1
  4606  0530  1D03               	skipz
  4607  0531  2D2D               	goto	u567_25
  4608  0532  1003               	clrc
  4609  0533  0D25               	rlf	??_sprintf^(0+128),w
  4610  0534  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4611  0535  0084               	movwf	4
  4612  0536  160A  118A  200A  120A  118A  	fcall	stringdir
  4613  053B  00F0               	movwf	___llmod@divisor
  4614  053C  160A  118A  200A  120A  118A  	fcall	stringdir
  4615  0541  00F1               	movwf	___llmod@divisor+1
  4616  0542  160A  118A  200A  120A  118A  	fcall	stringdir
  4617  0547  00F2               	movwf	___llmod@divisor+2
  4618  0548  160A  118A  200A  120A  118A  	fcall	stringdir
  4619  054D  00F3               	movwf	___llmod@divisor+3
  4620  054E  0836               	movf	(sprintf@val+3)^(0+128),w
  4621  054F  00F7               	movwf	___llmod@dividend+3
  4622  0550  0835               	movf	(sprintf@val+2)^(0+128),w
  4623  0551  00F6               	movwf	___llmod@dividend+2
  4624  0552  0834               	movf	(sprintf@val+1)^(0+128),w
  4625  0553  00F5               	movwf	___llmod@dividend+1
  4626  0554  0833               	movf	sprintf@val^(0+128),w
  4627  0555  00F4               	movwf	___llmod@dividend
  4628  0556  160A  158A  25FB  120A  118A  	fcall	___llmod
  4629  055B  0873               	movf	?___llmod+3,w
  4630  055C  1683               	bsf	3,5	;RP0=1, select bank1
  4631  055D  1303               	bcf	3,6	;RP1=0, select bank1
  4632  055E  00B6               	movwf	(sprintf@val+3)^(0+128)
  4633  055F  0872               	movf	?___llmod+2,w
  4634  0560  00B5               	movwf	(sprintf@val+2)^(0+128)
  4635  0561  0871               	movf	?___llmod+1,w
  4636  0562  00B4               	movwf	(sprintf@val+1)^(0+128)
  4637  0563  0870               	movf	?___llmod,w
  4638  0564  2CBE               	goto	L4
  4639  0565                     i1l3347:	
  4640                           
  4641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  4642  0565  3030               	movlw	48
  4643  0566  00A5               	movwf	??_sprintf^(0+128)
  4644  0567  083D               	movf	sprintf@sp^(0+128),w
  4645  0568  0084               	movwf	4
  4646  0569  0825               	movf	??_sprintf^(0+128),w
  4647  056A  1783               	bsf	3,7	;select IRP bank2
  4648  056B  0080               	movwf	0
  4649  056C  3001               	movlw	1
  4650  056D  00A5               	movwf	??_sprintf^(0+128)
  4651  056E  0825               	movf	??_sprintf^(0+128),w
  4652  056F  07BD               	addwf	sprintf@sp^(0+128),f
  4653                           
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  4655  0570  30FF               	movlw	255
  4656  0571  07B1               	addwf	sprintf@prec^(0+128),f
  4657  0572  1803               	skipnc
  4658  0573  0AB2               	incf	(sprintf@prec+1)^(0+128),f
  4659  0574  30FF               	movlw	255
  4660  0575  07B2               	addwf	(sprintf@prec+1)^(0+128),f
  4661  0576                     i1l3353:	
  4662                           
  4663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  4664  0576  0831               	movf	sprintf@prec^(0+128),w
  4665  0577  0432               	iorwf	(sprintf@prec+1)^(0+128),w
  4666  0578  1903               	btfsc	3,2
  4667  0579  2831               	goto	i1l3361
  4668  057A  2D65               	goto	i1l3347
  4669  057B                     i1l3355:	
  4670                           
  4671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  4672  057B  3003               	movlw	3
  4673  057C  052F               	andwf	sprintf@flag^(0+128),w
  4674  057D  00A5               	movwf	??_sprintf^(0+128)
  4675  057E  3000               	movlw	0
  4676  057F  0530               	andwf	(sprintf@flag+1)^(0+128),w
  4677  0580  00A6               	movwf	(??_sprintf+1)^(0+128)
  4678  0581  0825               	movf	??_sprintf^(0+128),w
  4679  0582  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4680  0583  1903               	btfsc	3,2
  4681  0584  2831               	goto	i1l3361
  4682                           
  4683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  4684  0585  302D               	movlw	45
  4685  0586                     L5:	
  4686  0586  00A5               	movwf	??_sprintf^(0+128)
  4687  0587  083D               	movf	sprintf@sp^(0+128),w
  4688  0588  0084               	movwf	4
  4689  0589  0825               	movf	??_sprintf^(0+128),w
  4690  058A  1783               	bsf	3,7	;select IRP bank2
  4691  058B  0080               	movwf	0
  4692  058C  3001               	movlw	1
  4693  058D  00A5               	movwf	??_sprintf^(0+128)
  4694  058E  0825               	movf	??_sprintf^(0+128),w
  4695  058F  07BD               	addwf	sprintf@sp^(0+128),f
  4696  0590  2831               	goto	i1l3361
  4697  0591                     i1l3363:	
  4698                           
  4699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  4700  0591  083D               	movf	sprintf@sp^(0+128),w
  4701  0592  0084               	movwf	4
  4702  0593  1783               	bsf	3,7	;select IRP bank2
  4703  0594  0180               	clrf	0
  4704  0595  0008               	return
  4705  0596                     __end_of_sprintf:	
  4706                           
  4707                           	psect	text18
  4708  0CB7                     __ptext18:	
  4709 ;; *************** function _scale *****************
  4710 ;; Defined at:
  4711 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  scl             1    wreg     char 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  scl             1   48[BANK0 ] char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  4   30[BANK0 ] char 
  4718 ;; Registers used:
  4719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4725 ;;      Params:         0       4       0       0       0
  4726 ;;      Locals:         0       5       0       0       0
  4727 ;;      Temps:          0      10       0       0       0
  4728 ;;      Totals:         0      19       0       0       0
  4729 ;;Total ram usage:       19 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    2
  4732 ;; This function calls:
  4733 ;;		___awdiv
  4734 ;;		___awmod
  4735 ;;		___flmul
  4736 ;; This function is called by:
  4737 ;;		_sprintf
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _scale
  4743  0CB7                     _scale:	
  4744                           
  4745                           ;incstack = 0
  4746 ;; using string table level
  4747                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4748                           ;scale@scl stored from wreg
  4749  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  4750  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  4751  0CB9  00D0               	movwf	scale@scl
  4752                           
  4753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  4754  0CBA  1FD0               	btfss	scale@scl,7
  4755  0CBB  2E5F               	goto	i1l2825
  4756                           
  4757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  4758  0CBC  09D0               	comf	scale@scl,f
  4759  0CBD  0AD0               	incf	scale@scl,f
  4760                           
  4761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  4762  0CBE  0850               	movf	scale@scl,w
  4763  0CBF  3A80               	xorlw	128
  4764  0CC0  3E12               	addlw	-238
  4765  0CC1  1C03               	skipc
  4766  0CC2  2DA9               	goto	i1l2815
  4767                           
  4768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4769  0CC3  300A               	movlw	10
  4770  0CC4  00F7               	movwf	___awdiv@divisor
  4771  0CC5  3000               	movlw	0
  4772  0CC6  00F8               	movwf	___awdiv@divisor+1
  4773  0CC7  0850               	movf	scale@scl,w
  4774  0CC8  00F2               	movwf	___awmod@dividend
  4775  0CC9  01F3               	clrf	___awmod@dividend+1
  4776  0CCA  1BF2               	btfsc	___awmod@dividend,7
  4777  0CCB  03F3               	decf	___awmod@dividend+1,f
  4778  0CCC  3064               	movlw	100
  4779  0CCD  00F0               	movwf	___awmod@divisor
  4780  0CCE  3000               	movlw	0
  4781  0CCF  00F1               	movwf	___awmod@divisor+1
  4782  0CD0  160A  158A  25B0  120A  158A  	fcall	___awmod
  4783  0CD5  0871               	movf	?___awmod+1,w
  4784  0CD6  00FA               	movwf	___awdiv@dividend+1
  4785  0CD7  0870               	movf	?___awmod,w
  4786  0CD8  00F9               	movwf	___awdiv@dividend
  4787  0CD9  160A  158A  26E6  120A  158A  	fcall	___awdiv
  4788  0CDE  0877               	movf	?___awdiv,w
  4789  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  4790  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  4791  0CE1  00C2               	movwf	??_scale
  4792  0CE2  3001               	movlw	1
  4793  0CE3                     u444_25:	
  4794  0CE3  1003               	clrc
  4795  0CE4  0DC2               	rlf	??_scale,f
  4796  0CE5  3EFF               	addlw	-1
  4797  0CE6  1D03               	skipz
  4798  0CE7  2CE3               	goto	u444_25
  4799  0CE8  1003               	clrc
  4800  0CE9  0D42               	rlf	??_scale,w
  4801  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4802  0CEB  0084               	movwf	4
  4803  0CEC  160A  118A  200A  120A  158A  	fcall	stringdir
  4804  0CF1  00C3               	movwf	??_scale+1
  4805  0CF2  160A  118A  200A  120A  158A  	fcall	stringdir
  4806  0CF7  00C4               	movwf	??_scale+2
  4807  0CF8  160A  118A  200A  120A  158A  	fcall	stringdir
  4808  0CFD  00C5               	movwf	??_scale+3
  4809  0CFE  160A  118A  200A  120A  158A  	fcall	stringdir
  4810  0D03  00C6               	movwf	??_scale+4
  4811  0D04  0846               	movf	??_scale+4,w
  4812  0D05  00A7               	movwf	___flmul@b+3
  4813  0D06  0845               	movf	??_scale+3,w
  4814  0D07  00A6               	movwf	___flmul@b+2
  4815  0D08  0844               	movf	??_scale+2,w
  4816  0D09  00A5               	movwf	___flmul@b+1
  4817  0D0A  0843               	movf	??_scale+1,w
  4818  0D0B  00A4               	movwf	___flmul@b
  4819  0D0C  3064               	movlw	100
  4820  0D0D  00F7               	movwf	___awdiv@divisor
  4821  0D0E  3000               	movlw	0
  4822  0D0F  00F8               	movwf	___awdiv@divisor+1
  4823  0D10  0850               	movf	scale@scl,w
  4824  0D11  00F9               	movwf	___awdiv@dividend
  4825  0D12  01FA               	clrf	___awdiv@dividend+1
  4826  0D13  1BF9               	btfsc	___awdiv@dividend,7
  4827  0D14  03FA               	decf	___awdiv@dividend+1,f
  4828  0D15  160A  158A  26E6  120A  158A  	fcall	___awdiv
  4829  0D1A  0877               	movf	?___awdiv,w
  4830  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  4831  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  4832  0D1D  00C7               	movwf	??_scale+5
  4833  0D1E  3001               	movlw	1
  4834  0D1F                     u445_25:	
  4835  0D1F  1003               	clrc
  4836  0D20  0DC7               	rlf	??_scale+5,f
  4837  0D21  3EFF               	addlw	-1
  4838  0D22  1D03               	skipz
  4839  0D23  2D1F               	goto	u445_25
  4840  0D24  1003               	clrc
  4841  0D25  0D47               	rlf	??_scale+5,w
  4842  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4843  0D27  0084               	movwf	4
  4844  0D28  160A  118A  200A  120A  158A  	fcall	stringdir
  4845  0D2D  00C8               	movwf	??_scale+6
  4846  0D2E  160A  118A  200A  120A  158A  	fcall	stringdir
  4847  0D33  00C9               	movwf	??_scale+7
  4848  0D34  160A  118A  200A  120A  158A  	fcall	stringdir
  4849  0D39  00CA               	movwf	??_scale+8
  4850  0D3A  160A  118A  200A  120A  158A  	fcall	stringdir
  4851  0D3F  00CB               	movwf	??_scale+9
  4852  0D40  084B               	movf	??_scale+9,w
  4853  0D41  00AB               	movwf	___flmul@a+3
  4854  0D42  084A               	movf	??_scale+8,w
  4855  0D43  00AA               	movwf	___flmul@a+2
  4856  0D44  0849               	movf	??_scale+7,w
  4857  0D45  00A9               	movwf	___flmul@a+1
  4858  0D46  0848               	movf	??_scale+6,w
  4859  0D47  00A8               	movwf	___flmul@a
  4860  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  4861  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  4862  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  4863  0D4F  0827               	movf	?___flmul+3,w
  4864  0D50  00CF               	movwf	_scale$926+3
  4865  0D51  0826               	movf	?___flmul+2,w
  4866  0D52  00CE               	movwf	_scale$926+2
  4867  0D53  0825               	movf	?___flmul+1,w
  4868  0D54  00CD               	movwf	_scale$926+1
  4869  0D55  0824               	movf	?___flmul,w
  4870  0D56  00CC               	movwf	_scale$926
  4871                           
  4872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4873  0D57  300A               	movlw	10
  4874  0D58  00F0               	movwf	___awmod@divisor
  4875  0D59  3000               	movlw	0
  4876  0D5A  00F1               	movwf	___awmod@divisor+1
  4877  0D5B  0850               	movf	scale@scl,w
  4878  0D5C  00F2               	movwf	___awmod@dividend
  4879  0D5D  01F3               	clrf	___awmod@dividend+1
  4880  0D5E  1BF2               	btfsc	___awmod@dividend,7
  4881  0D5F  03F3               	decf	___awmod@dividend+1,f
  4882  0D60  160A  158A  25B0  120A  158A  	fcall	___awmod
  4883  0D65  0870               	movf	?___awmod,w
  4884  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  4885  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  4886  0D68  00C2               	movwf	??_scale
  4887  0D69  3001               	movlw	1
  4888  0D6A                     u446_25:	
  4889  0D6A  1003               	clrc
  4890  0D6B  0DC2               	rlf	??_scale,f
  4891  0D6C  3EFF               	addlw	-1
  4892  0D6D  1D03               	skipz
  4893  0D6E  2D6A               	goto	u446_25
  4894  0D6F  1003               	clrc
  4895  0D70  0D42               	rlf	??_scale,w
  4896  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4897  0D72  0084               	movwf	4
  4898  0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  4899  0D78  00C3               	movwf	??_scale+1
  4900  0D79  160A  118A  200A  120A  158A  	fcall	stringdir
  4901  0D7E  00C4               	movwf	??_scale+2
  4902  0D7F  160A  118A  200A  120A  158A  	fcall	stringdir
  4903  0D84  00C5               	movwf	??_scale+3
  4904  0D85  160A  118A  200A  120A  158A  	fcall	stringdir
  4905  0D8A  00C6               	movwf	??_scale+4
  4906  0D8B  0846               	movf	??_scale+4,w
  4907  0D8C  00A7               	movwf	___flmul@b+3
  4908  0D8D  0845               	movf	??_scale+3,w
  4909  0D8E  00A6               	movwf	___flmul@b+2
  4910  0D8F  0844               	movf	??_scale+2,w
  4911  0D90  00A5               	movwf	___flmul@b+1
  4912  0D91  0843               	movf	??_scale+1,w
  4913  0D92  00A4               	movwf	___flmul@b
  4914  0D93  084F               	movf	_scale$926+3,w
  4915  0D94  00AB               	movwf	___flmul@a+3
  4916  0D95  084E               	movf	_scale$926+2,w
  4917  0D96  00AA               	movwf	___flmul@a+2
  4918  0D97  084D               	movf	_scale$926+1,w
  4919  0D98  00A9               	movwf	___flmul@a+1
  4920  0D99  084C               	movf	_scale$926,w
  4921  0D9A  00A8               	movwf	___flmul@a
  4922  0D9B  120A  158A  21A2   	fcall	___flmul
  4923  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  4924  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  4925  0DA0  0827               	movf	?___flmul+3,w
  4926  0DA1  00C1               	movwf	?_scale+3
  4927  0DA2  0826               	movf	?___flmul+2,w
  4928  0DA3  00C0               	movwf	?_scale+2
  4929  0DA4  0825               	movf	?___flmul+1,w
  4930  0DA5  00BF               	movwf	?_scale+1
  4931  0DA6  0824               	movf	?___flmul,w
  4932  0DA7  00BE               	movwf	?_scale
  4933  0DA8  0008               	return
  4934  0DA9                     i1l2815:	
  4935  0DA9  0850               	movf	scale@scl,w
  4936  0DAA  3A80               	xorlw	128
  4937  0DAB  3E75               	addlw	-139
  4938  0DAC  1C03               	skipc
  4939  0DAD  2E34               	goto	i1l2821
  4940                           
  4941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4942  0DAE  300A               	movlw	10
  4943  0DAF  00F0               	movwf	___awmod@divisor
  4944  0DB0  3000               	movlw	0
  4945  0DB1  00F1               	movwf	___awmod@divisor+1
  4946  0DB2  0850               	movf	scale@scl,w
  4947  0DB3  00F2               	movwf	___awmod@dividend
  4948  0DB4  01F3               	clrf	___awmod@dividend+1
  4949  0DB5  1BF2               	btfsc	___awmod@dividend,7
  4950  0DB6  03F3               	decf	___awmod@dividend+1,f
  4951  0DB7  160A  158A  25B0  120A  158A  	fcall	___awmod
  4952  0DBC  0870               	movf	?___awmod,w
  4953  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  4954  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  4955  0DBF  00C2               	movwf	??_scale
  4956  0DC0  3001               	movlw	1
  4957  0DC1                     u448_25:	
  4958  0DC1  1003               	clrc
  4959  0DC2  0DC2               	rlf	??_scale,f
  4960  0DC3  3EFF               	addlw	-1
  4961  0DC4  1D03               	skipz
  4962  0DC5  2DC1               	goto	u448_25
  4963  0DC6  1003               	clrc
  4964  0DC7  0D42               	rlf	??_scale,w
  4965  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4966  0DC9  0084               	movwf	4
  4967  0DCA  160A  118A  200A  120A  158A  	fcall	stringdir
  4968  0DCF  00C3               	movwf	??_scale+1
  4969  0DD0  160A  118A  200A  120A  158A  	fcall	stringdir
  4970  0DD5  00C4               	movwf	??_scale+2
  4971  0DD6  160A  118A  200A  120A  158A  	fcall	stringdir
  4972  0DDB  00C5               	movwf	??_scale+3
  4973  0DDC  160A  118A  200A  120A  158A  	fcall	stringdir
  4974  0DE1  00C6               	movwf	??_scale+4
  4975  0DE2  0846               	movf	??_scale+4,w
  4976  0DE3  00A7               	movwf	___flmul@b+3
  4977  0DE4  0845               	movf	??_scale+3,w
  4978  0DE5  00A6               	movwf	___flmul@b+2
  4979  0DE6  0844               	movf	??_scale+2,w
  4980  0DE7  00A5               	movwf	___flmul@b+1
  4981  0DE8  0843               	movf	??_scale+1,w
  4982  0DE9  00A4               	movwf	___flmul@b
  4983  0DEA  300A               	movlw	10
  4984  0DEB  00F7               	movwf	___awdiv@divisor
  4985  0DEC  3000               	movlw	0
  4986  0DED  00F8               	movwf	___awdiv@divisor+1
  4987  0DEE  0850               	movf	scale@scl,w
  4988  0DEF  00F9               	movwf	___awdiv@dividend
  4989  0DF0  01FA               	clrf	___awdiv@dividend+1
  4990  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  4991  0DF2  03FA               	decf	___awdiv@dividend+1,f
  4992  0DF3  160A  158A  26E6  120A  158A  	fcall	___awdiv
  4993  0DF8  0877               	movf	?___awdiv,w
  4994  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  4995  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  4996  0DFB  00C7               	movwf	??_scale+5
  4997  0DFC  3001               	movlw	1
  4998  0DFD                     u449_25:	
  4999  0DFD  1003               	clrc
  5000  0DFE  0DC7               	rlf	??_scale+5,f
  5001  0DFF  3EFF               	addlw	-1
  5002  0E00  1D03               	skipz
  5003  0E01  2DFD               	goto	u449_25
  5004  0E02  1003               	clrc
  5005  0E03  0D47               	rlf	??_scale+5,w
  5006  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5007  0E05  0084               	movwf	4
  5008  0E06  160A  118A  200A  120A  158A  	fcall	stringdir
  5009  0E0B  00C8               	movwf	??_scale+6
  5010  0E0C  160A  118A  200A  120A  158A  	fcall	stringdir
  5011  0E11  00C9               	movwf	??_scale+7
  5012  0E12  160A  118A  200A  120A  158A  	fcall	stringdir
  5013  0E17  00CA               	movwf	??_scale+8
  5014  0E18  160A  118A  200A  120A  158A  	fcall	stringdir
  5015  0E1D  00CB               	movwf	??_scale+9
  5016  0E1E  084B               	movf	??_scale+9,w
  5017  0E1F  00AB               	movwf	___flmul@a+3
  5018  0E20  084A               	movf	??_scale+8,w
  5019  0E21  00AA               	movwf	___flmul@a+2
  5020  0E22  0849               	movf	??_scale+7,w
  5021  0E23  00A9               	movwf	___flmul@a+1
  5022  0E24  0848               	movf	??_scale+6,w
  5023  0E25  00A8               	movwf	___flmul@a
  5024  0E26  120A  158A  21A2   	fcall	___flmul
  5025  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  5026  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  5027  0E2B  0827               	movf	?___flmul+3,w
  5028  0E2C  00C1               	movwf	?_scale+3
  5029  0E2D  0826               	movf	?___flmul+2,w
  5030  0E2E  00C0               	movwf	?_scale+2
  5031  0E2F  0825               	movf	?___flmul+1,w
  5032  0E30  00BF               	movwf	?_scale+1
  5033  0E31  0824               	movf	?___flmul,w
  5034  0E32  00BE               	movwf	?_scale
  5035  0E33  0008               	return
  5036  0E34                     i1l2821:	
  5037                           
  5038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  5039  0E34  0850               	movf	scale@scl,w
  5040  0E35  00C2               	movwf	??_scale
  5041  0E36  3001               	movlw	1
  5042  0E37                     u450_25:	
  5043  0E37  1003               	clrc
  5044  0E38  0DC2               	rlf	??_scale,f
  5045  0E39  3EFF               	addlw	-1
  5046  0E3A  1D03               	skipz
  5047  0E3B  2E37               	goto	u450_25
  5048  0E3C  1003               	clrc
  5049  0E3D  0D42               	rlf	??_scale,w
  5050  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5051  0E3F  0084               	movwf	4
  5052  0E40  160A  118A  200A  120A  158A  	fcall	stringdir
  5053  0E45  00C3               	movwf	??_scale+1
  5054  0E46  160A  118A  200A  120A  158A  	fcall	stringdir
  5055  0E4B  00C4               	movwf	??_scale+2
  5056  0E4C  160A  118A  200A  120A  158A  	fcall	stringdir
  5057  0E51  00C5               	movwf	??_scale+3
  5058  0E52  160A  118A  200A   	fcall	stringdir
  5059  0E55  00C6               	movwf	??_scale+4
  5060  0E56  0846               	movf	??_scale+4,w
  5061  0E57  00C1               	movwf	?_scale+3
  5062  0E58  0845               	movf	??_scale+3,w
  5063  0E59  00C0               	movwf	?_scale+2
  5064  0E5A  0844               	movf	??_scale+2,w
  5065  0E5B  00BF               	movwf	?_scale+1
  5066  0E5C  0843               	movf	??_scale+1,w
  5067  0E5D  00BE               	movwf	?_scale
  5068  0E5E  0008               	return
  5069  0E5F                     i1l2825:	
  5070                           
  5071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  5072  0E5F  0850               	movf	scale@scl,w
  5073  0E60  3A80               	xorlw	128
  5074  0E61  3E12               	addlw	-238
  5075  0E62  1C03               	skipc
  5076  0E63  2F4A               	goto	i1l2833
  5077                           
  5078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  5079  0E64  300A               	movlw	10
  5080  0E65  00F7               	movwf	___awdiv@divisor
  5081  0E66  3000               	movlw	0
  5082  0E67  00F8               	movwf	___awdiv@divisor+1
  5083  0E68  0850               	movf	scale@scl,w
  5084  0E69  00F2               	movwf	___awmod@dividend
  5085  0E6A  01F3               	clrf	___awmod@dividend+1
  5086  0E6B  1BF2               	btfsc	___awmod@dividend,7
  5087  0E6C  03F3               	decf	___awmod@dividend+1,f
  5088  0E6D  3064               	movlw	100
  5089  0E6E  00F0               	movwf	___awmod@divisor
  5090  0E6F  3000               	movlw	0
  5091  0E70  00F1               	movwf	___awmod@divisor+1
  5092  0E71  160A  158A  25B0  120A  158A  	fcall	___awmod
  5093  0E76  0871               	movf	?___awmod+1,w
  5094  0E77  00FA               	movwf	___awdiv@dividend+1
  5095  0E78  0870               	movf	?___awmod,w
  5096  0E79  00F9               	movwf	___awdiv@dividend
  5097  0E7A  160A  158A  26E6  120A  158A  	fcall	___awdiv
  5098  0E7F  0877               	movf	?___awdiv,w
  5099  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0E82  00C2               	movwf	??_scale
  5102  0E83  3001               	movlw	1
  5103  0E84                     u452_25:	
  5104  0E84  1003               	clrc
  5105  0E85  0DC2               	rlf	??_scale,f
  5106  0E86  3EFF               	addlw	-1
  5107  0E87  1D03               	skipz
  5108  0E88  2E84               	goto	u452_25
  5109  0E89  1003               	clrc
  5110  0E8A  0D42               	rlf	??_scale,w
  5111  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5112  0E8C  0084               	movwf	4
  5113  0E8D  160A  118A  200A  120A  158A  	fcall	stringdir
  5114  0E92  00C3               	movwf	??_scale+1
  5115  0E93  160A  118A  200A  120A  158A  	fcall	stringdir
  5116  0E98  00C4               	movwf	??_scale+2
  5117  0E99  160A  118A  200A  120A  158A  	fcall	stringdir
  5118  0E9E  00C5               	movwf	??_scale+3
  5119  0E9F  160A  118A  200A  120A  158A  	fcall	stringdir
  5120  0EA4  00C6               	movwf	??_scale+4
  5121  0EA5  0846               	movf	??_scale+4,w
  5122  0EA6  00A7               	movwf	___flmul@b+3
  5123  0EA7  0845               	movf	??_scale+3,w
  5124  0EA8  00A6               	movwf	___flmul@b+2
  5125  0EA9  0844               	movf	??_scale+2,w
  5126  0EAA  00A5               	movwf	___flmul@b+1
  5127  0EAB  0843               	movf	??_scale+1,w
  5128  0EAC  00A4               	movwf	___flmul@b
  5129  0EAD  3064               	movlw	100
  5130  0EAE  00F7               	movwf	___awdiv@divisor
  5131  0EAF  3000               	movlw	0
  5132  0EB0  00F8               	movwf	___awdiv@divisor+1
  5133  0EB1  0850               	movf	scale@scl,w
  5134  0EB2  00F9               	movwf	___awdiv@dividend
  5135  0EB3  01FA               	clrf	___awdiv@dividend+1
  5136  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  5137  0EB5  03FA               	decf	___awdiv@dividend+1,f
  5138  0EB6  160A  158A  26E6  120A  158A  	fcall	___awdiv
  5139  0EBB  0877               	movf	?___awdiv,w
  5140  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  5141  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  5142  0EBE  00C7               	movwf	??_scale+5
  5143  0EBF  3001               	movlw	1
  5144  0EC0                     u453_25:	
  5145  0EC0  1003               	clrc
  5146  0EC1  0DC7               	rlf	??_scale+5,f
  5147  0EC2  3EFF               	addlw	-1
  5148  0EC3  1D03               	skipz
  5149  0EC4  2EC0               	goto	u453_25
  5150  0EC5  1003               	clrc
  5151  0EC6  0D47               	rlf	??_scale+5,w
  5152  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  5153  0EC8  0084               	movwf	4
  5154  0EC9  160A  118A  200A  120A  158A  	fcall	stringdir
  5155  0ECE  00C8               	movwf	??_scale+6
  5156  0ECF  160A  118A  200A  120A  158A  	fcall	stringdir
  5157  0ED4  00C9               	movwf	??_scale+7
  5158  0ED5  160A  118A  200A  120A  158A  	fcall	stringdir
  5159  0EDA  00CA               	movwf	??_scale+8
  5160  0EDB  160A  118A  200A  120A  158A  	fcall	stringdir
  5161  0EE0  00CB               	movwf	??_scale+9
  5162  0EE1  084B               	movf	??_scale+9,w
  5163  0EE2  00AB               	movwf	___flmul@a+3
  5164  0EE3  084A               	movf	??_scale+8,w
  5165  0EE4  00AA               	movwf	___flmul@a+2
  5166  0EE5  0849               	movf	??_scale+7,w
  5167  0EE6  00A9               	movwf	___flmul@a+1
  5168  0EE7  0848               	movf	??_scale+6,w
  5169  0EE8  00A8               	movwf	___flmul@a
  5170  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  5171  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  5172  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  5173  0EF0  0827               	movf	?___flmul+3,w
  5174  0EF1  00CF               	movwf	_scale$926+3
  5175  0EF2  0826               	movf	?___flmul+2,w
  5176  0EF3  00CE               	movwf	_scale$926+2
  5177  0EF4  0825               	movf	?___flmul+1,w
  5178  0EF5  00CD               	movwf	_scale$926+1
  5179  0EF6  0824               	movf	?___flmul,w
  5180  0EF7  00CC               	movwf	_scale$926
  5181                           
  5182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  5183  0EF8  300A               	movlw	10
  5184  0EF9  00F0               	movwf	___awmod@divisor
  5185  0EFA  3000               	movlw	0
  5186  0EFB  00F1               	movwf	___awmod@divisor+1
  5187  0EFC  0850               	movf	scale@scl,w
  5188  0EFD  00F2               	movwf	___awmod@dividend
  5189  0EFE  01F3               	clrf	___awmod@dividend+1
  5190  0EFF  1BF2               	btfsc	___awmod@dividend,7
  5191  0F00  03F3               	decf	___awmod@dividend+1,f
  5192  0F01  160A  158A  25B0  120A  158A  	fcall	___awmod
  5193  0F06  0870               	movf	?___awmod,w
  5194  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  5195  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  5196  0F09  00C2               	movwf	??_scale
  5197  0F0A  3001               	movlw	1
  5198  0F0B                     u454_25:	
  5199  0F0B  1003               	clrc
  5200  0F0C  0DC2               	rlf	??_scale,f
  5201  0F0D  3EFF               	addlw	-1
  5202  0F0E  1D03               	skipz
  5203  0F0F  2F0B               	goto	u454_25
  5204  0F10  1003               	clrc
  5205  0F11  0D42               	rlf	??_scale,w
  5206  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5207  0F13  0084               	movwf	4
  5208  0F14  160A  118A  200A  120A  158A  	fcall	stringdir
  5209  0F19  00C3               	movwf	??_scale+1
  5210  0F1A  160A  118A  200A  120A  158A  	fcall	stringdir
  5211  0F1F  00C4               	movwf	??_scale+2
  5212  0F20  160A  118A  200A  120A  158A  	fcall	stringdir
  5213  0F25  00C5               	movwf	??_scale+3
  5214  0F26  160A  118A  200A  120A  158A  	fcall	stringdir
  5215  0F2B  00C6               	movwf	??_scale+4
  5216  0F2C  0846               	movf	??_scale+4,w
  5217  0F2D  00A7               	movwf	___flmul@b+3
  5218  0F2E  0845               	movf	??_scale+3,w
  5219  0F2F  00A6               	movwf	___flmul@b+2
  5220  0F30  0844               	movf	??_scale+2,w
  5221  0F31  00A5               	movwf	___flmul@b+1
  5222  0F32  0843               	movf	??_scale+1,w
  5223  0F33  00A4               	movwf	___flmul@b
  5224  0F34  084F               	movf	_scale$926+3,w
  5225  0F35  00AB               	movwf	___flmul@a+3
  5226  0F36  084E               	movf	_scale$926+2,w
  5227  0F37  00AA               	movwf	___flmul@a+2
  5228  0F38  084D               	movf	_scale$926+1,w
  5229  0F39  00A9               	movwf	___flmul@a+1
  5230  0F3A  084C               	movf	_scale$926,w
  5231  0F3B  00A8               	movwf	___flmul@a
  5232  0F3C  120A  158A  21A2   	fcall	___flmul
  5233  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  5234  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  5235  0F41  0827               	movf	?___flmul+3,w
  5236  0F42  00C1               	movwf	?_scale+3
  5237  0F43  0826               	movf	?___flmul+2,w
  5238  0F44  00C0               	movwf	?_scale+2
  5239  0F45  0825               	movf	?___flmul+1,w
  5240  0F46  00BF               	movwf	?_scale+1
  5241  0F47  0824               	movf	?___flmul,w
  5242  0F48  00BE               	movwf	?_scale
  5243  0F49  0008               	return
  5244  0F4A                     i1l2833:	
  5245  0F4A  0850               	movf	scale@scl,w
  5246  0F4B  3A80               	xorlw	128
  5247  0F4C  3E75               	addlw	-139
  5248  0F4D  1C03               	skipc
  5249  0F4E  2FD5               	goto	i1l2839
  5250                           
  5251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  5252  0F4F  300A               	movlw	10
  5253  0F50  00F0               	movwf	___awmod@divisor
  5254  0F51  3000               	movlw	0
  5255  0F52  00F1               	movwf	___awmod@divisor+1
  5256  0F53  0850               	movf	scale@scl,w
  5257  0F54  00F2               	movwf	___awmod@dividend
  5258  0F55  01F3               	clrf	___awmod@dividend+1
  5259  0F56  1BF2               	btfsc	___awmod@dividend,7
  5260  0F57  03F3               	decf	___awmod@dividend+1,f
  5261  0F58  160A  158A  25B0  120A  158A  	fcall	___awmod
  5262  0F5D  0870               	movf	?___awmod,w
  5263  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  5264  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  5265  0F60  00C2               	movwf	??_scale
  5266  0F61  3001               	movlw	1
  5267  0F62                     u456_25:	
  5268  0F62  1003               	clrc
  5269  0F63  0DC2               	rlf	??_scale,f
  5270  0F64  3EFF               	addlw	-1
  5271  0F65  1D03               	skipz
  5272  0F66  2F62               	goto	u456_25
  5273  0F67  1003               	clrc
  5274  0F68  0D42               	rlf	??_scale,w
  5275  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5276  0F6A  0084               	movwf	4
  5277  0F6B  160A  118A  200A  120A  158A  	fcall	stringdir
  5278  0F70  00C3               	movwf	??_scale+1
  5279  0F71  160A  118A  200A  120A  158A  	fcall	stringdir
  5280  0F76  00C4               	movwf	??_scale+2
  5281  0F77  160A  118A  200A  120A  158A  	fcall	stringdir
  5282  0F7C  00C5               	movwf	??_scale+3
  5283  0F7D  160A  118A  200A  120A  158A  	fcall	stringdir
  5284  0F82  00C6               	movwf	??_scale+4
  5285  0F83  0846               	movf	??_scale+4,w
  5286  0F84  00A7               	movwf	___flmul@b+3
  5287  0F85  0845               	movf	??_scale+3,w
  5288  0F86  00A6               	movwf	___flmul@b+2
  5289  0F87  0844               	movf	??_scale+2,w
  5290  0F88  00A5               	movwf	___flmul@b+1
  5291  0F89  0843               	movf	??_scale+1,w
  5292  0F8A  00A4               	movwf	___flmul@b
  5293  0F8B  300A               	movlw	10
  5294  0F8C  00F7               	movwf	___awdiv@divisor
  5295  0F8D  3000               	movlw	0
  5296  0F8E  00F8               	movwf	___awdiv@divisor+1
  5297  0F8F  0850               	movf	scale@scl,w
  5298  0F90  00F9               	movwf	___awdiv@dividend
  5299  0F91  01FA               	clrf	___awdiv@dividend+1
  5300  0F92  1BF9               	btfsc	___awdiv@dividend,7
  5301  0F93  03FA               	decf	___awdiv@dividend+1,f
  5302  0F94  160A  158A  26E6  120A  158A  	fcall	___awdiv
  5303  0F99  0877               	movf	?___awdiv,w
  5304  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  5305  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  5306  0F9C  00C7               	movwf	??_scale+5
  5307  0F9D  3001               	movlw	1
  5308  0F9E                     u457_25:	
  5309  0F9E  1003               	clrc
  5310  0F9F  0DC7               	rlf	??_scale+5,f
  5311  0FA0  3EFF               	addlw	-1
  5312  0FA1  1D03               	skipz
  5313  0FA2  2F9E               	goto	u457_25
  5314  0FA3  1003               	clrc
  5315  0FA4  0D47               	rlf	??_scale+5,w
  5316  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5317  0FA6  0084               	movwf	4
  5318  0FA7  160A  118A  200A  120A  158A  	fcall	stringdir
  5319  0FAC  00C8               	movwf	??_scale+6
  5320  0FAD  160A  118A  200A  120A  158A  	fcall	stringdir
  5321  0FB2  00C9               	movwf	??_scale+7
  5322  0FB3  160A  118A  200A  120A  158A  	fcall	stringdir
  5323  0FB8  00CA               	movwf	??_scale+8
  5324  0FB9  160A  118A  200A  120A  158A  	fcall	stringdir
  5325  0FBE  00CB               	movwf	??_scale+9
  5326  0FBF  084B               	movf	??_scale+9,w
  5327  0FC0  00AB               	movwf	___flmul@a+3
  5328  0FC1  084A               	movf	??_scale+8,w
  5329  0FC2  00AA               	movwf	___flmul@a+2
  5330  0FC3  0849               	movf	??_scale+7,w
  5331  0FC4  00A9               	movwf	___flmul@a+1
  5332  0FC5  0848               	movf	??_scale+6,w
  5333  0FC6  00A8               	movwf	___flmul@a
  5334  0FC7  120A  158A  21A2   	fcall	___flmul
  5335  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  5336  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  5337  0FCC  0827               	movf	?___flmul+3,w
  5338  0FCD  00C1               	movwf	?_scale+3
  5339  0FCE  0826               	movf	?___flmul+2,w
  5340  0FCF  00C0               	movwf	?_scale+2
  5341  0FD0  0825               	movf	?___flmul+1,w
  5342  0FD1  00BF               	movwf	?_scale+1
  5343  0FD2  0824               	movf	?___flmul,w
  5344  0FD3  00BE               	movwf	?_scale
  5345  0FD4  0008               	return
  5346  0FD5                     i1l2839:	
  5347                           
  5348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  5349  0FD5  0850               	movf	scale@scl,w
  5350  0FD6  00C2               	movwf	??_scale
  5351  0FD7  3001               	movlw	1
  5352  0FD8                     u458_25:	
  5353  0FD8  1003               	clrc
  5354  0FD9  0DC2               	rlf	??_scale,f
  5355  0FDA  3EFF               	addlw	-1
  5356  0FDB  1D03               	skipz
  5357  0FDC  2FD8               	goto	u458_25
  5358  0FDD  1003               	clrc
  5359  0FDE  0D42               	rlf	??_scale,w
  5360  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5361  0FE0  0084               	movwf	4
  5362  0FE1  160A  118A  200A  120A  158A  	fcall	stringdir
  5363  0FE6  00C3               	movwf	??_scale+1
  5364  0FE7  160A  118A  200A  120A  158A  	fcall	stringdir
  5365  0FEC  00C4               	movwf	??_scale+2
  5366  0FED  160A  118A  200A  120A  158A  	fcall	stringdir
  5367  0FF2  00C5               	movwf	??_scale+3
  5368  0FF3  160A  118A  200A   	fcall	stringdir
  5369  0FF6  00C6               	movwf	??_scale+4
  5370  0FF7  0846               	movf	??_scale+4,w
  5371  0FF8  00C1               	movwf	?_scale+3
  5372  0FF9  0845               	movf	??_scale+3,w
  5373  0FFA  00C0               	movwf	?_scale+2
  5374  0FFB  0844               	movf	??_scale+2,w
  5375  0FFC  00BF               	movwf	?_scale+1
  5376  0FFD  0843               	movf	??_scale+1,w
  5377  0FFE  00BE               	movwf	?_scale
  5378  0FFF  0008               	return
  5379  1000                     __end_of_scale:	
  5380                           
  5381                           	psect	text19
  5382  1DB0                     __ptext19:	
  5383 ;; *************** function ___awmod *****************
  5384 ;; Defined at:
  5385 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  divisor         2    0[COMMON] int 
  5388 ;;  dividend        2    2[COMMON] int 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  sign            1    6[COMMON] unsigned char 
  5391 ;;  counter         1    5[COMMON] unsigned char 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  2    0[COMMON] int 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5401 ;;      Params:         4       0       0       0       0
  5402 ;;      Locals:         2       0       0       0       0
  5403 ;;      Temps:          1       0       0       0       0
  5404 ;;      Totals:         7       0       0       0       0
  5405 ;;Total ram usage:        7 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_scale
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           
  5415                           ;psect for function ___awmod
  5416  1DB0                     ___awmod:	
  5417                           
  5418                           ;incstack = 0
  5419                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5420  1DB0  01F6               	clrf	___awmod@sign
  5421  1DB1  1FF3               	btfss	___awmod@dividend+1,7
  5422  1DB2  2DBA               	goto	i1l2333
  5423  1DB3  09F2               	comf	___awmod@dividend,f
  5424  1DB4  09F3               	comf	___awmod@dividend+1,f
  5425  1DB5  0AF2               	incf	___awmod@dividend,f
  5426  1DB6  1903               	skipnz
  5427  1DB7  0AF3               	incf	___awmod@dividend+1,f
  5428  1DB8  01F6               	clrf	___awmod@sign
  5429  1DB9  0AF6               	incf	___awmod@sign,f
  5430  1DBA                     i1l2333:	
  5431  1DBA  1FF1               	btfss	___awmod@divisor+1,7
  5432  1DBB  2DC1               	goto	i1l2337
  5433  1DBC  09F0               	comf	___awmod@divisor,f
  5434  1DBD  09F1               	comf	___awmod@divisor+1,f
  5435  1DBE  0AF0               	incf	___awmod@divisor,f
  5436  1DBF  1903               	skipnz
  5437  1DC0  0AF1               	incf	___awmod@divisor+1,f
  5438  1DC1                     i1l2337:	
  5439  1DC1  0870               	movf	___awmod@divisor,w
  5440  1DC2  0471               	iorwf	___awmod@divisor+1,w
  5441  1DC3  1903               	btfsc	3,2
  5442  1DC4  2DEE               	goto	i1l2355
  5443  1DC5  01F5               	clrf	___awmod@counter
  5444  1DC6  0AF5               	incf	___awmod@counter,f
  5445  1DC7                     i1l2345:	
  5446  1DC7  1BF1               	btfsc	___awmod@divisor+1,7
  5447  1DC8  2DD5               	goto	i1l2347
  5448  1DC9  3001               	movlw	1
  5449  1DCA                     u327_25:	
  5450  1DCA  1003               	clrc
  5451  1DCB  0DF0               	rlf	___awmod@divisor,f
  5452  1DCC  0DF1               	rlf	___awmod@divisor+1,f
  5453  1DCD  3EFF               	addlw	-1
  5454  1DCE  1D03               	skipz
  5455  1DCF  2DCA               	goto	u327_25
  5456  1DD0  3001               	movlw	1
  5457  1DD1  00F4               	movwf	??___awmod
  5458  1DD2  0874               	movf	??___awmod,w
  5459  1DD3  07F5               	addwf	___awmod@counter,f
  5460  1DD4  2DC7               	goto	i1l2345
  5461  1DD5                     i1l2347:	
  5462  1DD5  0871               	movf	___awmod@divisor+1,w
  5463  1DD6  0273               	subwf	___awmod@dividend+1,w
  5464  1DD7  1D03               	skipz
  5465  1DD8  2DDB               	goto	u329_25
  5466  1DD9  0870               	movf	___awmod@divisor,w
  5467  1DDA  0272               	subwf	___awmod@dividend,w
  5468  1DDB                     u329_25:	
  5469  1DDB  1C03               	skipc
  5470  1DDC  2DE3               	goto	i1l2351
  5471  1DDD  0870               	movf	___awmod@divisor,w
  5472  1DDE  02F2               	subwf	___awmod@dividend,f
  5473  1DDF  0871               	movf	___awmod@divisor+1,w
  5474  1DE0  1C03               	skipc
  5475  1DE1  03F3               	decf	___awmod@dividend+1,f
  5476  1DE2  02F3               	subwf	___awmod@dividend+1,f
  5477  1DE3                     i1l2351:	
  5478  1DE3  3001               	movlw	1
  5479  1DE4                     u330_25:	
  5480  1DE4  1003               	clrc
  5481  1DE5  0CF1               	rrf	___awmod@divisor+1,f
  5482  1DE6  0CF0               	rrf	___awmod@divisor,f
  5483  1DE7  3EFF               	addlw	-1
  5484  1DE8  1D03               	skipz
  5485  1DE9  2DE4               	goto	u330_25
  5486  1DEA  3001               	movlw	1
  5487  1DEB  02F5               	subwf	___awmod@counter,f
  5488  1DEC  1D03               	btfss	3,2
  5489  1DED  2DD5               	goto	i1l2347
  5490  1DEE                     i1l2355:	
  5491  1DEE  0876               	movf	___awmod@sign,w
  5492  1DEF  1903               	btfsc	3,2
  5493  1DF0  2DF6               	goto	i1l2359
  5494  1DF1  09F2               	comf	___awmod@dividend,f
  5495  1DF2  09F3               	comf	___awmod@dividend+1,f
  5496  1DF3  0AF2               	incf	___awmod@dividend,f
  5497  1DF4  1903               	skipnz
  5498  1DF5  0AF3               	incf	___awmod@dividend+1,f
  5499  1DF6                     i1l2359:	
  5500  1DF6  0873               	movf	___awmod@dividend+1,w
  5501  1DF7  00F1               	movwf	?___awmod+1
  5502  1DF8  0872               	movf	___awmod@dividend,w
  5503  1DF9  00F0               	movwf	?___awmod
  5504  1DFA  0008               	return
  5505  1DFB                     __end_of___awmod:	
  5506                           
  5507                           	psect	text20
  5508  1EE6                     __ptext20:	
  5509 ;; *************** function ___awdiv *****************
  5510 ;; Defined at:
  5511 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  divisor         2    7[COMMON] int 
  5514 ;;  dividend        2    9[COMMON] int 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  quotient        2    2[BANK0 ] int 
  5517 ;;  sign            1    1[BANK0 ] unsigned char 
  5518 ;;  counter         1    0[BANK0 ] unsigned char 
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  2    7[COMMON] int 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2, status,0
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5528 ;;      Params:         4       0       0       0       0
  5529 ;;      Locals:         0       4       0       0       0
  5530 ;;      Temps:          1       0       0       0       0
  5531 ;;      Totals:         5       4       0       0       0
  5532 ;;Total ram usage:        9 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_scale
  5538 ;;		_sprintf
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           
  5543                           ;psect for function ___awdiv
  5544  1EE6                     ___awdiv:	
  5545                           
  5546                           ;incstack = 0
  5547                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5548  1EE6  1283               	bcf	3,5	;RP0=0, select bank0
  5549  1EE7  1303               	bcf	3,6	;RP1=0, select bank0
  5550  1EE8  01A1               	clrf	___awdiv@sign
  5551  1EE9  1FF8               	btfss	___awdiv@divisor+1,7
  5552  1EEA  2EF2               	goto	i1l2289
  5553  1EEB  09F7               	comf	___awdiv@divisor,f
  5554  1EEC  09F8               	comf	___awdiv@divisor+1,f
  5555  1EED  0AF7               	incf	___awdiv@divisor,f
  5556  1EEE  1903               	skipnz
  5557  1EEF  0AF8               	incf	___awdiv@divisor+1,f
  5558  1EF0  01A1               	clrf	___awdiv@sign
  5559  1EF1  0AA1               	incf	___awdiv@sign,f
  5560  1EF2                     i1l2289:	
  5561  1EF2  1FFA               	btfss	___awdiv@dividend+1,7
  5562  1EF3  2EFD               	goto	i1l2295
  5563  1EF4  09F9               	comf	___awdiv@dividend,f
  5564  1EF5  09FA               	comf	___awdiv@dividend+1,f
  5565  1EF6  0AF9               	incf	___awdiv@dividend,f
  5566  1EF7  1903               	skipnz
  5567  1EF8  0AFA               	incf	___awdiv@dividend+1,f
  5568  1EF9  3001               	movlw	1
  5569  1EFA  00FB               	movwf	??___awdiv
  5570  1EFB  087B               	movf	??___awdiv,w
  5571  1EFC  06A1               	xorwf	___awdiv@sign,f
  5572  1EFD                     i1l2295:	
  5573  1EFD  01A2               	clrf	___awdiv@quotient
  5574  1EFE  01A3               	clrf	___awdiv@quotient+1
  5575  1EFF  0877               	movf	___awdiv@divisor,w
  5576  1F00  0478               	iorwf	___awdiv@divisor+1,w
  5577  1F01  1903               	btfsc	3,2
  5578  1F02  2F34               	goto	i1l2317
  5579  1F03  01A0               	clrf	___awdiv@counter
  5580  1F04  0AA0               	incf	___awdiv@counter,f
  5581  1F05                     i1l2305:	
  5582  1F05  1BF8               	btfsc	___awdiv@divisor+1,7
  5583  1F06  2F13               	goto	i1l2307
  5584  1F07  3001               	movlw	1
  5585  1F08                     u317_25:	
  5586  1F08  1003               	clrc
  5587  1F09  0DF7               	rlf	___awdiv@divisor,f
  5588  1F0A  0DF8               	rlf	___awdiv@divisor+1,f
  5589  1F0B  3EFF               	addlw	-1
  5590  1F0C  1D03               	skipz
  5591  1F0D  2F08               	goto	u317_25
  5592  1F0E  3001               	movlw	1
  5593  1F0F  00FB               	movwf	??___awdiv
  5594  1F10  087B               	movf	??___awdiv,w
  5595  1F11  07A0               	addwf	___awdiv@counter,f
  5596  1F12  2F05               	goto	i1l2305
  5597  1F13                     i1l2307:	
  5598  1F13  3001               	movlw	1
  5599  1F14                     u319_25:	
  5600  1F14  1003               	clrc
  5601  1F15  0DA2               	rlf	___awdiv@quotient,f
  5602  1F16  0DA3               	rlf	___awdiv@quotient+1,f
  5603  1F17  3EFF               	addlw	-1
  5604  1F18  1D03               	skipz
  5605  1F19  2F14               	goto	u319_25
  5606  1F1A  0878               	movf	___awdiv@divisor+1,w
  5607  1F1B  027A               	subwf	___awdiv@dividend+1,w
  5608  1F1C  1D03               	skipz
  5609  1F1D  2F20               	goto	u320_25
  5610  1F1E  0877               	movf	___awdiv@divisor,w
  5611  1F1F  0279               	subwf	___awdiv@dividend,w
  5612  1F20                     u320_25:	
  5613  1F20  1C03               	skipc
  5614  1F21  2F29               	goto	i1l2313
  5615  1F22  0877               	movf	___awdiv@divisor,w
  5616  1F23  02F9               	subwf	___awdiv@dividend,f
  5617  1F24  0878               	movf	___awdiv@divisor+1,w
  5618  1F25  1C03               	skipc
  5619  1F26  03FA               	decf	___awdiv@dividend+1,f
  5620  1F27  02FA               	subwf	___awdiv@dividend+1,f
  5621  1F28  1422               	bsf	___awdiv@quotient,0
  5622  1F29                     i1l2313:	
  5623  1F29  3001               	movlw	1
  5624  1F2A                     u321_25:	
  5625  1F2A  1003               	clrc
  5626  1F2B  0CF8               	rrf	___awdiv@divisor+1,f
  5627  1F2C  0CF7               	rrf	___awdiv@divisor,f
  5628  1F2D  3EFF               	addlw	-1
  5629  1F2E  1D03               	skipz
  5630  1F2F  2F2A               	goto	u321_25
  5631  1F30  3001               	movlw	1
  5632  1F31  02A0               	subwf	___awdiv@counter,f
  5633  1F32  1D03               	btfss	3,2
  5634  1F33  2F13               	goto	i1l2307
  5635  1F34                     i1l2317:	
  5636  1F34  0821               	movf	___awdiv@sign,w
  5637  1F35  1903               	btfsc	3,2
  5638  1F36  2F3C               	goto	i1l2321
  5639  1F37  09A2               	comf	___awdiv@quotient,f
  5640  1F38  09A3               	comf	___awdiv@quotient+1,f
  5641  1F39  0AA2               	incf	___awdiv@quotient,f
  5642  1F3A  1903               	skipnz
  5643  1F3B  0AA3               	incf	___awdiv@quotient+1,f
  5644  1F3C                     i1l2321:	
  5645  1F3C  0823               	movf	___awdiv@quotient+1,w
  5646  1F3D  00F8               	movwf	?___awdiv+1
  5647  1F3E  0822               	movf	___awdiv@quotient,w
  5648  1F3F  00F7               	movwf	?___awdiv
  5649  1F40  0008               	return
  5650  1F41                     __end_of___awdiv:	
  5651                           
  5652                           	psect	text21
  5653  13D0                     __ptext21:	
  5654 ;; *************** function _fround *****************
  5655 ;; Defined at:
  5656 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  prec            1    wreg     unsigned char 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  prec            1   49[BANK0 ] unsigned char 
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  4   30[BANK0 ] unsigned char 
  5663 ;; Registers used:
  5664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5670 ;;      Params:         0       4       0       0       0
  5671 ;;      Locals:         0       9       0       0       0
  5672 ;;      Temps:          0       7       0       0       0
  5673 ;;      Totals:         0      20       0       0       0
  5674 ;;Total ram usage:       20 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; Hardware stack levels required when called:    2
  5677 ;; This function calls:
  5678 ;;		___flmul
  5679 ;;		___lwdiv
  5680 ;;		___lwmod
  5681 ;; This function is called by:
  5682 ;;		_sprintf
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           
  5687                           ;psect for function _fround
  5688  13D0                     _fround:	
  5689                           
  5690                           ;incstack = 0
  5691 ;; using string table level
  5692                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5693                           ;fround@prec stored from wreg
  5694  13D0  1283               	bcf	3,5	;RP0=0, select bank0
  5695  13D1  1303               	bcf	3,6	;RP1=0, select bank0
  5696  13D2  00D1               	movwf	fround@prec
  5697                           
  5698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  5699  13D3  306E               	movlw	110
  5700  13D4  0251               	subwf	fround@prec,w
  5701  13D5  1C03               	skipc
  5702  13D6  2CE2               	goto	i1l2793
  5703                           
  5704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5705  13D7  303F               	movlw	63
  5706  13D8  00A7               	movwf	___flmul@b+3
  5707  13D9  3000               	movlw	0
  5708  13DA  00A6               	movwf	___flmul@b+2
  5709  13DB  3000               	movlw	0
  5710  13DC  00A5               	movwf	___flmul@b+1
  5711  13DD  3000               	movlw	0
  5712  13DE  00A4               	movwf	___flmul@b
  5713  13DF  3064               	movlw	100
  5714  13E0  00F6               	movwf	___lwdiv@divisor
  5715  13E1  3000               	movlw	0
  5716  13E2  00F7               	movwf	___lwdiv@divisor+1
  5717  13E3  0851               	movf	fround@prec,w
  5718  13E4  00C2               	movwf	??_fround
  5719  13E5  01C3               	clrf	??_fround+1
  5720  13E6  0842               	movf	??_fround,w
  5721  13E7  00F8               	movwf	___lwdiv@dividend
  5722  13E8  0843               	movf	??_fround+1,w
  5723  13E9  00F9               	movwf	___lwdiv@dividend+1
  5724  13EA  160A  158A  2462  160A  118A  	fcall	___lwdiv
  5725  13EF  0876               	movf	?___lwdiv,w
  5726  13F0  1283               	bcf	3,5	;RP0=0, select bank0
  5727  13F1  1303               	bcf	3,6	;RP1=0, select bank0
  5728  13F2  00C4               	movwf	??_fround+2
  5729  13F3  3001               	movlw	1
  5730  13F4                     u435_25:	
  5731  13F4  1003               	clrc
  5732  13F5  0DC4               	rlf	??_fround+2,f
  5733  13F6  3EFF               	addlw	-1
  5734  13F7  1D03               	skipz
  5735  13F8  2BF4               	goto	u435_25
  5736  13F9  1003               	clrc
  5737  13FA  0D44               	rlf	??_fround+2,w
  5738  13FB  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5739  13FC  0084               	movwf	4
  5740  13FD  160A  118A  200A  160A  118A  	fcall	stringdir
  5741  1402  00C5               	movwf	??_fround+3
  5742  1403  160A  118A  200A  160A  118A  	fcall	stringdir
  5743  1408  00C6               	movwf	??_fround+4
  5744  1409  160A  118A  200A  160A  118A  	fcall	stringdir
  5745  140E  00C7               	movwf	??_fround+5
  5746  140F  160A  118A  200A  160A  118A  	fcall	stringdir
  5747  1414  00C8               	movwf	??_fround+6
  5748  1415  0848               	movf	??_fround+6,w
  5749  1416  00AB               	movwf	___flmul@a+3
  5750  1417  0847               	movf	??_fround+5,w
  5751  1418  00AA               	movwf	___flmul@a+2
  5752  1419  0846               	movf	??_fround+4,w
  5753  141A  00A9               	movwf	___flmul@a+1
  5754  141B  0845               	movf	??_fround+3,w
  5755  141C  00A8               	movwf	___flmul@a
  5756  141D  120A  158A  21A2  160A  118A  	fcall	___flmul
  5757  1422  1283               	bcf	3,5	;RP0=0, select bank0
  5758  1423  1303               	bcf	3,6	;RP1=0, select bank0
  5759  1424  0827               	movf	?___flmul+3,w
  5760  1425  00D0               	movwf	_fround$924+3
  5761  1426  0826               	movf	?___flmul+2,w
  5762  1427  00CF               	movwf	_fround$924+2
  5763  1428  0825               	movf	?___flmul+1,w
  5764  1429  00CE               	movwf	_fround$924+1
  5765  142A  0824               	movf	?___flmul,w
  5766  142B  00CD               	movwf	_fround$924
  5767                           
  5768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5769  142C  300A               	movlw	10
  5770  142D  00F6               	movwf	___lwdiv@divisor
  5771  142E  3000               	movlw	0
  5772  142F  00F7               	movwf	___lwdiv@divisor+1
  5773  1430  0851               	movf	fround@prec,w
  5774  1431  00C2               	movwf	??_fround
  5775  1432  01C3               	clrf	??_fround+1
  5776  1433  0842               	movf	??_fround,w
  5777  1434  00F2               	movwf	___lwmod@dividend
  5778  1435  0843               	movf	??_fround+1,w
  5779  1436  00F3               	movwf	___lwmod@dividend+1
  5780  1437  3064               	movlw	100
  5781  1438  00F0               	movwf	___lwmod@divisor
  5782  1439  3000               	movlw	0
  5783  143A  00F1               	movwf	___lwmod@divisor+1
  5784  143B  160A  158A  23C1  160A  118A  	fcall	___lwmod
  5785  1440  0871               	movf	?___lwmod+1,w
  5786  1441  00F9               	movwf	___lwdiv@dividend+1
  5787  1442  0870               	movf	?___lwmod,w
  5788  1443  00F8               	movwf	___lwdiv@dividend
  5789  1444  160A  158A  2462  160A  118A  	fcall	___lwdiv
  5790  1449  0876               	movf	?___lwdiv,w
  5791  144A  1283               	bcf	3,5	;RP0=0, select bank0
  5792  144B  1303               	bcf	3,6	;RP1=0, select bank0
  5793  144C  00C4               	movwf	??_fround+2
  5794  144D  3001               	movlw	1
  5795  144E                     u436_25:	
  5796  144E  1003               	clrc
  5797  144F  0DC4               	rlf	??_fround+2,f
  5798  1450  3EFF               	addlw	-1
  5799  1451  1D03               	skipz
  5800  1452  2C4E               	goto	u436_25
  5801  1453  1003               	clrc
  5802  1454  0D44               	rlf	??_fround+2,w
  5803  1455  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5804  1456  0084               	movwf	4
  5805  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  5806  145C  00C5               	movwf	??_fround+3
  5807  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  5808  1462  00C6               	movwf	??_fround+4
  5809  1463  160A  118A  200A  160A  118A  	fcall	stringdir
  5810  1468  00C7               	movwf	??_fround+5
  5811  1469  160A  118A  200A  160A  118A  	fcall	stringdir
  5812  146E  00C8               	movwf	??_fround+6
  5813  146F  0848               	movf	??_fround+6,w
  5814  1470  00A7               	movwf	___flmul@b+3
  5815  1471  0847               	movf	??_fround+5,w
  5816  1472  00A6               	movwf	___flmul@b+2
  5817  1473  0846               	movf	??_fround+4,w
  5818  1474  00A5               	movwf	___flmul@b+1
  5819  1475  0845               	movf	??_fround+3,w
  5820  1476  00A4               	movwf	___flmul@b
  5821  1477  0850               	movf	_fround$924+3,w
  5822  1478  00AB               	movwf	___flmul@a+3
  5823  1479  084F               	movf	_fround$924+2,w
  5824  147A  00AA               	movwf	___flmul@a+2
  5825  147B  084E               	movf	_fround$924+1,w
  5826  147C  00A9               	movwf	___flmul@a+1
  5827  147D  084D               	movf	_fround$924,w
  5828  147E  00A8               	movwf	___flmul@a
  5829  147F  120A  158A  21A2  160A  118A  	fcall	___flmul
  5830  1484  1283               	bcf	3,5	;RP0=0, select bank0
  5831  1485  1303               	bcf	3,6	;RP1=0, select bank0
  5832  1486  0827               	movf	?___flmul+3,w
  5833  1487  00CC               	movwf	_fround$925+3
  5834  1488  0826               	movf	?___flmul+2,w
  5835  1489  00CB               	movwf	_fround$925+2
  5836  148A  0825               	movf	?___flmul+1,w
  5837  148B  00CA               	movwf	_fround$925+1
  5838  148C  0824               	movf	?___flmul,w
  5839  148D  00C9               	movwf	_fround$925
  5840                           
  5841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5842  148E  300A               	movlw	10
  5843  148F  00F0               	movwf	___lwmod@divisor
  5844  1490  3000               	movlw	0
  5845  1491  00F1               	movwf	___lwmod@divisor+1
  5846  1492  0851               	movf	fround@prec,w
  5847  1493  00C2               	movwf	??_fround
  5848  1494  01C3               	clrf	??_fround+1
  5849  1495  0842               	movf	??_fround,w
  5850  1496  00F2               	movwf	___lwmod@dividend
  5851  1497  0843               	movf	??_fround+1,w
  5852  1498  00F3               	movwf	___lwmod@dividend+1
  5853  1499  160A  158A  23C1  160A  118A  	fcall	___lwmod
  5854  149E  0870               	movf	?___lwmod,w
  5855  149F  1283               	bcf	3,5	;RP0=0, select bank0
  5856  14A0  1303               	bcf	3,6	;RP1=0, select bank0
  5857  14A1  00C4               	movwf	??_fround+2
  5858  14A2  3001               	movlw	1
  5859  14A3                     u437_25:	
  5860  14A3  1003               	clrc
  5861  14A4  0DC4               	rlf	??_fround+2,f
  5862  14A5  3EFF               	addlw	-1
  5863  14A6  1D03               	skipz
  5864  14A7  2CA3               	goto	u437_25
  5865  14A8  1003               	clrc
  5866  14A9  0D44               	rlf	??_fround+2,w
  5867  14AA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5868  14AB  0084               	movwf	4
  5869  14AC  160A  118A  200A  160A  118A  	fcall	stringdir
  5870  14B1  00C5               	movwf	??_fround+3
  5871  14B2  160A  118A  200A  160A  118A  	fcall	stringdir
  5872  14B7  00C6               	movwf	??_fround+4
  5873  14B8  160A  118A  200A  160A  118A  	fcall	stringdir
  5874  14BD  00C7               	movwf	??_fround+5
  5875  14BE  160A  118A  200A  160A  118A  	fcall	stringdir
  5876  14C3  00C8               	movwf	??_fround+6
  5877  14C4  0848               	movf	??_fround+6,w
  5878  14C5  00A7               	movwf	___flmul@b+3
  5879  14C6  0847               	movf	??_fround+5,w
  5880  14C7  00A6               	movwf	___flmul@b+2
  5881  14C8  0846               	movf	??_fround+4,w
  5882  14C9  00A5               	movwf	___flmul@b+1
  5883  14CA  0845               	movf	??_fround+3,w
  5884  14CB  00A4               	movwf	___flmul@b
  5885  14CC  084C               	movf	_fround$925+3,w
  5886  14CD  00AB               	movwf	___flmul@a+3
  5887  14CE  084B               	movf	_fround$925+2,w
  5888  14CF  00AA               	movwf	___flmul@a+2
  5889  14D0  084A               	movf	_fround$925+1,w
  5890  14D1  00A9               	movwf	___flmul@a+1
  5891  14D2  0849               	movf	_fround$925,w
  5892  14D3  00A8               	movwf	___flmul@a
  5893  14D4  120A  158A  21A2   	fcall	___flmul
  5894  14D7  1283               	bcf	3,5	;RP0=0, select bank0
  5895  14D8  1303               	bcf	3,6	;RP1=0, select bank0
  5896  14D9  0827               	movf	?___flmul+3,w
  5897  14DA  00C1               	movwf	?_fround+3
  5898  14DB  0826               	movf	?___flmul+2,w
  5899  14DC  00C0               	movwf	?_fround+2
  5900  14DD  0825               	movf	?___flmul+1,w
  5901  14DE  00BF               	movwf	?_fround+1
  5902  14DF  0824               	movf	?___flmul,w
  5903  14E0  00BE               	movwf	?_fround
  5904  14E1  0008               	return
  5905  14E2                     i1l2793:	
  5906  14E2  300B               	movlw	11
  5907  14E3  0251               	subwf	fround@prec,w
  5908  14E4  1C03               	skipc
  5909  14E5  2D8F               	goto	i1l2799
  5910                           
  5911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5912  14E6  303F               	movlw	63
  5913  14E7  00A7               	movwf	___flmul@b+3
  5914  14E8  3000               	movlw	0
  5915  14E9  00A6               	movwf	___flmul@b+2
  5916  14EA  3000               	movlw	0
  5917  14EB  00A5               	movwf	___flmul@b+1
  5918  14EC  3000               	movlw	0
  5919  14ED  00A4               	movwf	___flmul@b
  5920  14EE  300A               	movlw	10
  5921  14EF  00F6               	movwf	___lwdiv@divisor
  5922  14F0  3000               	movlw	0
  5923  14F1  00F7               	movwf	___lwdiv@divisor+1
  5924  14F2  0851               	movf	fround@prec,w
  5925  14F3  00C2               	movwf	??_fround
  5926  14F4  01C3               	clrf	??_fround+1
  5927  14F5  0842               	movf	??_fround,w
  5928  14F6  00F8               	movwf	___lwdiv@dividend
  5929  14F7  0843               	movf	??_fround+1,w
  5930  14F8  00F9               	movwf	___lwdiv@dividend+1
  5931  14F9  160A  158A  2462  160A  118A  	fcall	___lwdiv
  5932  14FE  0876               	movf	?___lwdiv,w
  5933  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  5934  1500  1303               	bcf	3,6	;RP1=0, select bank0
  5935  1501  00C4               	movwf	??_fround+2
  5936  1502  3001               	movlw	1
  5937  1503                     u439_25:	
  5938  1503  1003               	clrc
  5939  1504  0DC4               	rlf	??_fround+2,f
  5940  1505  3EFF               	addlw	-1
  5941  1506  1D03               	skipz
  5942  1507  2D03               	goto	u439_25
  5943  1508  1003               	clrc
  5944  1509  0D44               	rlf	??_fround+2,w
  5945  150A  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5946  150B  0084               	movwf	4
  5947  150C  160A  118A  200A  160A  118A  	fcall	stringdir
  5948  1511  00C5               	movwf	??_fround+3
  5949  1512  160A  118A  200A  160A  118A  	fcall	stringdir
  5950  1517  00C6               	movwf	??_fround+4
  5951  1518  160A  118A  200A  160A  118A  	fcall	stringdir
  5952  151D  00C7               	movwf	??_fround+5
  5953  151E  160A  118A  200A  160A  118A  	fcall	stringdir
  5954  1523  00C8               	movwf	??_fround+6
  5955  1524  0848               	movf	??_fround+6,w
  5956  1525  00AB               	movwf	___flmul@a+3
  5957  1526  0847               	movf	??_fround+5,w
  5958  1527  00AA               	movwf	___flmul@a+2
  5959  1528  0846               	movf	??_fround+4,w
  5960  1529  00A9               	movwf	___flmul@a+1
  5961  152A  0845               	movf	??_fround+3,w
  5962  152B  00A8               	movwf	___flmul@a
  5963  152C  120A  158A  21A2  160A  118A  	fcall	___flmul
  5964  1531  1283               	bcf	3,5	;RP0=0, select bank0
  5965  1532  1303               	bcf	3,6	;RP1=0, select bank0
  5966  1533  0827               	movf	?___flmul+3,w
  5967  1534  00D0               	movwf	_fround$924+3
  5968  1535  0826               	movf	?___flmul+2,w
  5969  1536  00CF               	movwf	_fround$924+2
  5970  1537  0825               	movf	?___flmul+1,w
  5971  1538  00CE               	movwf	_fround$924+1
  5972  1539  0824               	movf	?___flmul,w
  5973  153A  00CD               	movwf	_fround$924
  5974                           
  5975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5976  153B  300A               	movlw	10
  5977  153C  00F0               	movwf	___lwmod@divisor
  5978  153D  3000               	movlw	0
  5979  153E  00F1               	movwf	___lwmod@divisor+1
  5980  153F  0851               	movf	fround@prec,w
  5981  1540  00C2               	movwf	??_fround
  5982  1541  01C3               	clrf	??_fround+1
  5983  1542  0842               	movf	??_fround,w
  5984  1543  00F2               	movwf	___lwmod@dividend
  5985  1544  0843               	movf	??_fround+1,w
  5986  1545  00F3               	movwf	___lwmod@dividend+1
  5987  1546  160A  158A  23C1  160A  118A  	fcall	___lwmod
  5988  154B  0870               	movf	?___lwmod,w
  5989  154C  1283               	bcf	3,5	;RP0=0, select bank0
  5990  154D  1303               	bcf	3,6	;RP1=0, select bank0
  5991  154E  00C4               	movwf	??_fround+2
  5992  154F  3001               	movlw	1
  5993  1550                     u440_25:	
  5994  1550  1003               	clrc
  5995  1551  0DC4               	rlf	??_fround+2,f
  5996  1552  3EFF               	addlw	-1
  5997  1553  1D03               	skipz
  5998  1554  2D50               	goto	u440_25
  5999  1555  1003               	clrc
  6000  1556  0D44               	rlf	??_fround+2,w
  6001  1557  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6002  1558  0084               	movwf	4
  6003  1559  160A  118A  200A  160A  118A  	fcall	stringdir
  6004  155E  00C5               	movwf	??_fround+3
  6005  155F  160A  118A  200A  160A  118A  	fcall	stringdir
  6006  1564  00C6               	movwf	??_fround+4
  6007  1565  160A  118A  200A  160A  118A  	fcall	stringdir
  6008  156A  00C7               	movwf	??_fround+5
  6009  156B  160A  118A  200A  160A  118A  	fcall	stringdir
  6010  1570  00C8               	movwf	??_fround+6
  6011  1571  0848               	movf	??_fround+6,w
  6012  1572  00A7               	movwf	___flmul@b+3
  6013  1573  0847               	movf	??_fround+5,w
  6014  1574  00A6               	movwf	___flmul@b+2
  6015  1575  0846               	movf	??_fround+4,w
  6016  1576  00A5               	movwf	___flmul@b+1
  6017  1577  0845               	movf	??_fround+3,w
  6018  1578  00A4               	movwf	___flmul@b
  6019  1579  0850               	movf	_fround$924+3,w
  6020  157A  00AB               	movwf	___flmul@a+3
  6021  157B  084F               	movf	_fround$924+2,w
  6022  157C  00AA               	movwf	___flmul@a+2
  6023  157D  084E               	movf	_fround$924+1,w
  6024  157E  00A9               	movwf	___flmul@a+1
  6025  157F  084D               	movf	_fround$924,w
  6026  1580  00A8               	movwf	___flmul@a
  6027  1581  120A  158A  21A2   	fcall	___flmul
  6028  1584  1283               	bcf	3,5	;RP0=0, select bank0
  6029  1585  1303               	bcf	3,6	;RP1=0, select bank0
  6030  1586  0827               	movf	?___flmul+3,w
  6031  1587  00C1               	movwf	?_fround+3
  6032  1588  0826               	movf	?___flmul+2,w
  6033  1589  00C0               	movwf	?_fround+2
  6034  158A  0825               	movf	?___flmul+1,w
  6035  158B  00BF               	movwf	?_fround+1
  6036  158C  0824               	movf	?___flmul,w
  6037  158D  00BE               	movwf	?_fround
  6038  158E  0008               	return
  6039  158F                     i1l2799:	
  6040                           
  6041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  6042  158F  303F               	movlw	63
  6043  1590  00A7               	movwf	___flmul@b+3
  6044  1591  3000               	movlw	0
  6045  1592  00A6               	movwf	___flmul@b+2
  6046  1593  3000               	movlw	0
  6047  1594  00A5               	movwf	___flmul@b+1
  6048  1595  3000               	movlw	0
  6049  1596  00A4               	movwf	___flmul@b
  6050  1597  0851               	movf	fround@prec,w
  6051  1598  00C2               	movwf	??_fround
  6052  1599  3001               	movlw	1
  6053  159A                     u441_25:	
  6054  159A  1003               	clrc
  6055  159B  0DC2               	rlf	??_fround,f
  6056  159C  3EFF               	addlw	-1
  6057  159D  1D03               	skipz
  6058  159E  2D9A               	goto	u441_25
  6059  159F  1003               	clrc
  6060  15A0  0D42               	rlf	??_fround,w
  6061  15A1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6062  15A2  0084               	movwf	4
  6063  15A3  160A  118A  200A  160A  118A  	fcall	stringdir
  6064  15A8  00C3               	movwf	??_fround+1
  6065  15A9  160A  118A  200A  160A  118A  	fcall	stringdir
  6066  15AE  00C4               	movwf	??_fround+2
  6067  15AF  160A  118A  200A  160A  118A  	fcall	stringdir
  6068  15B4  00C5               	movwf	??_fround+3
  6069  15B5  160A  118A  200A  160A  118A  	fcall	stringdir
  6070  15BA  00C6               	movwf	??_fround+4
  6071  15BB  0846               	movf	??_fround+4,w
  6072  15BC  00AB               	movwf	___flmul@a+3
  6073  15BD  0845               	movf	??_fround+3,w
  6074  15BE  00AA               	movwf	___flmul@a+2
  6075  15BF  0844               	movf	??_fround+2,w
  6076  15C0  00A9               	movwf	___flmul@a+1
  6077  15C1  0843               	movf	??_fround+1,w
  6078  15C2  00A8               	movwf	___flmul@a
  6079  15C3  120A  158A  21A2   	fcall	___flmul
  6080  15C6  1283               	bcf	3,5	;RP0=0, select bank0
  6081  15C7  1303               	bcf	3,6	;RP1=0, select bank0
  6082  15C8  0827               	movf	?___flmul+3,w
  6083  15C9  00C1               	movwf	?_fround+3
  6084  15CA  0826               	movf	?___flmul+2,w
  6085  15CB  00C0               	movwf	?_fround+2
  6086  15CC  0825               	movf	?___flmul+1,w
  6087  15CD  00BF               	movwf	?_fround+1
  6088  15CE  0824               	movf	?___flmul,w
  6089  15CF  00BE               	movwf	?_fround
  6090  15D0  0008               	return
  6091  15D1                     __end_of_fround:	
  6092                           
  6093                           	psect	text22
  6094  1BC1                     __ptext22:	
  6095 ;; *************** function ___lwmod *****************
  6096 ;; Defined at:
  6097 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  divisor         2    0[COMMON] unsigned int 
  6100 ;;  dividend        2    2[COMMON] unsigned int 
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  counter         1    5[COMMON] unsigned char 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  2    0[COMMON] unsigned int 
  6105 ;; Registers used:
  6106 ;;		wreg, status,2, status,0
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6112 ;;      Params:         4       0       0       0       0
  6113 ;;      Locals:         1       0       0       0       0
  6114 ;;      Temps:          1       0       0       0       0
  6115 ;;      Totals:         6       0       0       0       0
  6116 ;;Total ram usage:        6 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_fround
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function ___lwmod
  6127  1BC1                     ___lwmod:	
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6131  1BC1  0870               	movf	___lwmod@divisor,w
  6132  1BC2  0471               	iorwf	___lwmod@divisor+1,w
  6133  1BC3  1903               	btfsc	3,2
  6134  1BC4  2BEE               	goto	i1l2407
  6135  1BC5  01F5               	clrf	___lwmod@counter
  6136  1BC6  0AF5               	incf	___lwmod@counter,f
  6137  1BC7                     i1l2397:	
  6138  1BC7  1BF1               	btfsc	___lwmod@divisor+1,7
  6139  1BC8  2BD5               	goto	i1l2399
  6140  1BC9  3001               	movlw	1
  6141  1BCA                     u341_25:	
  6142  1BCA  1003               	clrc
  6143  1BCB  0DF0               	rlf	___lwmod@divisor,f
  6144  1BCC  0DF1               	rlf	___lwmod@divisor+1,f
  6145  1BCD  3EFF               	addlw	-1
  6146  1BCE  1D03               	skipz
  6147  1BCF  2BCA               	goto	u341_25
  6148  1BD0  3001               	movlw	1
  6149  1BD1  00F4               	movwf	??___lwmod
  6150  1BD2  0874               	movf	??___lwmod,w
  6151  1BD3  07F5               	addwf	___lwmod@counter,f
  6152  1BD4  2BC7               	goto	i1l2397
  6153  1BD5                     i1l2399:	
  6154  1BD5  0871               	movf	___lwmod@divisor+1,w
  6155  1BD6  0273               	subwf	___lwmod@dividend+1,w
  6156  1BD7  1D03               	skipz
  6157  1BD8  2BDB               	goto	u343_25
  6158  1BD9  0870               	movf	___lwmod@divisor,w
  6159  1BDA  0272               	subwf	___lwmod@dividend,w
  6160  1BDB                     u343_25:	
  6161  1BDB  1C03               	skipc
  6162  1BDC  2BE3               	goto	i1l2403
  6163  1BDD  0870               	movf	___lwmod@divisor,w
  6164  1BDE  02F2               	subwf	___lwmod@dividend,f
  6165  1BDF  0871               	movf	___lwmod@divisor+1,w
  6166  1BE0  1C03               	skipc
  6167  1BE1  03F3               	decf	___lwmod@dividend+1,f
  6168  1BE2  02F3               	subwf	___lwmod@dividend+1,f
  6169  1BE3                     i1l2403:	
  6170  1BE3  3001               	movlw	1
  6171  1BE4                     u344_25:	
  6172  1BE4  1003               	clrc
  6173  1BE5  0CF1               	rrf	___lwmod@divisor+1,f
  6174  1BE6  0CF0               	rrf	___lwmod@divisor,f
  6175  1BE7  3EFF               	addlw	-1
  6176  1BE8  1D03               	skipz
  6177  1BE9  2BE4               	goto	u344_25
  6178  1BEA  3001               	movlw	1
  6179  1BEB  02F5               	subwf	___lwmod@counter,f
  6180  1BEC  1D03               	btfss	3,2
  6181  1BED  2BD5               	goto	i1l2399
  6182  1BEE                     i1l2407:	
  6183  1BEE  0873               	movf	___lwmod@dividend+1,w
  6184  1BEF  00F1               	movwf	?___lwmod+1
  6185  1BF0  0872               	movf	___lwmod@dividend,w
  6186  1BF1  00F0               	movwf	?___lwmod
  6187  1BF2  0008               	return
  6188  1BF3                     __end_of___lwmod:	
  6189                           
  6190                           	psect	text23
  6191  1C62                     __ptext23:	
  6192 ;; *************** function ___lwdiv *****************
  6193 ;; Defined at:
  6194 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  divisor         2    6[COMMON] unsigned int 
  6197 ;;  dividend        2    8[COMMON] unsigned int 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;  quotient        2   11[COMMON] unsigned int 
  6200 ;;  counter         1   13[COMMON] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  2    6[COMMON] unsigned int 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6210 ;;      Params:         4       0       0       0       0
  6211 ;;      Locals:         3       0       0       0       0
  6212 ;;      Temps:          1       0       0       0       0
  6213 ;;      Totals:         8       0       0       0       0
  6214 ;;Total ram usage:        8 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_fround
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           
  6224                           ;psect for function ___lwdiv
  6225  1C62                     ___lwdiv:	
  6226                           
  6227                           ;incstack = 0
  6228                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6229  1C62  01FB               	clrf	___lwdiv@quotient
  6230  1C63  01FC               	clrf	___lwdiv@quotient+1
  6231  1C64  0876               	movf	___lwdiv@divisor,w
  6232  1C65  0477               	iorwf	___lwdiv@divisor+1,w
  6233  1C66  1903               	btfsc	3,2
  6234  1C67  2C99               	goto	i1l2385
  6235  1C68  01FD               	clrf	___lwdiv@counter
  6236  1C69  0AFD               	incf	___lwdiv@counter,f
  6237  1C6A                     i1l2373:	
  6238  1C6A  1BF7               	btfsc	___lwdiv@divisor+1,7
  6239  1C6B  2C78               	goto	i1l2375
  6240  1C6C  3001               	movlw	1
  6241  1C6D                     u334_25:	
  6242  1C6D  1003               	clrc
  6243  1C6E  0DF6               	rlf	___lwdiv@divisor,f
  6244  1C6F  0DF7               	rlf	___lwdiv@divisor+1,f
  6245  1C70  3EFF               	addlw	-1
  6246  1C71  1D03               	skipz
  6247  1C72  2C6D               	goto	u334_25
  6248  1C73  3001               	movlw	1
  6249  1C74  00FA               	movwf	??___lwdiv
  6250  1C75  087A               	movf	??___lwdiv,w
  6251  1C76  07FD               	addwf	___lwdiv@counter,f
  6252  1C77  2C6A               	goto	i1l2373
  6253  1C78                     i1l2375:	
  6254  1C78  3001               	movlw	1
  6255  1C79                     u336_25:	
  6256  1C79  1003               	clrc
  6257  1C7A  0DFB               	rlf	___lwdiv@quotient,f
  6258  1C7B  0DFC               	rlf	___lwdiv@quotient+1,f
  6259  1C7C  3EFF               	addlw	-1
  6260  1C7D  1D03               	skipz
  6261  1C7E  2C79               	goto	u336_25
  6262  1C7F  0877               	movf	___lwdiv@divisor+1,w
  6263  1C80  0279               	subwf	___lwdiv@dividend+1,w
  6264  1C81  1D03               	skipz
  6265  1C82  2C85               	goto	u337_25
  6266  1C83  0876               	movf	___lwdiv@divisor,w
  6267  1C84  0278               	subwf	___lwdiv@dividend,w
  6268  1C85                     u337_25:	
  6269  1C85  1C03               	skipc
  6270  1C86  2C8E               	goto	i1l2381
  6271  1C87  0876               	movf	___lwdiv@divisor,w
  6272  1C88  02F8               	subwf	___lwdiv@dividend,f
  6273  1C89  0877               	movf	___lwdiv@divisor+1,w
  6274  1C8A  1C03               	skipc
  6275  1C8B  03F9               	decf	___lwdiv@dividend+1,f
  6276  1C8C  02F9               	subwf	___lwdiv@dividend+1,f
  6277  1C8D  147B               	bsf	___lwdiv@quotient,0
  6278  1C8E                     i1l2381:	
  6279  1C8E  3001               	movlw	1
  6280  1C8F                     u338_25:	
  6281  1C8F  1003               	clrc
  6282  1C90  0CF7               	rrf	___lwdiv@divisor+1,f
  6283  1C91  0CF6               	rrf	___lwdiv@divisor,f
  6284  1C92  3EFF               	addlw	-1
  6285  1C93  1D03               	skipz
  6286  1C94  2C8F               	goto	u338_25
  6287  1C95  3001               	movlw	1
  6288  1C96  02FD               	subwf	___lwdiv@counter,f
  6289  1C97  1D03               	btfss	3,2
  6290  1C98  2C78               	goto	i1l2375
  6291  1C99                     i1l2385:	
  6292  1C99  087C               	movf	___lwdiv@quotient+1,w
  6293  1C9A  00F7               	movwf	?___lwdiv+1
  6294  1C9B  087B               	movf	___lwdiv@quotient,w
  6295  1C9C  00F6               	movwf	?___lwdiv
  6296  1C9D  0008               	return
  6297  1C9E                     __end_of___lwdiv:	
  6298                           
  6299                           	psect	text24
  6300  09A2                     __ptext24:	
  6301 ;; *************** function ___flmul *****************
  6302 ;; Defined at:
  6303 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;  b               4    4[BANK0 ] unsigned int 
  6306 ;;  a               4    8[BANK0 ] unsigned int 
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;  prod            4   24[BANK0 ] struct .
  6309 ;;  grs             4   18[BANK0 ] unsigned long 
  6310 ;;  temp            2   28[BANK0 ] struct .
  6311 ;;  bexp            1   23[BANK0 ] unsigned char 
  6312 ;;  aexp            1   22[BANK0 ] unsigned char 
  6313 ;;  sign            1   17[BANK0 ] unsigned char 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  4    4[BANK0 ] unsigned char 
  6316 ;; Registers used:
  6317 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6323 ;;      Params:         0       8       0       0       0
  6324 ;;      Locals:         0      13       0       0       0
  6325 ;;      Temps:          0       5       0       0       0
  6326 ;;      Totals:         0      26       0       0       0
  6327 ;;Total ram usage:       26 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; Hardware stack levels required when called:    1
  6330 ;; This function calls:
  6331 ;;		__Umul8_16
  6332 ;; This function is called by:
  6333 ;;		_my_isr_routine
  6334 ;;		_fround
  6335 ;;		_scale
  6336 ;;		_sprintf
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340                           
  6341                           ;psect for function ___flmul
  6342  09A2                     ___flmul:	
  6343                           
  6344                           ;incstack = 0
  6345                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6346  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  6347  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  6348  09A4  0827               	movf	___flmul@b+3,w
  6349  09A5  3980               	andlw	128
  6350  09A6  00AC               	movwf	??___flmul
  6351  09A7  082C               	movf	??___flmul,w
  6352  09A8  00B1               	movwf	___flmul@sign
  6353  09A9  0827               	movf	___flmul@b+3,w
  6354  09AA  00AC               	movwf	??___flmul
  6355  09AB  072C               	addwf	??___flmul,w
  6356  09AC  00AD               	movwf	??___flmul+1
  6357  09AD  082D               	movf	??___flmul+1,w
  6358  09AE  00B7               	movwf	___flmul@bexp
  6359  09AF  1BA6               	btfsc	___flmul@b+2,7
  6360  09B0  1437               	bsf	___flmul@bexp,0
  6361  09B1  0837               	movf	___flmul@bexp,w
  6362  09B2  1903               	btfsc	3,2
  6363  09B3  29C1               	goto	i1l2621
  6364  09B4  0A37               	incf	___flmul@bexp,w
  6365  09B5  1D03               	btfss	3,2
  6366  09B6  29BF               	goto	i1l2619
  6367  09B7  3000               	movlw	0
  6368  09B8  00A7               	movwf	___flmul@b+3
  6369  09B9  3000               	movlw	0
  6370  09BA  00A6               	movwf	___flmul@b+2
  6371  09BB  3000               	movlw	0
  6372  09BC  00A5               	movwf	___flmul@b+1
  6373  09BD  3000               	movlw	0
  6374  09BE  00A4               	movwf	___flmul@b
  6375  09BF                     i1l2619:	
  6376  09BF  17A6               	bsf	___flmul@b+2,7
  6377  09C0  29C9               	goto	i1l2623
  6378  09C1                     i1l2621:	
  6379  09C1  3000               	movlw	0
  6380  09C2  00A7               	movwf	___flmul@b+3
  6381  09C3  3000               	movlw	0
  6382  09C4  00A6               	movwf	___flmul@b+2
  6383  09C5  3000               	movlw	0
  6384  09C6  00A5               	movwf	___flmul@b+1
  6385  09C7  3000               	movlw	0
  6386  09C8  00A4               	movwf	___flmul@b
  6387  09C9                     i1l2623:	
  6388  09C9  082B               	movf	___flmul@a+3,w
  6389  09CA  3980               	andlw	128
  6390  09CB  00AC               	movwf	??___flmul
  6391  09CC  082C               	movf	??___flmul,w
  6392  09CD  06B1               	xorwf	___flmul@sign,f
  6393  09CE  082B               	movf	___flmul@a+3,w
  6394  09CF  00AC               	movwf	??___flmul
  6395  09D0  072C               	addwf	??___flmul,w
  6396  09D1  00AD               	movwf	??___flmul+1
  6397  09D2  082D               	movf	??___flmul+1,w
  6398  09D3  00B6               	movwf	___flmul@aexp
  6399  09D4  1BAA               	btfsc	___flmul@a+2,7
  6400  09D5  1436               	bsf	___flmul@aexp,0
  6401  09D6  0836               	movf	___flmul@aexp,w
  6402  09D7  1903               	btfsc	3,2
  6403  09D8  29E6               	goto	i1l2639
  6404  09D9  0A36               	incf	___flmul@aexp,w
  6405  09DA  1D03               	btfss	3,2
  6406  09DB  29E4               	goto	i1l2637
  6407  09DC  3000               	movlw	0
  6408  09DD  00AB               	movwf	___flmul@a+3
  6409  09DE  3000               	movlw	0
  6410  09DF  00AA               	movwf	___flmul@a+2
  6411  09E0  3000               	movlw	0
  6412  09E1  00A9               	movwf	___flmul@a+1
  6413  09E2  3000               	movlw	0
  6414  09E3  00A8               	movwf	___flmul@a
  6415  09E4                     i1l2637:	
  6416  09E4  17AA               	bsf	___flmul@a+2,7
  6417  09E5  29EE               	goto	i1l2641
  6418  09E6                     i1l2639:	
  6419  09E6  3000               	movlw	0
  6420  09E7  00AB               	movwf	___flmul@a+3
  6421  09E8  3000               	movlw	0
  6422  09E9  00AA               	movwf	___flmul@a+2
  6423  09EA  3000               	movlw	0
  6424  09EB  00A9               	movwf	___flmul@a+1
  6425  09EC  3000               	movlw	0
  6426  09ED  00A8               	movwf	___flmul@a
  6427  09EE                     i1l2641:	
  6428  09EE  0836               	movf	___flmul@aexp,w
  6429  09EF  1D03               	btfss	3,2
  6430  09F0  0837               	movf	___flmul@bexp,w
  6431  09F1  1D03               	btfss	3,2
  6432  09F2  29FC               	goto	i1l2649
  6433  09F3  3000               	movlw	0
  6434  09F4  00A7               	movwf	?___flmul+3
  6435  09F5  3000               	movlw	0
  6436  09F6  00A6               	movwf	?___flmul+2
  6437  09F7  3000               	movlw	0
  6438  09F8  00A5               	movwf	?___flmul+1
  6439  09F9  3000               	movlw	0
  6440  09FA  00A4               	movwf	?___flmul
  6441  09FB  0008               	return
  6442  09FC                     i1l2649:	
  6443  09FC  0824               	movf	___flmul@b,w
  6444  09FD  00AC               	movwf	??___flmul
  6445  09FE  082C               	movf	??___flmul,w
  6446  09FF  00F0               	movwf	__Umul8_16@multiplicand
  6447  0A00  082A               	movf	___flmul@a+2,w
  6448  0A01  160A  158A  2370  120A  158A  	fcall	__Umul8_16
  6449  0A06  0871               	movf	?__Umul8_16+1,w
  6450  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  6451  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  6452  0A09  00BD               	movwf	___flmul@temp+1
  6453  0A0A  0870               	movf	?__Umul8_16,w
  6454  0A0B  00BC               	movwf	___flmul@temp
  6455  0A0C  083C               	movf	___flmul@temp,w
  6456  0A0D  00AC               	movwf	??___flmul
  6457  0A0E  01AD               	clrf	??___flmul+1
  6458  0A0F  01AE               	clrf	??___flmul+2
  6459  0A10  01AF               	clrf	??___flmul+3
  6460  0A11  082F               	movf	??___flmul+3,w
  6461  0A12  00B5               	movwf	___flmul@grs+3
  6462  0A13  082E               	movf	??___flmul+2,w
  6463  0A14  00B4               	movwf	___flmul@grs+2
  6464  0A15  082D               	movf	??___flmul+1,w
  6465  0A16  00B3               	movwf	___flmul@grs+1
  6466  0A17  082C               	movf	??___flmul,w
  6467  0A18  00B2               	movwf	___flmul@grs
  6468  0A19  083D               	movf	___flmul@temp+1,w
  6469  0A1A  00AC               	movwf	??___flmul
  6470  0A1B  01AD               	clrf	??___flmul+1
  6471  0A1C  01AE               	clrf	??___flmul+2
  6472  0A1D  01AF               	clrf	??___flmul+3
  6473  0A1E  082F               	movf	??___flmul+3,w
  6474  0A1F  00BB               	movwf	___flmul@prod+3
  6475  0A20  082E               	movf	??___flmul+2,w
  6476  0A21  00BA               	movwf	___flmul@prod+2
  6477  0A22  082D               	movf	??___flmul+1,w
  6478  0A23  00B9               	movwf	___flmul@prod+1
  6479  0A24  082C               	movf	??___flmul,w
  6480  0A25  00B8               	movwf	___flmul@prod
  6481  0A26  0825               	movf	___flmul@b+1,w
  6482  0A27  00AC               	movwf	??___flmul
  6483  0A28  082C               	movf	??___flmul,w
  6484  0A29  00F0               	movwf	__Umul8_16@multiplicand
  6485  0A2A  0829               	movf	___flmul@a+1,w
  6486  0A2B  160A  158A  2370  120A  158A  	fcall	__Umul8_16
  6487  0A30  0871               	movf	?__Umul8_16+1,w
  6488  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  6489  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  6490  0A33  00BD               	movwf	___flmul@temp+1
  6491  0A34  0870               	movf	?__Umul8_16,w
  6492  0A35  00BC               	movwf	___flmul@temp
  6493  0A36  083C               	movf	___flmul@temp,w
  6494  0A37  00AC               	movwf	??___flmul
  6495  0A38  01AD               	clrf	??___flmul+1
  6496  0A39  01AE               	clrf	??___flmul+2
  6497  0A3A  01AF               	clrf	??___flmul+3
  6498  0A3B  082C               	movf	??___flmul,w
  6499  0A3C  07B2               	addwf	___flmul@grs,f
  6500  0A3D  082D               	movf	??___flmul+1,w
  6501  0A3E  1103               	clrz
  6502  0A3F  1803               	skipnc
  6503  0A40  3E01               	addlw	1
  6504  0A41  1D03               	btfss	3,2
  6505  0A42  07B3               	addwf	___flmul@grs+1,f
  6506  0A43  082E               	movf	??___flmul+2,w
  6507  0A44  1103               	clrz
  6508  0A45  1803               	skipnc
  6509  0A46  3E01               	addlw	1
  6510  0A47  1D03               	btfss	3,2
  6511  0A48  07B4               	addwf	___flmul@grs+2,f
  6512  0A49  082F               	movf	??___flmul+3,w
  6513  0A4A  1103               	clrz
  6514  0A4B  1803               	skipnc
  6515  0A4C  3E01               	addlw	1
  6516  0A4D  1D03               	btfss	3,2
  6517  0A4E  07B5               	addwf	___flmul@grs+3,f
  6518  0A4F  083D               	movf	___flmul@temp+1,w
  6519  0A50  00AC               	movwf	??___flmul
  6520  0A51  01AD               	clrf	??___flmul+1
  6521  0A52  01AE               	clrf	??___flmul+2
  6522  0A53  01AF               	clrf	??___flmul+3
  6523  0A54  082C               	movf	??___flmul,w
  6524  0A55  07B8               	addwf	___flmul@prod,f
  6525  0A56  082D               	movf	??___flmul+1,w
  6526  0A57  1103               	clrz
  6527  0A58  1803               	skipnc
  6528  0A59  3E01               	addlw	1
  6529  0A5A  1D03               	btfss	3,2
  6530  0A5B  07B9               	addwf	___flmul@prod+1,f
  6531  0A5C  082E               	movf	??___flmul+2,w
  6532  0A5D  1103               	clrz
  6533  0A5E  1803               	skipnc
  6534  0A5F  3E01               	addlw	1
  6535  0A60  1D03               	btfss	3,2
  6536  0A61  07BA               	addwf	___flmul@prod+2,f
  6537  0A62  082F               	movf	??___flmul+3,w
  6538  0A63  1103               	clrz
  6539  0A64  1803               	skipnc
  6540  0A65  3E01               	addlw	1
  6541  0A66  1D03               	btfss	3,2
  6542  0A67  07BB               	addwf	___flmul@prod+3,f
  6543  0A68  0826               	movf	___flmul@b+2,w
  6544  0A69  00AC               	movwf	??___flmul
  6545  0A6A  082C               	movf	??___flmul,w
  6546  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  6547  0A6C  0828               	movf	___flmul@a,w
  6548  0A6D  160A  158A  2370  120A  158A  	fcall	__Umul8_16
  6549  0A72  0871               	movf	?__Umul8_16+1,w
  6550  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  6551  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  6552  0A75  00BD               	movwf	___flmul@temp+1
  6553  0A76  0870               	movf	?__Umul8_16,w
  6554  0A77  00BC               	movwf	___flmul@temp
  6555  0A78  083C               	movf	___flmul@temp,w
  6556  0A79  00AC               	movwf	??___flmul
  6557  0A7A  01AD               	clrf	??___flmul+1
  6558  0A7B  01AE               	clrf	??___flmul+2
  6559  0A7C  01AF               	clrf	??___flmul+3
  6560  0A7D  082C               	movf	??___flmul,w
  6561  0A7E  07B2               	addwf	___flmul@grs,f
  6562  0A7F  082D               	movf	??___flmul+1,w
  6563  0A80  1103               	clrz
  6564  0A81  1803               	skipnc
  6565  0A82  3E01               	addlw	1
  6566  0A83  1D03               	btfss	3,2
  6567  0A84  07B3               	addwf	___flmul@grs+1,f
  6568  0A85  082E               	movf	??___flmul+2,w
  6569  0A86  1103               	clrz
  6570  0A87  1803               	skipnc
  6571  0A88  3E01               	addlw	1
  6572  0A89  1D03               	btfss	3,2
  6573  0A8A  07B4               	addwf	___flmul@grs+2,f
  6574  0A8B  082F               	movf	??___flmul+3,w
  6575  0A8C  1103               	clrz
  6576  0A8D  1803               	skipnc
  6577  0A8E  3E01               	addlw	1
  6578  0A8F  1D03               	btfss	3,2
  6579  0A90  07B5               	addwf	___flmul@grs+3,f
  6580  0A91  083D               	movf	___flmul@temp+1,w
  6581  0A92  00AC               	movwf	??___flmul
  6582  0A93  01AD               	clrf	??___flmul+1
  6583  0A94  01AE               	clrf	??___flmul+2
  6584  0A95  01AF               	clrf	??___flmul+3
  6585  0A96  082C               	movf	??___flmul,w
  6586  0A97  07B8               	addwf	___flmul@prod,f
  6587  0A98  082D               	movf	??___flmul+1,w
  6588  0A99  1103               	clrz
  6589  0A9A  1803               	skipnc
  6590  0A9B  3E01               	addlw	1
  6591  0A9C  1D03               	btfss	3,2
  6592  0A9D  07B9               	addwf	___flmul@prod+1,f
  6593  0A9E  082E               	movf	??___flmul+2,w
  6594  0A9F  1103               	clrz
  6595  0AA0  1803               	skipnc
  6596  0AA1  3E01               	addlw	1
  6597  0AA2  1D03               	btfss	3,2
  6598  0AA3  07BA               	addwf	___flmul@prod+2,f
  6599  0AA4  082F               	movf	??___flmul+3,w
  6600  0AA5  1103               	clrz
  6601  0AA6  1803               	skipnc
  6602  0AA7  3E01               	addlw	1
  6603  0AA8  1D03               	btfss	3,2
  6604  0AA9  07BB               	addwf	___flmul@prod+3,f
  6605  0AAA  3008               	movlw	8
  6606  0AAB  00AC               	movwf	??___flmul
  6607  0AAC                     u404_25:	
  6608  0AAC  1003               	clrc
  6609  0AAD  0DB2               	rlf	___flmul@grs,f
  6610  0AAE  0DB3               	rlf	___flmul@grs+1,f
  6611  0AAF  0DB4               	rlf	___flmul@grs+2,f
  6612  0AB0  0DB5               	rlf	___flmul@grs+3,f
  6613  0AB1  0BAC               	decfsz	??___flmul,f
  6614  0AB2  2AAC               	goto	u404_25
  6615  0AB3  0825               	movf	___flmul@b+1,w
  6616  0AB4  00AC               	movwf	??___flmul
  6617  0AB5  082C               	movf	??___flmul,w
  6618  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  6619  0AB7  0828               	movf	___flmul@a,w
  6620  0AB8  160A  158A  2370  120A  158A  	fcall	__Umul8_16
  6621  0ABD  0871               	movf	?__Umul8_16+1,w
  6622  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  6623  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  6624  0AC0  00BD               	movwf	___flmul@temp+1
  6625  0AC1  0870               	movf	?__Umul8_16,w
  6626  0AC2  00BC               	movwf	___flmul@temp
  6627  0AC3  083C               	movf	___flmul@temp,w
  6628  0AC4  00AC               	movwf	??___flmul
  6629  0AC5  083D               	movf	___flmul@temp+1,w
  6630  0AC6  00AD               	movwf	??___flmul+1
  6631  0AC7  01AE               	clrf	??___flmul+2
  6632  0AC8  01AF               	clrf	??___flmul+3
  6633  0AC9  082C               	movf	??___flmul,w
  6634  0ACA  07B2               	addwf	___flmul@grs,f
  6635  0ACB  082D               	movf	??___flmul+1,w
  6636  0ACC  1103               	clrz
  6637  0ACD  1803               	skipnc
  6638  0ACE  3E01               	addlw	1
  6639  0ACF  1D03               	btfss	3,2
  6640  0AD0  07B3               	addwf	___flmul@grs+1,f
  6641  0AD1  082E               	movf	??___flmul+2,w
  6642  0AD2  1103               	clrz
  6643  0AD3  1803               	skipnc
  6644  0AD4  3E01               	addlw	1
  6645  0AD5  1D03               	btfss	3,2
  6646  0AD6  07B4               	addwf	___flmul@grs+2,f
  6647  0AD7  082F               	movf	??___flmul+3,w
  6648  0AD8  1103               	clrz
  6649  0AD9  1803               	skipnc
  6650  0ADA  3E01               	addlw	1
  6651  0ADB  1D03               	btfss	3,2
  6652  0ADC  07B5               	addwf	___flmul@grs+3,f
  6653  0ADD  0824               	movf	___flmul@b,w
  6654  0ADE  00AC               	movwf	??___flmul
  6655  0ADF  082C               	movf	??___flmul,w
  6656  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  6657  0AE1  0829               	movf	___flmul@a+1,w
  6658  0AE2  160A  158A  2370  120A  158A  	fcall	__Umul8_16
  6659  0AE7  0871               	movf	?__Umul8_16+1,w
  6660  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  6661  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  6662  0AEA  00BD               	movwf	___flmul@temp+1
  6663  0AEB  0870               	movf	?__Umul8_16,w
  6664  0AEC  00BC               	movwf	___flmul@temp
  6665  0AED  083C               	movf	___flmul@temp,w
  6666  0AEE  00AC               	movwf	??___flmul
  6667  0AEF  083D               	movf	___flmul@temp+1,w
  6668  0AF0  00AD               	movwf	??___flmul+1
  6669  0AF1  01AE               	clrf	??___flmul+2
  6670  0AF2  01AF               	clrf	??___flmul+3
  6671  0AF3  082C               	movf	??___flmul,w
  6672  0AF4  07B2               	addwf	___flmul@grs,f
  6673  0AF5  082D               	movf	??___flmul+1,w
  6674  0AF6  1103               	clrz
  6675  0AF7  1803               	skipnc
  6676  0AF8  3E01               	addlw	1
  6677  0AF9  1D03               	btfss	3,2
  6678  0AFA  07B3               	addwf	___flmul@grs+1,f
  6679  0AFB  082E               	movf	??___flmul+2,w
  6680  0AFC  1103               	clrz
  6681  0AFD  1803               	skipnc
  6682  0AFE  3E01               	addlw	1
  6683  0AFF  1D03               	btfss	3,2
  6684  0B00  07B4               	addwf	___flmul@grs+2,f
  6685  0B01  082F               	movf	??___flmul+3,w
  6686  0B02  1103               	clrz
  6687  0B03  1803               	skipnc
  6688  0B04  3E01               	addlw	1
  6689  0B05  1D03               	btfss	3,2
  6690  0B06  07B5               	addwf	___flmul@grs+3,f
  6691  0B07  3008               	movlw	8
  6692  0B08  00AC               	movwf	??___flmul
  6693  0B09                     u407_25:	
  6694  0B09  1003               	clrc
  6695  0B0A  0DB2               	rlf	___flmul@grs,f
  6696  0B0B  0DB3               	rlf	___flmul@grs+1,f
  6697  0B0C  0DB4               	rlf	___flmul@grs+2,f
  6698  0B0D  0DB5               	rlf	___flmul@grs+3,f
  6699  0B0E  0BAC               	decfsz	??___flmul,f
  6700  0B0F  2B09               	goto	u407_25
  6701  0B10  0824               	movf	___flmul@b,w
  6702  0B11  00AC               	movwf	??___flmul
  6703  0B12  082C               	movf	??___flmul,w
  6704  0B13  00F0               	movwf	__Umul8_16@multiplicand
  6705  0B14  0828               	movf	___flmul@a,w
  6706  0B15  160A  158A  2370  120A  158A  	fcall	__Umul8_16
  6707  0B1A  0871               	movf	?__Umul8_16+1,w
  6708  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  6709  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  6710  0B1D  00BD               	movwf	___flmul@temp+1
  6711  0B1E  0870               	movf	?__Umul8_16,w
  6712  0B1F  00BC               	movwf	___flmul@temp
  6713  0B20  083C               	movf	___flmul@temp,w
  6714  0B21  00AC               	movwf	??___flmul
  6715  0B22  083D               	movf	___flmul@temp+1,w
  6716  0B23  00AD               	movwf	??___flmul+1
  6717  0B24  01AE               	clrf	??___flmul+2
  6718  0B25  01AF               	clrf	??___flmul+3
  6719  0B26  082C               	movf	??___flmul,w
  6720  0B27  07B2               	addwf	___flmul@grs,f
  6721  0B28  082D               	movf	??___flmul+1,w
  6722  0B29  1103               	clrz
  6723  0B2A  1803               	skipnc
  6724  0B2B  3E01               	addlw	1
  6725  0B2C  1D03               	btfss	3,2
  6726  0B2D  07B3               	addwf	___flmul@grs+1,f
  6727  0B2E  082E               	movf	??___flmul+2,w
  6728  0B2F  1103               	clrz
  6729  0B30  1803               	skipnc
  6730  0B31  3E01               	addlw	1
  6731  0B32  1D03               	btfss	3,2
  6732  0B33  07B4               	addwf	___flmul@grs+2,f
  6733  0B34  082F               	movf	??___flmul+3,w
  6734  0B35  1103               	clrz
  6735  0B36  1803               	skipnc
  6736  0B37  3E01               	addlw	1
  6737  0B38  1D03               	btfss	3,2
  6738  0B39  07B5               	addwf	___flmul@grs+3,f
  6739  0B3A  0825               	movf	___flmul@b+1,w
  6740  0B3B  00AC               	movwf	??___flmul
  6741  0B3C  082C               	movf	??___flmul,w
  6742  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  6743  0B3E  082A               	movf	___flmul@a+2,w
  6744  0B3F  160A  158A  2370  120A  158A  	fcall	__Umul8_16
  6745  0B44  0871               	movf	?__Umul8_16+1,w
  6746  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  6747  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  6748  0B47  00BD               	movwf	___flmul@temp+1
  6749  0B48  0870               	movf	?__Umul8_16,w
  6750  0B49  00BC               	movwf	___flmul@temp
  6751  0B4A  083C               	movf	___flmul@temp,w
  6752  0B4B  00AC               	movwf	??___flmul
  6753  0B4C  083D               	movf	___flmul@temp+1,w
  6754  0B4D  00AD               	movwf	??___flmul+1
  6755  0B4E  01AE               	clrf	??___flmul+2
  6756  0B4F  01AF               	clrf	??___flmul+3
  6757  0B50  082C               	movf	??___flmul,w
  6758  0B51  07B8               	addwf	___flmul@prod,f
  6759  0B52  082D               	movf	??___flmul+1,w
  6760  0B53  1103               	clrz
  6761  0B54  1803               	skipnc
  6762  0B55  3E01               	addlw	1
  6763  0B56  1D03               	btfss	3,2
  6764  0B57  07B9               	addwf	___flmul@prod+1,f
  6765  0B58  082E               	movf	??___flmul+2,w
  6766  0B59  1103               	clrz
  6767  0B5A  1803               	skipnc
  6768  0B5B  3E01               	addlw	1
  6769  0B5C  1D03               	btfss	3,2
  6770  0B5D  07BA               	addwf	___flmul@prod+2,f
  6771  0B5E  082F               	movf	??___flmul+3,w
  6772  0B5F  1103               	clrz
  6773  0B60  1803               	skipnc
  6774  0B61  3E01               	addlw	1
  6775  0B62  1D03               	btfss	3,2
  6776  0B63  07BB               	addwf	___flmul@prod+3,f
  6777  0B64  0826               	movf	___flmul@b+2,w
  6778  0B65  00AC               	movwf	??___flmul
  6779  0B66  082C               	movf	??___flmul,w
  6780  0B67  00F0               	movwf	__Umul8_16@multiplicand
  6781  0B68  0829               	movf	___flmul@a+1,w
  6782  0B69  160A  158A  2370  120A  158A  	fcall	__Umul8_16
  6783  0B6E  0871               	movf	?__Umul8_16+1,w
  6784  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  6785  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  6786  0B71  00BD               	movwf	___flmul@temp+1
  6787  0B72  0870               	movf	?__Umul8_16,w
  6788  0B73  00BC               	movwf	___flmul@temp
  6789  0B74  083C               	movf	___flmul@temp,w
  6790  0B75  00AC               	movwf	??___flmul
  6791  0B76  083D               	movf	___flmul@temp+1,w
  6792  0B77  00AD               	movwf	??___flmul+1
  6793  0B78  01AE               	clrf	??___flmul+2
  6794  0B79  01AF               	clrf	??___flmul+3
  6795  0B7A  082C               	movf	??___flmul,w
  6796  0B7B  07B8               	addwf	___flmul@prod,f
  6797  0B7C  082D               	movf	??___flmul+1,w
  6798  0B7D  1103               	clrz
  6799  0B7E  1803               	skipnc
  6800  0B7F  3E01               	addlw	1
  6801  0B80  1D03               	btfss	3,2
  6802  0B81  07B9               	addwf	___flmul@prod+1,f
  6803  0B82  082E               	movf	??___flmul+2,w
  6804  0B83  1103               	clrz
  6805  0B84  1803               	skipnc
  6806  0B85  3E01               	addlw	1
  6807  0B86  1D03               	btfss	3,2
  6808  0B87  07BA               	addwf	___flmul@prod+2,f
  6809  0B88  082F               	movf	??___flmul+3,w
  6810  0B89  1103               	clrz
  6811  0B8A  1803               	skipnc
  6812  0B8B  3E01               	addlw	1
  6813  0B8C  1D03               	btfss	3,2
  6814  0B8D  07BB               	addwf	___flmul@prod+3,f
  6815  0B8E  0826               	movf	___flmul@b+2,w
  6816  0B8F  00AC               	movwf	??___flmul
  6817  0B90  082C               	movf	??___flmul,w
  6818  0B91  00F0               	movwf	__Umul8_16@multiplicand
  6819  0B92  082A               	movf	___flmul@a+2,w
  6820  0B93  160A  158A  2370  120A  158A  	fcall	__Umul8_16
  6821  0B98  0871               	movf	?__Umul8_16+1,w
  6822  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  6823  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  6824  0B9B  00BD               	movwf	___flmul@temp+1
  6825  0B9C  0870               	movf	?__Umul8_16,w
  6826  0B9D  00BC               	movwf	___flmul@temp
  6827  0B9E  083C               	movf	___flmul@temp,w
  6828  0B9F  00AC               	movwf	??___flmul
  6829  0BA0  083D               	movf	___flmul@temp+1,w
  6830  0BA1  00AD               	movwf	??___flmul+1
  6831  0BA2  01AE               	clrf	??___flmul+2
  6832  0BA3  01AF               	clrf	??___flmul+3
  6833  0BA4  3008               	movlw	8
  6834  0BA5                     u411_25:	
  6835  0BA5  1003               	clrc
  6836  0BA6  0DAC               	rlf	??___flmul,f
  6837  0BA7  0DAD               	rlf	??___flmul+1,f
  6838  0BA8  0DAE               	rlf	??___flmul+2,f
  6839  0BA9  0DAF               	rlf	??___flmul+3,f
  6840  0BAA  3EFF               	addlw	-1
  6841  0BAB  1D03               	skipz
  6842  0BAC  2BA5               	goto	u411_25
  6843  0BAD  082C               	movf	??___flmul,w
  6844  0BAE  07B8               	addwf	___flmul@prod,f
  6845  0BAF  082D               	movf	??___flmul+1,w
  6846  0BB0  1103               	clrz
  6847  0BB1  1803               	skipnc
  6848  0BB2  3E01               	addlw	1
  6849  0BB3  1D03               	btfss	3,2
  6850  0BB4  07B9               	addwf	___flmul@prod+1,f
  6851  0BB5  082E               	movf	??___flmul+2,w
  6852  0BB6  1103               	clrz
  6853  0BB7  1803               	skipnc
  6854  0BB8  3E01               	addlw	1
  6855  0BB9  1D03               	btfss	3,2
  6856  0BBA  07BA               	addwf	___flmul@prod+2,f
  6857  0BBB  082F               	movf	??___flmul+3,w
  6858  0BBC  1103               	clrz
  6859  0BBD  1803               	skipnc
  6860  0BBE  3E01               	addlw	1
  6861  0BBF  1D03               	btfss	3,2
  6862  0BC0  07BB               	addwf	___flmul@prod+3,f
  6863  0BC1  0832               	movf	___flmul@grs,w
  6864  0BC2  00AC               	movwf	??___flmul
  6865  0BC3  0833               	movf	___flmul@grs+1,w
  6866  0BC4  00AD               	movwf	??___flmul+1
  6867  0BC5  0834               	movf	___flmul@grs+2,w
  6868  0BC6  00AE               	movwf	??___flmul+2
  6869  0BC7  0835               	movf	___flmul@grs+3,w
  6870  0BC8  00AF               	movwf	??___flmul+3
  6871  0BC9  3018               	movlw	24
  6872  0BCA                     u413_25:	
  6873  0BCA  1003               	clrc
  6874  0BCB  0CAF               	rrf	??___flmul+3,f
  6875  0BCC  0CAE               	rrf	??___flmul+2,f
  6876  0BCD  0CAD               	rrf	??___flmul+1,f
  6877  0BCE  0CAC               	rrf	??___flmul,f
  6878  0BCF  3EFF               	addlw	-1
  6879  0BD0  1D03               	skipz
  6880  0BD1  2BCA               	goto	u413_25
  6881  0BD2  082C               	movf	??___flmul,w
  6882  0BD3  07B8               	addwf	___flmul@prod,f
  6883  0BD4  082D               	movf	??___flmul+1,w
  6884  0BD5  1103               	clrz
  6885  0BD6  1803               	skipnc
  6886  0BD7  3E01               	addlw	1
  6887  0BD8  1D03               	btfss	3,2
  6888  0BD9  07B9               	addwf	___flmul@prod+1,f
  6889  0BDA  082E               	movf	??___flmul+2,w
  6890  0BDB  1103               	clrz
  6891  0BDC  1803               	skipnc
  6892  0BDD  3E01               	addlw	1
  6893  0BDE  1D03               	btfss	3,2
  6894  0BDF  07BA               	addwf	___flmul@prod+2,f
  6895  0BE0  082F               	movf	??___flmul+3,w
  6896  0BE1  1103               	clrz
  6897  0BE2  1803               	skipnc
  6898  0BE3  3E01               	addlw	1
  6899  0BE4  1D03               	btfss	3,2
  6900  0BE5  07BB               	addwf	___flmul@prod+3,f
  6901  0BE6  3008               	movlw	8
  6902  0BE7  00AC               	movwf	??___flmul
  6903  0BE8                     u415_25:	
  6904  0BE8  1003               	clrc
  6905  0BE9  0DB2               	rlf	___flmul@grs,f
  6906  0BEA  0DB3               	rlf	___flmul@grs+1,f
  6907  0BEB  0DB4               	rlf	___flmul@grs+2,f
  6908  0BEC  0DB5               	rlf	___flmul@grs+3,f
  6909  0BED  0BAC               	decfsz	??___flmul,f
  6910  0BEE  2BE8               	goto	u415_25
  6911  0BEF  0837               	movf	___flmul@bexp,w
  6912  0BF0  0736               	addwf	___flmul@aexp,w
  6913  0BF1  00AC               	movwf	??___flmul
  6914  0BF2  01AD               	clrf	??___flmul+1
  6915  0BF3  0DAD               	rlf	??___flmul+1,f
  6916  0BF4  082C               	movf	??___flmul,w
  6917  0BF5  3E82               	addlw	130
  6918  0BF6  00BC               	movwf	___flmul@temp
  6919  0BF7  082D               	movf	??___flmul+1,w
  6920  0BF8  1803               	skipnc
  6921  0BF9  3E01               	addlw	1
  6922  0BFA  3EFF               	addlw	255
  6923  0BFB  00BD               	movwf	___flmul@temp+1
  6924  0BFC                     i1l2701:	
  6925  0BFC  1BBA               	btfsc	___flmul@prod+2,7
  6926  0BFD  2C19               	goto	i1l2703
  6927  0BFE  3001               	movlw	1
  6928  0BFF  00AC               	movwf	??___flmul
  6929  0C00                     u416_25:	
  6930  0C00  1003               	clrc
  6931  0C01  0DB8               	rlf	___flmul@prod,f
  6932  0C02  0DB9               	rlf	___flmul@prod+1,f
  6933  0C03  0DBA               	rlf	___flmul@prod+2,f
  6934  0C04  0DBB               	rlf	___flmul@prod+3,f
  6935  0C05  0BAC               	decfsz	??___flmul,f
  6936  0C06  2C00               	goto	u416_25
  6937  0C07  1BB5               	btfsc	___flmul@grs+3,7
  6938  0C08  1438               	bsf	___flmul@prod,0
  6939  0C09  3001               	movlw	1
  6940  0C0A  00AC               	movwf	??___flmul
  6941  0C0B                     u418_25:	
  6942  0C0B  1003               	clrc
  6943  0C0C  0DB2               	rlf	___flmul@grs,f
  6944  0C0D  0DB3               	rlf	___flmul@grs+1,f
  6945  0C0E  0DB4               	rlf	___flmul@grs+2,f
  6946  0C0F  0DB5               	rlf	___flmul@grs+3,f
  6947  0C10  0BAC               	decfsz	??___flmul,f
  6948  0C11  2C0B               	goto	u418_25
  6949  0C12  30FF               	movlw	255
  6950  0C13  07BC               	addwf	___flmul@temp,f
  6951  0C14  1803               	skipnc
  6952  0C15  0ABD               	incf	___flmul@temp+1,f
  6953  0C16  30FF               	movlw	255
  6954  0C17  07BD               	addwf	___flmul@temp+1,f
  6955  0C18  2BFC               	goto	i1l2701
  6956  0C19                     i1l2703:	
  6957  0C19  01B6               	clrf	___flmul@aexp
  6958  0C1A  1FB5               	btfss	___flmul@grs+3,7
  6959  0C1B  2C32               	goto	i1l2713
  6960  0C1C  30FF               	movlw	255
  6961  0C1D  0532               	andwf	___flmul@grs,w
  6962  0C1E  00AC               	movwf	??___flmul
  6963  0C1F  30FF               	movlw	255
  6964  0C20  0533               	andwf	___flmul@grs+1,w
  6965  0C21  00AD               	movwf	??___flmul+1
  6966  0C22  30FF               	movlw	255
  6967  0C23  0534               	andwf	___flmul@grs+2,w
  6968  0C24  00AE               	movwf	??___flmul+2
  6969  0C25  307F               	movlw	127
  6970  0C26  0535               	andwf	___flmul@grs+3,w
  6971  0C27  00AF               	movwf	??___flmul+3
  6972  0C28  082F               	movf	??___flmul+3,w
  6973  0C29  042E               	iorwf	??___flmul+2,w
  6974  0C2A  042D               	iorwf	??___flmul+1,w
  6975  0C2B  042C               	iorwf	??___flmul,w
  6976  0C2C  1903               	skipnz
  6977  0C2D  1838               	btfsc	___flmul@prod,0
  6978  0C2E  2C30               	goto	i1l2709
  6979  0C2F  2C32               	goto	i1l2713
  6980  0C30                     i1l2709:	
  6981  0C30  01B6               	clrf	___flmul@aexp
  6982  0C31  0AB6               	incf	___flmul@aexp,f
  6983  0C32                     i1l2713:	
  6984  0C32  0836               	movf	___flmul@aexp,w
  6985  0C33  1903               	btfsc	3,2
  6986  0C34  2C64               	goto	i1l2723
  6987  0C35  3001               	movlw	1
  6988  0C36  07B8               	addwf	___flmul@prod,f
  6989  0C37  3000               	movlw	0
  6990  0C38  1803               	skipnc
  6991  0C39  3001               	movlw	1
  6992  0C3A  07B9               	addwf	___flmul@prod+1,f
  6993  0C3B  3000               	movlw	0
  6994  0C3C  1803               	skipnc
  6995  0C3D  3001               	movlw	1
  6996  0C3E  07BA               	addwf	___flmul@prod+2,f
  6997  0C3F  3000               	movlw	0
  6998  0C40  1803               	skipnc
  6999  0C41  3001               	movlw	1
  7000  0C42  07BB               	addwf	___flmul@prod+3,f
  7001  0C43  1C3B               	btfss	___flmul@prod+3,0
  7002  0C44  2C64               	goto	i1l2723
  7003  0C45  0838               	movf	___flmul@prod,w
  7004  0C46  00AC               	movwf	??___flmul
  7005  0C47  0839               	movf	___flmul@prod+1,w
  7006  0C48  00AD               	movwf	??___flmul+1
  7007  0C49  083A               	movf	___flmul@prod+2,w
  7008  0C4A  00AE               	movwf	??___flmul+2
  7009  0C4B  083B               	movf	___flmul@prod+3,w
  7010  0C4C  00AF               	movwf	??___flmul+3
  7011  0C4D  3001               	movlw	1
  7012  0C4E  00B0               	movwf	??___flmul+4
  7013  0C4F                     u425_25:	
  7014  0C4F  0D2F               	rlf	??___flmul+3,w
  7015  0C50  0CAF               	rrf	??___flmul+3,f
  7016  0C51  0CAE               	rrf	??___flmul+2,f
  7017  0C52  0CAD               	rrf	??___flmul+1,f
  7018  0C53  0CAC               	rrf	??___flmul,f
  7019  0C54  0BB0               	decfsz	??___flmul+4,f
  7020  0C55  2C4F               	goto	u425_25
  7021  0C56  082F               	movf	??___flmul+3,w
  7022  0C57  00BB               	movwf	___flmul@prod+3
  7023  0C58  082E               	movf	??___flmul+2,w
  7024  0C59  00BA               	movwf	___flmul@prod+2
  7025  0C5A  082D               	movf	??___flmul+1,w
  7026  0C5B  00B9               	movwf	___flmul@prod+1
  7027  0C5C  082C               	movf	??___flmul,w
  7028  0C5D  00B8               	movwf	___flmul@prod
  7029  0C5E  3001               	movlw	1
  7030  0C5F  07BC               	addwf	___flmul@temp,f
  7031  0C60  1803               	skipnc
  7032  0C61  0ABD               	incf	___flmul@temp+1,f
  7033  0C62  3000               	movlw	0
  7034  0C63  07BD               	addwf	___flmul@temp+1,f
  7035  0C64                     i1l2723:	
  7036  0C64  083D               	movf	___flmul@temp+1,w
  7037  0C65  3A80               	xorlw	128
  7038  0C66  00FF               	movwf	127
  7039  0C67  3080               	movlw	128
  7040  0C68  027F               	subwf	127,w
  7041  0C69  1D03               	skipz
  7042  0C6A  2C6D               	goto	u426_25
  7043  0C6B  30FF               	movlw	255
  7044  0C6C  023C               	subwf	___flmul@temp,w
  7045  0C6D                     u426_25:	
  7046  0C6D  1C03               	skipc
  7047  0C6E  2C7A               	goto	i1l2727
  7048  0C6F  307F               	movlw	127
  7049  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  7050  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  7051  0C72  00BB               	movwf	___flmul@prod+3
  7052  0C73  3080               	movlw	128
  7053  0C74  00BA               	movwf	___flmul@prod+2
  7054  0C75  3000               	movlw	0
  7055  0C76  00B9               	movwf	___flmul@prod+1
  7056  0C77  3000               	movlw	0
  7057  0C78  00B8               	movwf	___flmul@prod
  7058  0C79  2CAA               	goto	i1l728
  7059  0C7A                     i1l2727:	
  7060  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  7061  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  7062  0C7C  083D               	movf	___flmul@temp+1,w
  7063  0C7D  3A80               	xorlw	128
  7064  0C7E  00FF               	movwf	127
  7065  0C7F  3080               	movlw	128
  7066  0C80  027F               	subwf	127,w
  7067  0C81  1D03               	skipz
  7068  0C82  2C85               	goto	u427_25
  7069  0C83  3001               	movlw	1
  7070  0C84  023C               	subwf	___flmul@temp,w
  7071  0C85                     u427_25:	
  7072  0C85  1803               	skipnc
  7073  0C86  2C93               	goto	i1l2733
  7074  0C87  3000               	movlw	0
  7075  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  7076  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  7077  0C8A  00BB               	movwf	___flmul@prod+3
  7078  0C8B  3000               	movlw	0
  7079  0C8C  00BA               	movwf	___flmul@prod+2
  7080  0C8D  3000               	movlw	0
  7081  0C8E  00B9               	movwf	___flmul@prod+1
  7082  0C8F  3000               	movlw	0
  7083  0C90  00B8               	movwf	___flmul@prod
  7084  0C91  01B1               	clrf	___flmul@sign
  7085  0C92  2CAA               	goto	i1l728
  7086  0C93                     i1l2733:	
  7087  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  7088  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  7089  0C95  083C               	movf	___flmul@temp,w
  7090  0C96  00AC               	movwf	??___flmul
  7091  0C97  082C               	movf	??___flmul,w
  7092  0C98  00B7               	movwf	___flmul@bexp
  7093  0C99  30FF               	movlw	255
  7094  0C9A  05B8               	andwf	___flmul@prod,f
  7095  0C9B  30FF               	movlw	255
  7096  0C9C  05B9               	andwf	___flmul@prod+1,f
  7097  0C9D  307F               	movlw	127
  7098  0C9E  05BA               	andwf	___flmul@prod+2,f
  7099  0C9F  3000               	movlw	0
  7100  0CA0  05BB               	andwf	___flmul@prod+3,f
  7101  0CA1  1837               	btfsc	___flmul@bexp,0
  7102  0CA2  17BA               	bsf	___flmul@prod+2,7
  7103  0CA3  0837               	movf	___flmul@bexp,w
  7104  0CA4  00AC               	movwf	??___flmul
  7105  0CA5  1003               	clrc
  7106  0CA6  0C2C               	rrf	??___flmul,w
  7107  0CA7  00AD               	movwf	??___flmul+1
  7108  0CA8  082D               	movf	??___flmul+1,w
  7109  0CA9  00BB               	movwf	___flmul@prod+3
  7110  0CAA                     i1l728:	
  7111  0CAA  0831               	movf	___flmul@sign,w
  7112  0CAB  00AC               	movwf	??___flmul
  7113  0CAC  082C               	movf	??___flmul,w
  7114  0CAD  04BB               	iorwf	___flmul@prod+3,f
  7115  0CAE  083B               	movf	___flmul@prod+3,w
  7116  0CAF  00A7               	movwf	?___flmul+3
  7117  0CB0  083A               	movf	___flmul@prod+2,w
  7118  0CB1  00A6               	movwf	?___flmul+2
  7119  0CB2  0839               	movf	___flmul@prod+1,w
  7120  0CB3  00A5               	movwf	?___flmul+1
  7121  0CB4  0838               	movf	___flmul@prod,w
  7122  0CB5  00A4               	movwf	?___flmul
  7123  0CB6  0008               	return
  7124  0CB7                     __end_of___flmul:	
  7125                           
  7126                           	psect	text25
  7127  1B70                     __ptext25:	
  7128 ;; *************** function __Umul8_16 *****************
  7129 ;; Defined at:
  7130 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  multiplier      1    wreg     unsigned char 
  7133 ;;  multiplicand    1    0[COMMON] unsigned char 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  multiplier      1    8[COMMON] unsigned char 
  7136 ;;  word_mpld       2    6[COMMON] unsigned int 
  7137 ;;  product         2    4[COMMON] unsigned int 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  2    0[COMMON] unsigned int 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7147 ;;      Params:         2       0       0       0       0
  7148 ;;      Locals:         5       0       0       0       0
  7149 ;;      Temps:          2       0       0       0       0
  7150 ;;      Totals:         9       0       0       0       0
  7151 ;;Total ram usage:        9 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		___flmul
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           
  7161                           ;psect for function __Umul8_16
  7162  1B70                     __Umul8_16:	
  7163                           
  7164                           ;incstack = 0
  7165                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7166                           ;__Umul8_16@multiplier stored from wreg
  7167  1B70  00F8               	movwf	__Umul8_16@multiplier
  7168  1B71  01F4               	clrf	__Umul8_16@product
  7169  1B72  01F5               	clrf	__Umul8_16@product+1
  7170  1B73  0870               	movf	__Umul8_16@multiplicand,w
  7171  1B74  00F2               	movwf	??__Umul8_16
  7172  1B75  01F3               	clrf	??__Umul8_16+1
  7173  1B76  0872               	movf	??__Umul8_16,w
  7174  1B77  00F6               	movwf	__Umul8_16@word_mpld
  7175  1B78  0873               	movf	??__Umul8_16+1,w
  7176  1B79  00F7               	movwf	__Umul8_16@word_mpld+1
  7177  1B7A                     i1l2261:	
  7178  1B7A  1C78               	btfss	__Umul8_16@multiplier,0
  7179  1B7B  2B82               	goto	i1l777
  7180  1B7C  0876               	movf	__Umul8_16@word_mpld,w
  7181  1B7D  07F4               	addwf	__Umul8_16@product,f
  7182  1B7E  1803               	skipnc
  7183  1B7F  0AF5               	incf	__Umul8_16@product+1,f
  7184  1B80  0877               	movf	__Umul8_16@word_mpld+1,w
  7185  1B81  07F5               	addwf	__Umul8_16@product+1,f
  7186  1B82                     i1l777:	
  7187  1B82  3001               	movlw	1
  7188  1B83                     u308_25:	
  7189  1B83  1003               	clrc
  7190  1B84  0DF6               	rlf	__Umul8_16@word_mpld,f
  7191  1B85  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7192  1B86  3EFF               	addlw	-1
  7193  1B87  1D03               	skipz
  7194  1B88  2B83               	goto	u308_25
  7195  1B89  1003               	clrc
  7196  1B8A  0CF8               	rrf	__Umul8_16@multiplier,f
  7197  1B8B  0878               	movf	__Umul8_16@multiplier,w
  7198  1B8C  1D03               	btfss	3,2
  7199  1B8D  2B7A               	goto	i1l2261
  7200  1B8E  0875               	movf	__Umul8_16@product+1,w
  7201  1B8F  00F1               	movwf	?__Umul8_16+1
  7202  1B90  0874               	movf	__Umul8_16@product,w
  7203  1B91  00F0               	movwf	?__Umul8_16
  7204  1B92  0008               	return
  7205  1B93                     __end_of__Umul8_16:	
  7206                           
  7207                           	psect	text26
  7208  127D                     __ptext26:	
  7209 ;; *************** function __tdiv_to_l_ *****************
  7210 ;; Defined at:
  7211 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  f1              4    0[COMMON] float 
  7214 ;;  f2              4    4[COMMON] float 
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;  quot            4    0[BANK0 ] unsigned long 
  7217 ;;  exp1            1    5[BANK0 ] unsigned char 
  7218 ;;  cntr            1    4[BANK0 ] unsigned char 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  4    0[COMMON] unsigned long 
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7228 ;;      Params:         8       0       0       0       0
  7229 ;;      Locals:         0       6       0       0       0
  7230 ;;      Temps:          4       0       0       0       0
  7231 ;;      Totals:        12       6       0       0       0
  7232 ;;Total ram usage:       18 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_sprintf
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           
  7242                           ;psect for function __tdiv_to_l_
  7243  127D                     __tdiv_to_l_:	
  7244                           
  7245                           ;incstack = 0
  7246                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7247  127D  0870               	movf	__tdiv_to_l_@f1,w
  7248  127E  00F8               	movwf	??__tdiv_to_l_
  7249  127F  0871               	movf	__tdiv_to_l_@f1+1,w
  7250  1280  00F9               	movwf	??__tdiv_to_l_+1
  7251  1281  0872               	movf	__tdiv_to_l_@f1+2,w
  7252  1282  00FA               	movwf	??__tdiv_to_l_+2
  7253  1283  1003               	clrc
  7254  1284  0D79               	rlf	??__tdiv_to_l_+1,w
  7255  1285  0D7A               	rlf	??__tdiv_to_l_+2,w
  7256  1286  00FB               	movwf	??__tdiv_to_l_+3
  7257  1287  087B               	movf	??__tdiv_to_l_+3,w
  7258  1288  1283               	bcf	3,5	;RP0=0, select bank0
  7259  1289  1303               	bcf	3,6	;RP1=0, select bank0
  7260  128A  00A5               	movwf	__tdiv_to_l_@exp1
  7261  128B  0825               	movf	__tdiv_to_l_@exp1,w
  7262  128C  1D03               	btfss	3,2
  7263  128D  2A97               	goto	i1l2849
  7264  128E                     i1l2845:	
  7265  128E  3000               	movlw	0
  7266  128F  00F3               	movwf	?__tdiv_to_l_+3
  7267  1290  3000               	movlw	0
  7268  1291  00F2               	movwf	?__tdiv_to_l_+2
  7269  1292  3000               	movlw	0
  7270  1293  00F1               	movwf	?__tdiv_to_l_+1
  7271  1294  3000               	movlw	0
  7272  1295  00F0               	movwf	?__tdiv_to_l_
  7273  1296  0008               	return
  7274  1297                     i1l2849:	
  7275  1297  0874               	movf	__tdiv_to_l_@f2,w
  7276  1298  00F8               	movwf	??__tdiv_to_l_
  7277  1299  0875               	movf	__tdiv_to_l_@f2+1,w
  7278  129A  00F9               	movwf	??__tdiv_to_l_+1
  7279  129B  0876               	movf	__tdiv_to_l_@f2+2,w
  7280  129C  00FA               	movwf	??__tdiv_to_l_+2
  7281  129D  1003               	clrc
  7282  129E  0D79               	rlf	??__tdiv_to_l_+1,w
  7283  129F  0D7A               	rlf	??__tdiv_to_l_+2,w
  7284  12A0  00FB               	movwf	??__tdiv_to_l_+3
  7285  12A1  087B               	movf	??__tdiv_to_l_+3,w
  7286  12A2  00A4               	movwf	__tdiv_to_l_@cntr
  7287  12A3  0824               	movf	__tdiv_to_l_@cntr,w
  7288  12A4  1903               	btfsc	3,2
  7289  12A5  2A8E               	goto	i1l2845
  7290  12A6  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7291  12A7  30FF               	movlw	255
  7292  12A8  05F0               	andwf	__tdiv_to_l_@f1,f
  7293  12A9  30FF               	movlw	255
  7294  12AA  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7295  12AB  3000               	movlw	0
  7296  12AC  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7297  12AD  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7298  12AE  30FF               	movlw	255
  7299  12AF  05F4               	andwf	__tdiv_to_l_@f2,f
  7300  12B0  30FF               	movlw	255
  7301  12B1  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7302  12B2  3000               	movlw	0
  7303  12B3  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7304  12B4  3000               	movlw	0
  7305  12B5  00A3               	movwf	__tdiv_to_l_@quot+3
  7306  12B6  3000               	movlw	0
  7307  12B7  00A2               	movwf	__tdiv_to_l_@quot+2
  7308  12B8  3000               	movlw	0
  7309  12B9  00A1               	movwf	__tdiv_to_l_@quot+1
  7310  12BA  3000               	movlw	0
  7311  12BB  00A0               	movwf	__tdiv_to_l_@quot
  7312  12BC  307F               	movlw	127
  7313  12BD  02A5               	subwf	__tdiv_to_l_@exp1,f
  7314  12BE  3098               	movlw	152
  7315  12BF  0724               	addwf	__tdiv_to_l_@cntr,w
  7316  12C0  00F8               	movwf	??__tdiv_to_l_
  7317  12C1  0878               	movf	??__tdiv_to_l_,w
  7318  12C2  02A5               	subwf	__tdiv_to_l_@exp1,f
  7319  12C3  3018               	movlw	24
  7320  12C4  00F8               	movwf	??__tdiv_to_l_
  7321  12C5  0878               	movf	??__tdiv_to_l_,w
  7322  12C6  00A4               	movwf	__tdiv_to_l_@cntr
  7323  12C7                     i1l2863:	
  7324  12C7  3001               	movlw	1
  7325  12C8  00F8               	movwf	??__tdiv_to_l_
  7326  12C9                     u461_25:	
  7327  12C9  1003               	clrc
  7328  12CA  0DA0               	rlf	__tdiv_to_l_@quot,f
  7329  12CB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7330  12CC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7331  12CD  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7332  12CE  0BF8               	decfsz	??__tdiv_to_l_,f
  7333  12CF  2AC9               	goto	u461_25
  7334  12D0  0876               	movf	__tdiv_to_l_@f2+2,w
  7335  12D1  0272               	subwf	__tdiv_to_l_@f1+2,w
  7336  12D2  1D03               	skipz
  7337  12D3  2ADA               	goto	u462_25
  7338  12D4  0875               	movf	__tdiv_to_l_@f2+1,w
  7339  12D5  0271               	subwf	__tdiv_to_l_@f1+1,w
  7340  12D6  1D03               	skipz
  7341  12D7  2ADA               	goto	u462_25
  7342  12D8  0874               	movf	__tdiv_to_l_@f2,w
  7343  12D9  0270               	subwf	__tdiv_to_l_@f1,w
  7344  12DA                     u462_25:	
  7345  12DA  1C03               	skipc
  7346  12DB  2AE7               	goto	i1l2871
  7347  12DC  0874               	movf	__tdiv_to_l_@f2,w
  7348  12DD  02F0               	subwf	__tdiv_to_l_@f1,f
  7349  12DE  0875               	movf	__tdiv_to_l_@f2+1,w
  7350  12DF  1C03               	skipc
  7351  12E0  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7352  12E1  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7353  12E2  0876               	movf	__tdiv_to_l_@f2+2,w
  7354  12E3  1C03               	skipc
  7355  12E4  0A76               	incf	__tdiv_to_l_@f2+2,w
  7356  12E5  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7357  12E6  1420               	bsf	__tdiv_to_l_@quot,0
  7358  12E7                     i1l2871:	
  7359  12E7  3001               	movlw	1
  7360  12E8                     u463_25:	
  7361  12E8  1003               	clrc
  7362  12E9  0DF0               	rlf	__tdiv_to_l_@f1,f
  7363  12EA  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7364  12EB  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7365  12EC  3EFF               	addlw	-1
  7366  12ED  1D03               	skipz
  7367  12EE  2AE8               	goto	u463_25
  7368  12EF  3001               	movlw	1
  7369  12F0  02A4               	subwf	__tdiv_to_l_@cntr,f
  7370  12F1  1D03               	btfss	3,2
  7371  12F2  2AC7               	goto	i1l2863
  7372  12F3  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7373  12F4  2B0A               	goto	i1l2883
  7374  12F5  0825               	movf	__tdiv_to_l_@exp1,w
  7375  12F6  3A80               	xorlw	128
  7376  12F7  3E97               	addlw	151
  7377  12F8  1C03               	btfss	3,0
  7378  12F9  2A8E               	goto	i1l2845
  7379  12FA                     i1l2881:	
  7380  12FA  3001               	movlw	1
  7381  12FB                     u467_25:	
  7382  12FB  1003               	clrc
  7383  12FC  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7384  12FD  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7385  12FE  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7386  12FF  0CA0               	rrf	__tdiv_to_l_@quot,f
  7387  1300  3EFF               	addlw	-1
  7388  1301  1D03               	skipz
  7389  1302  2AFB               	goto	u467_25
  7390  1303  3001               	movlw	1
  7391  1304  00F8               	movwf	??__tdiv_to_l_
  7392  1305  0878               	movf	??__tdiv_to_l_,w
  7393  1306  07A5               	addwf	__tdiv_to_l_@exp1,f
  7394  1307  1903               	btfsc	3,2
  7395  1308  2B1D               	goto	i1l2891
  7396  1309  2AFA               	goto	i1l2881
  7397  130A                     i1l2883:	
  7398  130A  3018               	movlw	24
  7399  130B  0225               	subwf	__tdiv_to_l_@exp1,w
  7400  130C  1803               	btfsc	3,0
  7401  130D  2A8E               	goto	i1l2845
  7402  130E                     i1l521:	
  7403  130E  0825               	movf	__tdiv_to_l_@exp1,w
  7404  130F  1903               	btfsc	3,2
  7405  1310  2B1D               	goto	i1l2891
  7406  1311  3001               	movlw	1
  7407  1312  00F8               	movwf	??__tdiv_to_l_
  7408  1313                     u470_25:	
  7409  1313  1003               	clrc
  7410  1314  0DA0               	rlf	__tdiv_to_l_@quot,f
  7411  1315  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7412  1316  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7413  1317  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7414  1318  0BF8               	decfsz	??__tdiv_to_l_,f
  7415  1319  2B13               	goto	u470_25
  7416  131A  3001               	movlw	1
  7417  131B  02A5               	subwf	__tdiv_to_l_@exp1,f
  7418  131C  2B0E               	goto	i1l521
  7419  131D                     i1l2891:	
  7420  131D  0823               	movf	__tdiv_to_l_@quot+3,w
  7421  131E  00F3               	movwf	?__tdiv_to_l_+3
  7422  131F  0822               	movf	__tdiv_to_l_@quot+2,w
  7423  1320  00F2               	movwf	?__tdiv_to_l_+2
  7424  1321  0821               	movf	__tdiv_to_l_@quot+1,w
  7425  1322  00F1               	movwf	?__tdiv_to_l_+1
  7426  1323  0820               	movf	__tdiv_to_l_@quot,w
  7427  1324  00F0               	movwf	?__tdiv_to_l_
  7428  1325  0008               	return
  7429  1326                     __end_of__tdiv_to_l_:	
  7430                           
  7431                           	psect	text27
  7432  1326                     __ptext27:	
  7433 ;; *************** function __div_to_l_ *****************
  7434 ;; Defined at:
  7435 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  f1              4    0[COMMON] unsigned long 
  7438 ;;  f2              4    4[COMMON] unsigned long 
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;  quot            4    0[BANK0 ] unsigned long 
  7441 ;;  exp1            1    5[BANK0 ] unsigned char 
  7442 ;;  cntr            1    4[BANK0 ] unsigned char 
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  4    0[COMMON] unsigned long 
  7445 ;; Registers used:
  7446 ;;		wreg, status,2, status,0
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7452 ;;      Params:         8       0       0       0       0
  7453 ;;      Locals:         0       6       0       0       0
  7454 ;;      Temps:          1       0       0       0       0
  7455 ;;      Totals:         9       6       0       0       0
  7456 ;;Total ram usage:       15 bytes
  7457 ;; Hardware stack levels used:    1
  7458 ;; This function calls:
  7459 ;;		Nothing
  7460 ;; This function is called by:
  7461 ;;		_sprintf
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           
  7466                           ;psect for function __div_to_l_
  7467  1326                     __div_to_l_:	
  7468                           
  7469                           ;incstack = 0
  7470                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7471  1326  1003               	clrc
  7472  1327  0D72               	rlf	__div_to_l_@f1+2,w
  7473  1328  0D73               	rlf	__div_to_l_@f1+3,w
  7474  1329  00F8               	movwf	??__div_to_l_
  7475  132A  0878               	movf	??__div_to_l_,w
  7476  132B  1283               	bcf	3,5	;RP0=0, select bank0
  7477  132C  1303               	bcf	3,6	;RP1=0, select bank0
  7478  132D  00A5               	movwf	__div_to_l_@exp1
  7479  132E  0825               	movf	__div_to_l_@exp1,w
  7480  132F  1D03               	btfss	3,2
  7481  1330  2B3A               	goto	i1l2901
  7482  1331                     i1l2897:	
  7483  1331  3000               	movlw	0
  7484  1332  00F3               	movwf	?__div_to_l_+3
  7485  1333  3000               	movlw	0
  7486  1334  00F2               	movwf	?__div_to_l_+2
  7487  1335  3000               	movlw	0
  7488  1336  00F1               	movwf	?__div_to_l_+1
  7489  1337  3000               	movlw	0
  7490  1338  00F0               	movwf	?__div_to_l_
  7491  1339  0008               	return
  7492  133A                     i1l2901:	
  7493  133A  1003               	clrc
  7494  133B  0D76               	rlf	__div_to_l_@f2+2,w
  7495  133C  0D77               	rlf	__div_to_l_@f2+3,w
  7496  133D  00F8               	movwf	??__div_to_l_
  7497  133E  0878               	movf	??__div_to_l_,w
  7498  133F  00A4               	movwf	__div_to_l_@cntr
  7499  1340  0824               	movf	__div_to_l_@cntr,w
  7500  1341  1903               	btfsc	3,2
  7501  1342  2B31               	goto	i1l2897
  7502  1343  17F2               	bsf	__div_to_l_@f1+2,7
  7503  1344  30FF               	movlw	255
  7504  1345  05F0               	andwf	__div_to_l_@f1,f
  7505  1346  30FF               	movlw	255
  7506  1347  05F1               	andwf	__div_to_l_@f1+1,f
  7507  1348  30FF               	movlw	255
  7508  1349  05F2               	andwf	__div_to_l_@f1+2,f
  7509  134A  3000               	movlw	0
  7510  134B  05F3               	andwf	__div_to_l_@f1+3,f
  7511  134C  17F6               	bsf	__div_to_l_@f2+2,7
  7512  134D  30FF               	movlw	255
  7513  134E  05F4               	andwf	__div_to_l_@f2,f
  7514  134F  30FF               	movlw	255
  7515  1350  05F5               	andwf	__div_to_l_@f2+1,f
  7516  1351  30FF               	movlw	255
  7517  1352  05F6               	andwf	__div_to_l_@f2+2,f
  7518  1353  3000               	movlw	0
  7519  1354  05F7               	andwf	__div_to_l_@f2+3,f
  7520  1355  3000               	movlw	0
  7521  1356  00A3               	movwf	__div_to_l_@quot+3
  7522  1357  3000               	movlw	0
  7523  1358  00A2               	movwf	__div_to_l_@quot+2
  7524  1359  3000               	movlw	0
  7525  135A  00A1               	movwf	__div_to_l_@quot+1
  7526  135B  3000               	movlw	0
  7527  135C  00A0               	movwf	__div_to_l_@quot
  7528  135D  307F               	movlw	127
  7529  135E  02A5               	subwf	__div_to_l_@exp1,f
  7530  135F  30A0               	movlw	160
  7531  1360  0724               	addwf	__div_to_l_@cntr,w
  7532  1361  00F8               	movwf	??__div_to_l_
  7533  1362  0878               	movf	??__div_to_l_,w
  7534  1363  02A5               	subwf	__div_to_l_@exp1,f
  7535  1364  3020               	movlw	32
  7536  1365  00F8               	movwf	??__div_to_l_
  7537  1366  0878               	movf	??__div_to_l_,w
  7538  1367  00A4               	movwf	__div_to_l_@cntr
  7539  1368                     i1l2915:	
  7540  1368  3001               	movlw	1
  7541  1369  00F8               	movwf	??__div_to_l_
  7542  136A                     u474_25:	
  7543  136A  1003               	clrc
  7544  136B  0DA0               	rlf	__div_to_l_@quot,f
  7545  136C  0DA1               	rlf	__div_to_l_@quot+1,f
  7546  136D  0DA2               	rlf	__div_to_l_@quot+2,f
  7547  136E  0DA3               	rlf	__div_to_l_@quot+3,f
  7548  136F  0BF8               	decfsz	??__div_to_l_,f
  7549  1370  2B6A               	goto	u474_25
  7550  1371  0877               	movf	__div_to_l_@f2+3,w
  7551  1372  0273               	subwf	__div_to_l_@f1+3,w
  7552  1373  1D03               	skipz
  7553  1374  2B7F               	goto	u475_25
  7554  1375  0876               	movf	__div_to_l_@f2+2,w
  7555  1376  0272               	subwf	__div_to_l_@f1+2,w
  7556  1377  1D03               	skipz
  7557  1378  2B7F               	goto	u475_25
  7558  1379  0875               	movf	__div_to_l_@f2+1,w
  7559  137A  0271               	subwf	__div_to_l_@f1+1,w
  7560  137B  1D03               	skipz
  7561  137C  2B7F               	goto	u475_25
  7562  137D  0874               	movf	__div_to_l_@f2,w
  7563  137E  0270               	subwf	__div_to_l_@f1,w
  7564  137F                     u475_25:	
  7565  137F  1C03               	skipc
  7566  1380  2B90               	goto	i1l2923
  7567  1381  0874               	movf	__div_to_l_@f2,w
  7568  1382  02F0               	subwf	__div_to_l_@f1,f
  7569  1383  0875               	movf	__div_to_l_@f2+1,w
  7570  1384  1C03               	skipc
  7571  1385  0F75               	incfsz	__div_to_l_@f2+1,w
  7572  1386  02F1               	subwf	__div_to_l_@f1+1,f
  7573  1387  0876               	movf	__div_to_l_@f2+2,w
  7574  1388  1C03               	skipc
  7575  1389  0F76               	incfsz	__div_to_l_@f2+2,w
  7576  138A  02F2               	subwf	__div_to_l_@f1+2,f
  7577  138B  0877               	movf	__div_to_l_@f2+3,w
  7578  138C  1C03               	skipc
  7579  138D  0F77               	incfsz	__div_to_l_@f2+3,w
  7580  138E  02F3               	subwf	__div_to_l_@f1+3,f
  7581  138F  1420               	bsf	__div_to_l_@quot,0
  7582  1390                     i1l2923:	
  7583  1390  3001               	movlw	1
  7584  1391  00F8               	movwf	??__div_to_l_
  7585  1392                     u476_25:	
  7586  1392  1003               	clrc
  7587  1393  0DF0               	rlf	__div_to_l_@f1,f
  7588  1394  0DF1               	rlf	__div_to_l_@f1+1,f
  7589  1395  0DF2               	rlf	__div_to_l_@f1+2,f
  7590  1396  0DF3               	rlf	__div_to_l_@f1+3,f
  7591  1397  0BF8               	decfsz	??__div_to_l_,f
  7592  1398  2B92               	goto	u476_25
  7593  1399  3001               	movlw	1
  7594  139A  02A4               	subwf	__div_to_l_@cntr,f
  7595  139B  1D03               	btfss	3,2
  7596  139C  2B68               	goto	i1l2915
  7597  139D  1FA5               	btfss	__div_to_l_@exp1,7
  7598  139E  2BB4               	goto	i1l2935
  7599  139F  0825               	movf	__div_to_l_@exp1,w
  7600  13A0  3A80               	xorlw	128
  7601  13A1  3E9F               	addlw	159
  7602  13A2  1C03               	btfss	3,0
  7603  13A3  2B31               	goto	i1l2897
  7604  13A4                     i1l2933:	
  7605  13A4  3001               	movlw	1
  7606  13A5                     u480_25:	
  7607  13A5  1003               	clrc
  7608  13A6  0CA3               	rrf	__div_to_l_@quot+3,f
  7609  13A7  0CA2               	rrf	__div_to_l_@quot+2,f
  7610  13A8  0CA1               	rrf	__div_to_l_@quot+1,f
  7611  13A9  0CA0               	rrf	__div_to_l_@quot,f
  7612  13AA  3EFF               	addlw	-1
  7613  13AB  1D03               	skipz
  7614  13AC  2BA5               	goto	u480_25
  7615  13AD  3001               	movlw	1
  7616  13AE  00F8               	movwf	??__div_to_l_
  7617  13AF  0878               	movf	??__div_to_l_,w
  7618  13B0  07A5               	addwf	__div_to_l_@exp1,f
  7619  13B1  1903               	btfsc	3,2
  7620  13B2  2BC7               	goto	i1l2943
  7621  13B3  2BA4               	goto	i1l2933
  7622  13B4                     i1l2935:	
  7623  13B4  3020               	movlw	32
  7624  13B5  0225               	subwf	__div_to_l_@exp1,w
  7625  13B6  1803               	btfsc	3,0
  7626  13B7  2B31               	goto	i1l2897
  7627  13B8                     i1l474:	
  7628  13B8  0825               	movf	__div_to_l_@exp1,w
  7629  13B9  1903               	btfsc	3,2
  7630  13BA  2BC7               	goto	i1l2943
  7631  13BB  3001               	movlw	1
  7632  13BC  00F8               	movwf	??__div_to_l_
  7633  13BD                     u483_25:	
  7634  13BD  1003               	clrc
  7635  13BE  0DA0               	rlf	__div_to_l_@quot,f
  7636  13BF  0DA1               	rlf	__div_to_l_@quot+1,f
  7637  13C0  0DA2               	rlf	__div_to_l_@quot+2,f
  7638  13C1  0DA3               	rlf	__div_to_l_@quot+3,f
  7639  13C2  0BF8               	decfsz	??__div_to_l_,f
  7640  13C3  2BBD               	goto	u483_25
  7641  13C4  3001               	movlw	1
  7642  13C5  02A5               	subwf	__div_to_l_@exp1,f
  7643  13C6  2BB8               	goto	i1l474
  7644  13C7                     i1l2943:	
  7645  13C7  0823               	movf	__div_to_l_@quot+3,w
  7646  13C8  00F3               	movwf	?__div_to_l_+3
  7647  13C9  0822               	movf	__div_to_l_@quot+2,w
  7648  13CA  00F2               	movwf	?__div_to_l_+2
  7649  13CB  0821               	movf	__div_to_l_@quot+1,w
  7650  13CC  00F1               	movwf	?__div_to_l_+1
  7651  13CD  0820               	movf	__div_to_l_@quot,w
  7652  13CE  00F0               	movwf	?__div_to_l_
  7653  13CF  0008               	return
  7654  13D0                     __end_of__div_to_l_:	
  7655                           
  7656                           	psect	text28
  7657  11DA                     __ptext28:	
  7658 ;; *************** function ___xxtofl *****************
  7659 ;; Defined at:
  7660 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  sign            1    wreg     unsigned char 
  7663 ;;  val             4    0[COMMON] long 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  sign            1    8[COMMON] unsigned char 
  7666 ;;  arg             4   10[COMMON] unsigned long 
  7667 ;;  exp             1    9[COMMON] unsigned char 
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  4    0[COMMON] unsigned char 
  7670 ;; Registers used:
  7671 ;;		wreg, status,2, status,0
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7677 ;;      Params:         4       0       0       0       0
  7678 ;;      Locals:         6       0       0       0       0
  7679 ;;      Temps:          4       0       0       0       0
  7680 ;;      Totals:        14       0       0       0       0
  7681 ;;Total ram usage:       14 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_my_isr_routine
  7687 ;;		_sprintf
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           
  7692                           ;psect for function ___xxtofl
  7693  11DA                     ___xxtofl:	
  7694                           
  7695                           ;incstack = 0
  7696                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7697                           ;___xxtofl@sign stored from wreg
  7698  11DA  00F8               	movwf	___xxtofl@sign
  7699  11DB  0878               	movf	___xxtofl@sign,w
  7700  11DC  1D03               	btfss	3,2
  7701  11DD  1FF3               	btfss	___xxtofl@val+3,7
  7702  11DE  29EF               	goto	i1l3093
  7703  11DF  0970               	comf	___xxtofl@val,w
  7704  11E0  00FA               	movwf	___xxtofl@arg
  7705  11E1  0971               	comf	___xxtofl@val+1,w
  7706  11E2  00FB               	movwf	___xxtofl@arg+1
  7707  11E3  0972               	comf	___xxtofl@val+2,w
  7708  11E4  00FC               	movwf	___xxtofl@arg+2
  7709  11E5  0973               	comf	___xxtofl@val+3,w
  7710  11E6  00FD               	movwf	___xxtofl@arg+3
  7711  11E7  0AFA               	incf	___xxtofl@arg,f
  7712  11E8  1903               	skipnz
  7713  11E9  0AFB               	incf	___xxtofl@arg+1,f
  7714  11EA  1903               	skipnz
  7715  11EB  0AFC               	incf	___xxtofl@arg+2,f
  7716  11EC  1903               	skipnz
  7717  11ED  0AFD               	incf	___xxtofl@arg+3,f
  7718  11EE  29F7               	goto	i1l754
  7719  11EF                     i1l3093:	
  7720  11EF  0873               	movf	___xxtofl@val+3,w
  7721  11F0  00FD               	movwf	___xxtofl@arg+3
  7722  11F1  0872               	movf	___xxtofl@val+2,w
  7723  11F2  00FC               	movwf	___xxtofl@arg+2
  7724  11F3  0871               	movf	___xxtofl@val+1,w
  7725  11F4  00FB               	movwf	___xxtofl@arg+1
  7726  11F5  0870               	movf	___xxtofl@val,w
  7727  11F6  00FA               	movwf	___xxtofl@arg
  7728  11F7                     i1l754:	
  7729  11F7  0873               	movf	___xxtofl@val+3,w
  7730  11F8  0472               	iorwf	___xxtofl@val+2,w
  7731  11F9  0471               	iorwf	___xxtofl@val+1,w
  7732  11FA  0470               	iorwf	___xxtofl@val,w
  7733  11FB  1D03               	skipz
  7734  11FC  2A06               	goto	i1l3099
  7735  11FD  3000               	movlw	0
  7736  11FE  00F3               	movwf	?___xxtofl+3
  7737  11FF  3000               	movlw	0
  7738  1200  00F2               	movwf	?___xxtofl+2
  7739  1201  3000               	movlw	0
  7740  1202  00F1               	movwf	?___xxtofl+1
  7741  1203  3000               	movlw	0
  7742  1204  00F0               	movwf	?___xxtofl
  7743  1205  0008               	return
  7744  1206                     i1l3099:	
  7745  1206  3096               	movlw	150
  7746  1207  00F4               	movwf	??___xxtofl
  7747  1208  0874               	movf	??___xxtofl,w
  7748  1209  00F9               	movwf	___xxtofl@exp
  7749  120A                     i1l3103:	
  7750  120A  30FE               	movlw	254
  7751  120B  057D               	andwf	___xxtofl@arg+3,w
  7752  120C  1903               	btfsc	3,2
  7753  120D  2A37               	goto	i1l760
  7754  120E  3001               	movlw	1
  7755  120F  00F4               	movwf	??___xxtofl
  7756  1210  0874               	movf	??___xxtofl,w
  7757  1211  07F9               	addwf	___xxtofl@exp,f
  7758  1212  3001               	movlw	1
  7759  1213                     u526_25:	
  7760  1213  1003               	clrc
  7761  1214  0CFD               	rrf	___xxtofl@arg+3,f
  7762  1215  0CFC               	rrf	___xxtofl@arg+2,f
  7763  1216  0CFB               	rrf	___xxtofl@arg+1,f
  7764  1217  0CFA               	rrf	___xxtofl@arg,f
  7765  1218  3EFF               	addlw	-1
  7766  1219  1D03               	skipz
  7767  121A  2A13               	goto	u526_25
  7768  121B  2A0A               	goto	i1l3103
  7769  121C                     i1l3105:	
  7770  121C  3001               	movlw	1
  7771  121D  00F4               	movwf	??___xxtofl
  7772  121E  0874               	movf	??___xxtofl,w
  7773  121F  07F9               	addwf	___xxtofl@exp,f
  7774  1220  3001               	movlw	1
  7775  1221  07FA               	addwf	___xxtofl@arg,f
  7776  1222  3000               	movlw	0
  7777  1223  1803               	skipnc
  7778  1224  3001               	movlw	1
  7779  1225  07FB               	addwf	___xxtofl@arg+1,f
  7780  1226  3000               	movlw	0
  7781  1227  1803               	skipnc
  7782  1228  3001               	movlw	1
  7783  1229  07FC               	addwf	___xxtofl@arg+2,f
  7784  122A  3000               	movlw	0
  7785  122B  1803               	skipnc
  7786  122C  3001               	movlw	1
  7787  122D  07FD               	addwf	___xxtofl@arg+3,f
  7788  122E  3001               	movlw	1
  7789  122F                     u528_25:	
  7790  122F  1003               	clrc
  7791  1230  0CFD               	rrf	___xxtofl@arg+3,f
  7792  1231  0CFC               	rrf	___xxtofl@arg+2,f
  7793  1232  0CFB               	rrf	___xxtofl@arg+1,f
  7794  1233  0CFA               	rrf	___xxtofl@arg,f
  7795  1234  3EFF               	addlw	-1
  7796  1235  1D03               	skipz
  7797  1236  2A2F               	goto	u528_25
  7798  1237                     i1l760:	
  7799  1237  30FF               	movlw	255
  7800  1238  057D               	andwf	___xxtofl@arg+3,w
  7801  1239  1903               	btfsc	3,2
  7802  123A  2A4B               	goto	i1l3113
  7803  123B  2A1C               	goto	i1l3105
  7804  123C                     i1l3115:	
  7805  123C  3002               	movlw	2
  7806  123D  0279               	subwf	___xxtofl@exp,w
  7807  123E  1C03               	btfss	3,0
  7808  123F  2A4D               	goto	i1l767
  7809  1240  3001               	movlw	1
  7810  1241  02F9               	subwf	___xxtofl@exp,f
  7811  1242  3001               	movlw	1
  7812  1243  00F4               	movwf	??___xxtofl
  7813  1244                     u530_25:	
  7814  1244  1003               	clrc
  7815  1245  0DFA               	rlf	___xxtofl@arg,f
  7816  1246  0DFB               	rlf	___xxtofl@arg+1,f
  7817  1247  0DFC               	rlf	___xxtofl@arg+2,f
  7818  1248  0DFD               	rlf	___xxtofl@arg+3,f
  7819  1249  0BF4               	decfsz	??___xxtofl,f
  7820  124A  2A44               	goto	u530_25
  7821  124B                     i1l3113:	
  7822  124B  1FFC               	btfss	___xxtofl@arg+2,7
  7823  124C  2A3C               	goto	i1l3115
  7824  124D                     i1l767:	
  7825  124D  1879               	btfsc	___xxtofl@exp,0
  7826  124E  2A57               	goto	i1l768
  7827  124F  30FF               	movlw	255
  7828  1250  05FA               	andwf	___xxtofl@arg,f
  7829  1251  30FF               	movlw	255
  7830  1252  05FB               	andwf	___xxtofl@arg+1,f
  7831  1253  307F               	movlw	127
  7832  1254  05FC               	andwf	___xxtofl@arg+2,f
  7833  1255  30FF               	movlw	255
  7834  1256  05FD               	andwf	___xxtofl@arg+3,f
  7835  1257                     i1l768:	
  7836  1257  1003               	clrc
  7837  1258  0CF9               	rrf	___xxtofl@exp,f
  7838  1259  0879               	movf	___xxtofl@exp,w
  7839  125A  00F4               	movwf	??___xxtofl
  7840  125B  01F5               	clrf	??___xxtofl+1
  7841  125C  01F6               	clrf	??___xxtofl+2
  7842  125D  01F7               	clrf	??___xxtofl+3
  7843  125E  3018               	movlw	24
  7844  125F                     u534_25:	
  7845  125F  1003               	clrc
  7846  1260  0DF4               	rlf	??___xxtofl,f
  7847  1261  0DF5               	rlf	??___xxtofl+1,f
  7848  1262  0DF6               	rlf	??___xxtofl+2,f
  7849  1263  0DF7               	rlf	??___xxtofl+3,f
  7850  1264  3EFF               	addlw	-1
  7851  1265  1D03               	skipz
  7852  1266  2A5F               	goto	u534_25
  7853  1267  0874               	movf	??___xxtofl,w
  7854  1268  04FA               	iorwf	___xxtofl@arg,f
  7855  1269  0875               	movf	??___xxtofl+1,w
  7856  126A  04FB               	iorwf	___xxtofl@arg+1,f
  7857  126B  0876               	movf	??___xxtofl+2,w
  7858  126C  04FC               	iorwf	___xxtofl@arg+2,f
  7859  126D  0877               	movf	??___xxtofl+3,w
  7860  126E  04FD               	iorwf	___xxtofl@arg+3,f
  7861  126F  0878               	movf	___xxtofl@sign,w
  7862  1270  1D03               	btfss	3,2
  7863  1271  1FF3               	btfss	___xxtofl@val+3,7
  7864  1272  2A74               	goto	i1l3127
  7865  1273  17FD               	bsf	___xxtofl@arg+3,7
  7866  1274                     i1l3127:	
  7867  1274  087D               	movf	___xxtofl@arg+3,w
  7868  1275  00F3               	movwf	?___xxtofl+3
  7869  1276  087C               	movf	___xxtofl@arg+2,w
  7870  1277  00F2               	movwf	?___xxtofl+2
  7871  1278  087B               	movf	___xxtofl@arg+1,w
  7872  1279  00F1               	movwf	?___xxtofl+1
  7873  127A  087A               	movf	___xxtofl@arg,w
  7874  127B  00F0               	movwf	?___xxtofl
  7875  127C  0008               	return
  7876  127D                     __end_of___xxtofl:	
  7877                           
  7878                           	psect	text29
  7879  1B2D                     __ptext29:	
  7880 ;; *************** function ___wmul *****************
  7881 ;; Defined at:
  7882 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  multiplier      2    0[COMMON] unsigned int 
  7885 ;;  multiplicand    2    2[COMMON] unsigned int 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  product         2    4[COMMON] unsigned int 
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  2    0[COMMON] unsigned int 
  7890 ;; Registers used:
  7891 ;;		wreg, status,2, status,0
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7897 ;;      Params:         4       0       0       0       0
  7898 ;;      Locals:         2       0       0       0       0
  7899 ;;      Temps:          0       0       0       0       0
  7900 ;;      Totals:         6       0       0       0       0
  7901 ;;Total ram usage:        6 bytes
  7902 ;; Hardware stack levels used:    1
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_sprintf
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           
  7911                           ;psect for function ___wmul
  7912  1B2D                     ___wmul:	
  7913                           
  7914                           ;incstack = 0
  7915                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7916  1B2D  01F4               	clrf	___wmul@product
  7917  1B2E  01F5               	clrf	___wmul@product+1
  7918  1B2F                     i1l2949:	
  7919  1B2F  1C70               	btfss	___wmul@multiplier,0
  7920  1B30  2B37               	goto	i1l293
  7921  1B31  0872               	movf	___wmul@multiplicand,w
  7922  1B32  07F4               	addwf	___wmul@product,f
  7923  1B33  1803               	skipnc
  7924  1B34  0AF5               	incf	___wmul@product+1,f
  7925  1B35  0873               	movf	___wmul@multiplicand+1,w
  7926  1B36  07F5               	addwf	___wmul@product+1,f
  7927  1B37                     i1l293:	
  7928  1B37  3001               	movlw	1
  7929  1B38                     u486_25:	
  7930  1B38  1003               	clrc
  7931  1B39  0DF2               	rlf	___wmul@multiplicand,f
  7932  1B3A  0DF3               	rlf	___wmul@multiplicand+1,f
  7933  1B3B  3EFF               	addlw	-1
  7934  1B3C  1D03               	skipz
  7935  1B3D  2B38               	goto	u486_25
  7936  1B3E  3001               	movlw	1
  7937  1B3F                     u487_25:	
  7938  1B3F  1003               	clrc
  7939  1B40  0CF1               	rrf	___wmul@multiplier+1,f
  7940  1B41  0CF0               	rrf	___wmul@multiplier,f
  7941  1B42  3EFF               	addlw	-1
  7942  1B43  1D03               	skipz
  7943  1B44  2B3F               	goto	u487_25
  7944  1B45  0870               	movf	___wmul@multiplier,w
  7945  1B46  0471               	iorwf	___wmul@multiplier+1,w
  7946  1B47  1D03               	btfss	3,2
  7947  1B48  2B2F               	goto	i1l2949
  7948  1B49  0875               	movf	___wmul@product+1,w
  7949  1B4A  00F1               	movwf	?___wmul+1
  7950  1B4B  0874               	movf	___wmul@product,w
  7951  1B4C  00F0               	movwf	?___wmul
  7952  1B4D  0008               	return
  7953  1B4E                     __end_of___wmul:	
  7954                           
  7955                           	psect	text30
  7956  1DFB                     __ptext30:	
  7957 ;; *************** function ___llmod *****************
  7958 ;; Defined at:
  7959 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  divisor         4    0[COMMON] unsigned long 
  7962 ;;  dividend        4    4[COMMON] unsigned long 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  counter         1    9[COMMON] unsigned char 
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  4    0[COMMON] unsigned long 
  7967 ;; Registers used:
  7968 ;;		wreg, status,2, status,0
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7974 ;;      Params:         8       0       0       0       0
  7975 ;;      Locals:         1       0       0       0       0
  7976 ;;      Temps:          1       0       0       0       0
  7977 ;;      Totals:        10       0       0       0       0
  7978 ;;Total ram usage:       10 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; This function calls:
  7981 ;;		Nothing
  7982 ;; This function is called by:
  7983 ;;		_sprintf
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           
  7988                           ;psect for function ___llmod
  7989  1DFB                     ___llmod:	
  7990                           
  7991                           ;incstack = 0
  7992                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7993  1DFB  0873               	movf	___llmod@divisor+3,w
  7994  1DFC  0472               	iorwf	___llmod@divisor+2,w
  7995  1DFD  0471               	iorwf	___llmod@divisor+1,w
  7996  1DFE  0470               	iorwf	___llmod@divisor,w
  7997  1DFF  1903               	skipnz
  7998  1E00  2E3E               	goto	i1l3077
  7999  1E01  01F9               	clrf	___llmod@counter
  8000  1E02  0AF9               	incf	___llmod@counter,f
  8001  1E03                     i1l3067:	
  8002  1E03  1BF3               	btfsc	___llmod@divisor+3,7
  8003  1E04  2E13               	goto	i1l3069
  8004  1E05  3001               	movlw	1
  8005  1E06  00F8               	movwf	??___llmod
  8006  1E07                     u518_25:	
  8007  1E07  1003               	clrc
  8008  1E08  0DF0               	rlf	___llmod@divisor,f
  8009  1E09  0DF1               	rlf	___llmod@divisor+1,f
  8010  1E0A  0DF2               	rlf	___llmod@divisor+2,f
  8011  1E0B  0DF3               	rlf	___llmod@divisor+3,f
  8012  1E0C  0BF8               	decfsz	??___llmod,f
  8013  1E0D  2E07               	goto	u518_25
  8014  1E0E  3001               	movlw	1
  8015  1E0F  00F8               	movwf	??___llmod
  8016  1E10  0878               	movf	??___llmod,w
  8017  1E11  07F9               	addwf	___llmod@counter,f
  8018  1E12  2E03               	goto	i1l3067
  8019  1E13                     i1l3069:	
  8020  1E13  0873               	movf	___llmod@divisor+3,w
  8021  1E14  0277               	subwf	___llmod@dividend+3,w
  8022  1E15  1D03               	skipz
  8023  1E16  2E21               	goto	u520_25
  8024  1E17  0872               	movf	___llmod@divisor+2,w
  8025  1E18  0276               	subwf	___llmod@dividend+2,w
  8026  1E19  1D03               	skipz
  8027  1E1A  2E21               	goto	u520_25
  8028  1E1B  0871               	movf	___llmod@divisor+1,w
  8029  1E1C  0275               	subwf	___llmod@dividend+1,w
  8030  1E1D  1D03               	skipz
  8031  1E1E  2E21               	goto	u520_25
  8032  1E1F  0870               	movf	___llmod@divisor,w
  8033  1E20  0274               	subwf	___llmod@dividend,w
  8034  1E21                     u520_25:	
  8035  1E21  1C03               	skipc
  8036  1E22  2E31               	goto	i1l3073
  8037  1E23  0870               	movf	___llmod@divisor,w
  8038  1E24  02F4               	subwf	___llmod@dividend,f
  8039  1E25  0871               	movf	___llmod@divisor+1,w
  8040  1E26  1C03               	skipc
  8041  1E27  0F71               	incfsz	___llmod@divisor+1,w
  8042  1E28  02F5               	subwf	___llmod@dividend+1,f
  8043  1E29  0872               	movf	___llmod@divisor+2,w
  8044  1E2A  1C03               	skipc
  8045  1E2B  0F72               	incfsz	___llmod@divisor+2,w
  8046  1E2C  02F6               	subwf	___llmod@dividend+2,f
  8047  1E2D  0873               	movf	___llmod@divisor+3,w
  8048  1E2E  1C03               	skipc
  8049  1E2F  0F73               	incfsz	___llmod@divisor+3,w
  8050  1E30  02F7               	subwf	___llmod@dividend+3,f
  8051  1E31                     i1l3073:	
  8052  1E31  3001               	movlw	1
  8053  1E32                     u521_25:	
  8054  1E32  1003               	clrc
  8055  1E33  0CF3               	rrf	___llmod@divisor+3,f
  8056  1E34  0CF2               	rrf	___llmod@divisor+2,f
  8057  1E35  0CF1               	rrf	___llmod@divisor+1,f
  8058  1E36  0CF0               	rrf	___llmod@divisor,f
  8059  1E37  3EFF               	addlw	-1
  8060  1E38  1D03               	skipz
  8061  1E39  2E32               	goto	u521_25
  8062  1E3A  3001               	movlw	1
  8063  1E3B  02F9               	subwf	___llmod@counter,f
  8064  1E3C  1D03               	btfss	3,2
  8065  1E3D  2E13               	goto	i1l3069
  8066  1E3E                     i1l3077:	
  8067  1E3E  0877               	movf	___llmod@dividend+3,w
  8068  1E3F  00F3               	movwf	?___llmod+3
  8069  1E40  0876               	movf	___llmod@dividend+2,w
  8070  1E41  00F2               	movwf	?___llmod+2
  8071  1E42  0875               	movf	___llmod@dividend+1,w
  8072  1E43  00F1               	movwf	?___llmod+1
  8073  1E44  0874               	movf	___llmod@dividend,w
  8074  1E45  00F0               	movwf	?___llmod
  8075  1E46  0008               	return
  8076  1E47                     __end_of___llmod:	
  8077                           
  8078                           	psect	text31
  8079  1F41                     __ptext31:	
  8080 ;; *************** function ___lldiv *****************
  8081 ;; Defined at:
  8082 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  divisor         4    0[COMMON] unsigned long 
  8085 ;;  dividend        4    4[COMMON] unsigned long 
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  quotient        4    9[COMMON] unsigned long 
  8088 ;;  counter         1   13[COMMON] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  4    0[COMMON] unsigned long 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8098 ;;      Params:         8       0       0       0       0
  8099 ;;      Locals:         5       0       0       0       0
  8100 ;;      Temps:          1       0       0       0       0
  8101 ;;      Totals:        14       0       0       0       0
  8102 ;;Total ram usage:       14 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_sprintf
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           
  8112                           ;psect for function ___lldiv
  8113  1F41                     ___lldiv:	
  8114                           
  8115                           ;incstack = 0
  8116                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8117  1F41  3000               	movlw	0
  8118  1F42  00FC               	movwf	___lldiv@quotient+3
  8119  1F43  3000               	movlw	0
  8120  1F44  00FB               	movwf	___lldiv@quotient+2
  8121  1F45  3000               	movlw	0
  8122  1F46  00FA               	movwf	___lldiv@quotient+1
  8123  1F47  3000               	movlw	0
  8124  1F48  00F9               	movwf	___lldiv@quotient
  8125  1F49  0873               	movf	___lldiv@divisor+3,w
  8126  1F4A  0472               	iorwf	___lldiv@divisor+2,w
  8127  1F4B  0471               	iorwf	___lldiv@divisor+1,w
  8128  1F4C  0470               	iorwf	___lldiv@divisor,w
  8129  1F4D  1903               	skipnz
  8130  1F4E  2F96               	goto	i1l2981
  8131  1F4F  01FD               	clrf	___lldiv@counter
  8132  1F50  0AFD               	incf	___lldiv@counter,f
  8133  1F51                     i1l2967:	
  8134  1F51  1BF3               	btfsc	___lldiv@divisor+3,7
  8135  1F52  2F61               	goto	i1l2969
  8136  1F53  3001               	movlw	1
  8137  1F54  00F8               	movwf	??___lldiv
  8138  1F55                     u490_25:	
  8139  1F55  1003               	clrc
  8140  1F56  0DF0               	rlf	___lldiv@divisor,f
  8141  1F57  0DF1               	rlf	___lldiv@divisor+1,f
  8142  1F58  0DF2               	rlf	___lldiv@divisor+2,f
  8143  1F59  0DF3               	rlf	___lldiv@divisor+3,f
  8144  1F5A  0BF8               	decfsz	??___lldiv,f
  8145  1F5B  2F55               	goto	u490_25
  8146  1F5C  3001               	movlw	1
  8147  1F5D  00F8               	movwf	??___lldiv
  8148  1F5E  0878               	movf	??___lldiv,w
  8149  1F5F  07FD               	addwf	___lldiv@counter,f
  8150  1F60  2F51               	goto	i1l2967
  8151  1F61                     i1l2969:	
  8152  1F61  3001               	movlw	1
  8153  1F62  00F8               	movwf	??___lldiv
  8154  1F63                     u492_25:	
  8155  1F63  1003               	clrc
  8156  1F64  0DF9               	rlf	___lldiv@quotient,f
  8157  1F65  0DFA               	rlf	___lldiv@quotient+1,f
  8158  1F66  0DFB               	rlf	___lldiv@quotient+2,f
  8159  1F67  0DFC               	rlf	___lldiv@quotient+3,f
  8160  1F68  0BF8               	decfsz	??___lldiv,f
  8161  1F69  2F63               	goto	u492_25
  8162  1F6A  0873               	movf	___lldiv@divisor+3,w
  8163  1F6B  0277               	subwf	___lldiv@dividend+3,w
  8164  1F6C  1D03               	skipz
  8165  1F6D  2F78               	goto	u493_25
  8166  1F6E  0872               	movf	___lldiv@divisor+2,w
  8167  1F6F  0276               	subwf	___lldiv@dividend+2,w
  8168  1F70  1D03               	skipz
  8169  1F71  2F78               	goto	u493_25
  8170  1F72  0871               	movf	___lldiv@divisor+1,w
  8171  1F73  0275               	subwf	___lldiv@dividend+1,w
  8172  1F74  1D03               	skipz
  8173  1F75  2F78               	goto	u493_25
  8174  1F76  0870               	movf	___lldiv@divisor,w
  8175  1F77  0274               	subwf	___lldiv@dividend,w
  8176  1F78                     u493_25:	
  8177  1F78  1C03               	skipc
  8178  1F79  2F89               	goto	i1l2977
  8179  1F7A  0870               	movf	___lldiv@divisor,w
  8180  1F7B  02F4               	subwf	___lldiv@dividend,f
  8181  1F7C  0871               	movf	___lldiv@divisor+1,w
  8182  1F7D  1C03               	skipc
  8183  1F7E  0F71               	incfsz	___lldiv@divisor+1,w
  8184  1F7F  02F5               	subwf	___lldiv@dividend+1,f
  8185  1F80  0872               	movf	___lldiv@divisor+2,w
  8186  1F81  1C03               	skipc
  8187  1F82  0F72               	incfsz	___lldiv@divisor+2,w
  8188  1F83  02F6               	subwf	___lldiv@dividend+2,f
  8189  1F84  0873               	movf	___lldiv@divisor+3,w
  8190  1F85  1C03               	skipc
  8191  1F86  0F73               	incfsz	___lldiv@divisor+3,w
  8192  1F87  02F7               	subwf	___lldiv@dividend+3,f
  8193  1F88  1479               	bsf	___lldiv@quotient,0
  8194  1F89                     i1l2977:	
  8195  1F89  3001               	movlw	1
  8196  1F8A                     u494_25:	
  8197  1F8A  1003               	clrc
  8198  1F8B  0CF3               	rrf	___lldiv@divisor+3,f
  8199  1F8C  0CF2               	rrf	___lldiv@divisor+2,f
  8200  1F8D  0CF1               	rrf	___lldiv@divisor+1,f
  8201  1F8E  0CF0               	rrf	___lldiv@divisor,f
  8202  1F8F  3EFF               	addlw	-1
  8203  1F90  1D03               	skipz
  8204  1F91  2F8A               	goto	u494_25
  8205  1F92  3001               	movlw	1
  8206  1F93  02FD               	subwf	___lldiv@counter,f
  8207  1F94  1D03               	btfss	3,2
  8208  1F95  2F61               	goto	i1l2969
  8209  1F96                     i1l2981:	
  8210  1F96  087C               	movf	___lldiv@quotient+3,w
  8211  1F97  00F3               	movwf	?___lldiv+3
  8212  1F98  087B               	movf	___lldiv@quotient+2,w
  8213  1F99  00F2               	movwf	?___lldiv+2
  8214  1F9A  087A               	movf	___lldiv@quotient+1,w
  8215  1F9B  00F1               	movwf	?___lldiv+1
  8216  1F9C  0879               	movf	___lldiv@quotient,w
  8217  1F9D  00F0               	movwf	?___lldiv
  8218  1F9E  0008               	return
  8219  1F9F                     __end_of___lldiv:	
  8220                           
  8221                           	psect	text32
  8222  10DA                     __ptext32:	
  8223 ;; *************** function ___fltol *****************
  8224 ;; Defined at:
  8225 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  f1              4   49[BANK0 ] unsigned long 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;  exp1            1   59[BANK0 ] unsigned char 
  8230 ;;  sign1           1   58[BANK0 ] unsigned char 
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  4   49[BANK0 ] long 
  8233 ;; Registers used:
  8234 ;;		wreg, status,2, status,0
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8240 ;;      Params:         0       4       0       0       0
  8241 ;;      Locals:         0       2       0       0       0
  8242 ;;      Temps:          0       5       0       0       0
  8243 ;;      Totals:         0      11       0       0       0
  8244 ;;Total ram usage:       11 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_sprintf
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           
  8254                           ;psect for function ___fltol
  8255  10DA                     ___fltol:	
  8256                           
  8257                           ;incstack = 0
  8258                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8259  10DA  1003               	clrc
  8260  10DB  1283               	bcf	3,5	;RP0=0, select bank0
  8261  10DC  1303               	bcf	3,6	;RP1=0, select bank0
  8262  10DD  0D53               	rlf	___fltol@f1+2,w
  8263  10DE  0D54               	rlf	___fltol@f1+3,w
  8264  10DF  00D5               	movwf	??___fltol
  8265  10E0  0855               	movf	??___fltol,w
  8266  10E1  00DB               	movwf	___fltol@exp1
  8267  10E2  085B               	movf	___fltol@exp1,w
  8268  10E3  1D03               	btfss	3,2
  8269  10E4  28EE               	goto	i1l3031
  8270  10E5                     i1l3027:	
  8271  10E5  3000               	movlw	0
  8272  10E6  00D4               	movwf	?___fltol+3
  8273  10E7  3000               	movlw	0
  8274  10E8  00D3               	movwf	?___fltol+2
  8275  10E9  3000               	movlw	0
  8276  10EA  00D2               	movwf	?___fltol+1
  8277  10EB  3000               	movlw	0
  8278  10EC  00D1               	movwf	?___fltol
  8279  10ED  0008               	return
  8280  10EE                     i1l3031:	
  8281  10EE  0851               	movf	___fltol@f1,w
  8282  10EF  00D5               	movwf	??___fltol
  8283  10F0  0852               	movf	___fltol@f1+1,w
  8284  10F1  00D6               	movwf	??___fltol+1
  8285  10F2  0853               	movf	___fltol@f1+2,w
  8286  10F3  00D7               	movwf	??___fltol+2
  8287  10F4  0854               	movf	___fltol@f1+3,w
  8288  10F5  00D8               	movwf	??___fltol+3
  8289  10F6  301F               	movlw	31
  8290  10F7                     u508_25:	
  8291  10F7  1003               	clrc
  8292  10F8  0CD8               	rrf	??___fltol+3,f
  8293  10F9  0CD7               	rrf	??___fltol+2,f
  8294  10FA  0CD6               	rrf	??___fltol+1,f
  8295  10FB  0CD5               	rrf	??___fltol,f
  8296  10FC  3EFF               	addlw	-1
  8297  10FD  1D03               	skipz
  8298  10FE  28F7               	goto	u508_25
  8299  10FF  0855               	movf	??___fltol,w
  8300  1100  00D9               	movwf	??___fltol+4
  8301  1101  0859               	movf	??___fltol+4,w
  8302  1102  00DA               	movwf	___fltol@sign1
  8303  1103  17D3               	bsf	___fltol@f1+2,7
  8304  1104  30FF               	movlw	255
  8305  1105  05D1               	andwf	___fltol@f1,f
  8306  1106  30FF               	movlw	255
  8307  1107  05D2               	andwf	___fltol@f1+1,f
  8308  1108  30FF               	movlw	255
  8309  1109  05D3               	andwf	___fltol@f1+2,f
  8310  110A  3000               	movlw	0
  8311  110B  05D4               	andwf	___fltol@f1+3,f
  8312  110C  3096               	movlw	150
  8313  110D  02DB               	subwf	___fltol@exp1,f
  8314  110E  1FDB               	btfss	___fltol@exp1,7
  8315  110F  2925               	goto	i1l3049
  8316  1110  085B               	movf	___fltol@exp1,w
  8317  1111  3A80               	xorlw	128
  8318  1112  3E97               	addlw	151
  8319  1113  1C03               	btfss	3,0
  8320  1114  28E5               	goto	i1l3027
  8321  1115                     i1l3047:	
  8322  1115  3001               	movlw	1
  8323  1116                     u511_25:	
  8324  1116  1003               	clrc
  8325  1117  0CD4               	rrf	___fltol@f1+3,f
  8326  1118  0CD3               	rrf	___fltol@f1+2,f
  8327  1119  0CD2               	rrf	___fltol@f1+1,f
  8328  111A  0CD1               	rrf	___fltol@f1,f
  8329  111B  3EFF               	addlw	-1
  8330  111C  1D03               	skipz
  8331  111D  2916               	goto	u511_25
  8332  111E  3001               	movlw	1
  8333  111F  00D5               	movwf	??___fltol
  8334  1120  0855               	movf	??___fltol,w
  8335  1121  07DB               	addwf	___fltol@exp1,f
  8336  1122  1903               	btfsc	3,2
  8337  1123  2938               	goto	i1l3057
  8338  1124  2915               	goto	i1l3047
  8339  1125                     i1l3049:	
  8340  1125  3020               	movlw	32
  8341  1126  025B               	subwf	___fltol@exp1,w
  8342  1127  1803               	btfsc	3,0
  8343  1128  28E5               	goto	i1l3027
  8344  1129                     i1l503:	
  8345  1129  085B               	movf	___fltol@exp1,w
  8346  112A  1903               	btfsc	3,2
  8347  112B  2938               	goto	i1l3057
  8348  112C  3001               	movlw	1
  8349  112D  00D5               	movwf	??___fltol
  8350  112E                     u514_25:	
  8351  112E  1003               	clrc
  8352  112F  0DD1               	rlf	___fltol@f1,f
  8353  1130  0DD2               	rlf	___fltol@f1+1,f
  8354  1131  0DD3               	rlf	___fltol@f1+2,f
  8355  1132  0DD4               	rlf	___fltol@f1+3,f
  8356  1133  0BD5               	decfsz	??___fltol,f
  8357  1134  292E               	goto	u514_25
  8358  1135  3001               	movlw	1
  8359  1136  02DB               	subwf	___fltol@exp1,f
  8360  1137  2929               	goto	i1l503
  8361  1138                     i1l3057:	
  8362  1138  085A               	movf	___fltol@sign1,w
  8363  1139  1903               	btfsc	3,2
  8364  113A  0008               	return
  8365  113B  09D1               	comf	___fltol@f1,f
  8366  113C  09D2               	comf	___fltol@f1+1,f
  8367  113D  09D3               	comf	___fltol@f1+2,f
  8368  113E  09D4               	comf	___fltol@f1+3,f
  8369  113F  0AD1               	incf	___fltol@f1,f
  8370  1140  1903               	skipnz
  8371  1141  0AD2               	incf	___fltol@f1+1,f
  8372  1142  1903               	skipnz
  8373  1143  0AD3               	incf	___fltol@f1+2,f
  8374  1144  1903               	skipnz
  8375  1145  0AD4               	incf	___fltol@f1+3,f
  8376  1146  0008               	return
  8377  1147                     __end_of___fltol:	
  8378                           
  8379                           	psect	text33
  8380  1B4E                     __ptext33:	
  8381 ;; *************** function ___flsub *****************
  8382 ;; Defined at:
  8383 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;  a               4   70[BANK0 ] long 
  8386 ;;  b               4   74[BANK0 ] long 
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;		None
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  4   70[BANK0 ] long 
  8391 ;; Registers used:
  8392 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8398 ;;      Params:         0       8       0       0       0
  8399 ;;      Locals:         0       0       0       0       0
  8400 ;;      Temps:          0       0       0       0       0
  8401 ;;      Totals:         0       8       0       0       0
  8402 ;;Total ram usage:        8 bytes
  8403 ;; Hardware stack levels used:    1
  8404 ;; Hardware stack levels required when called:    1
  8405 ;; This function calls:
  8406 ;;		___fladd
  8407 ;; This function is called by:
  8408 ;;		_sprintf
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           
  8413                           ;psect for function ___flsub
  8414  1B4E                     ___flsub:	
  8415                           
  8416                           ;incstack = 0
  8417                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8418  1B4E  3080               	movlw	128
  8419  1B4F  1283               	bcf	3,5	;RP0=0, select bank0
  8420  1B50  1303               	bcf	3,6	;RP1=0, select bank0
  8421  1B51  06E9               	xorwf	___flsub@a+3,f
  8422  1B52  086D               	movf	___flsub@b+3,w
  8423  1B53  00D5               	movwf	___fladd@b+3
  8424  1B54  086C               	movf	___flsub@b+2,w
  8425  1B55  00D4               	movwf	___fladd@b+2
  8426  1B56  086B               	movf	___flsub@b+1,w
  8427  1B57  00D3               	movwf	___fladd@b+1
  8428  1B58  086A               	movf	___flsub@b,w
  8429  1B59  00D2               	movwf	___fladd@b
  8430  1B5A  0869               	movf	___flsub@a+3,w
  8431  1B5B  00D9               	movwf	___fladd@a+3
  8432  1B5C  0868               	movf	___flsub@a+2,w
  8433  1B5D  00D8               	movwf	___fladd@a+2
  8434  1B5E  0867               	movf	___flsub@a+1,w
  8435  1B5F  00D7               	movwf	___fladd@a+1
  8436  1B60  0866               	movf	___flsub@a,w
  8437  1B61  00D6               	movwf	___fladd@a
  8438  1B62  160A  118A  25D1   	fcall	___fladd
  8439  1B65  1283               	bcf	3,5	;RP0=0, select bank0
  8440  1B66  1303               	bcf	3,6	;RP1=0, select bank0
  8441  1B67  0855               	movf	?___fladd+3,w
  8442  1B68  00E9               	movwf	?___flsub+3
  8443  1B69  0854               	movf	?___fladd+2,w
  8444  1B6A  00E8               	movwf	?___flsub+2
  8445  1B6B  0853               	movf	?___fladd+1,w
  8446  1B6C  00E7               	movwf	?___flsub+1
  8447  1B6D  0852               	movf	?___fladd,w
  8448  1B6E  00E6               	movwf	?___flsub
  8449  1B6F  0008               	return
  8450  1B70                     __end_of___flsub:	
  8451                           
  8452                           	psect	text34
  8453  15D1                     __ptext34:	
  8454 ;; *************** function ___fladd *****************
  8455 ;; Defined at:
  8456 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  b               4   50[BANK0 ] long 
  8459 ;;  a               4   54[BANK0 ] long 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  grs             1   69[BANK0 ] unsigned char 
  8462 ;;  bexp            1   68[BANK0 ] unsigned char 
  8463 ;;  aexp            1   67[BANK0 ] unsigned char 
  8464 ;;  signs           1   66[BANK0 ] unsigned char 
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  4   50[BANK0 ] unsigned char 
  8467 ;; Registers used:
  8468 ;;		wreg, status,2, status,0, btemp+1
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8474 ;;      Params:         0       8       0       0       0
  8475 ;;      Locals:         0       4       0       0       0
  8476 ;;      Temps:          0       8       0       0       0
  8477 ;;      Totals:         0      20       0       0       0
  8478 ;;Total ram usage:       20 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; This function calls:
  8481 ;;		Nothing
  8482 ;; This function is called by:
  8483 ;;		_my_isr_routine
  8484 ;;		_sprintf
  8485 ;;		___flsub
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           
  8490                           ;psect for function ___fladd
  8491  15D1                     ___fladd:	
  8492                           
  8493                           ;incstack = 0
  8494                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8495  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  8496  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  8497  15D3  0855               	movf	___fladd@b+3,w
  8498  15D4  3980               	andlw	128
  8499  15D5  00DA               	movwf	??___fladd
  8500  15D6  085A               	movf	??___fladd,w
  8501  15D7  00E2               	movwf	___fladd@signs
  8502  15D8  0855               	movf	___fladd@b+3,w
  8503  15D9  00DA               	movwf	??___fladd
  8504  15DA  075A               	addwf	??___fladd,w
  8505  15DB  00DB               	movwf	??___fladd+1
  8506  15DC  085B               	movf	??___fladd+1,w
  8507  15DD  00E4               	movwf	___fladd@bexp
  8508  15DE  1BD4               	btfsc	___fladd@b+2,7
  8509  15DF  1464               	bsf	___fladd@bexp,0
  8510  15E0  0864               	movf	___fladd@bexp,w
  8511  15E1  1903               	btfsc	3,2
  8512  15E2  2DF1               	goto	i1l2429
  8513  15E3  0A64               	incf	___fladd@bexp,w
  8514  15E4  1D03               	btfss	3,2
  8515  15E5  2DEE               	goto	i1l2425
  8516  15E6  3000               	movlw	0
  8517  15E7  00D5               	movwf	___fladd@b+3
  8518  15E8  3000               	movlw	0
  8519  15E9  00D4               	movwf	___fladd@b+2
  8520  15EA  3000               	movlw	0
  8521  15EB  00D3               	movwf	___fladd@b+1
  8522  15EC  3000               	movlw	0
  8523  15ED  00D2               	movwf	___fladd@b
  8524  15EE                     i1l2425:	
  8525  15EE  17D4               	bsf	___fladd@b+2,7
  8526  15EF  01D5               	clrf	___fladd@b+3
  8527  15F0  2DF9               	goto	i1l2431
  8528  15F1                     i1l2429:	
  8529  15F1  3000               	movlw	0
  8530  15F2  00D5               	movwf	___fladd@b+3
  8531  15F3  3000               	movlw	0
  8532  15F4  00D4               	movwf	___fladd@b+2
  8533  15F5  3000               	movlw	0
  8534  15F6  00D3               	movwf	___fladd@b+1
  8535  15F7  3000               	movlw	0
  8536  15F8  00D2               	movwf	___fladd@b
  8537  15F9                     i1l2431:	
  8538  15F9  0859               	movf	___fladd@a+3,w
  8539  15FA  3980               	andlw	128
  8540  15FB  00DA               	movwf	??___fladd
  8541  15FC  085A               	movf	??___fladd,w
  8542  15FD  00E3               	movwf	___fladd@aexp
  8543  15FE  0863               	movf	___fladd@aexp,w
  8544  15FF  0662               	xorwf	___fladd@signs,w
  8545  1600  1D03               	btfss	3,2
  8546  1601  1762               	bsf	___fladd@signs,6
  8547  1602  0859               	movf	___fladd@a+3,w
  8548  1603  00DA               	movwf	??___fladd
  8549  1604  075A               	addwf	??___fladd,w
  8550  1605  00DB               	movwf	??___fladd+1
  8551  1606  085B               	movf	??___fladd+1,w
  8552  1607  00E3               	movwf	___fladd@aexp
  8553  1608  1BD8               	btfsc	___fladd@a+2,7
  8554  1609  1463               	bsf	___fladd@aexp,0
  8555  160A  0863               	movf	___fladd@aexp,w
  8556  160B  1903               	btfsc	3,2
  8557  160C  2E1B               	goto	i1l2453
  8558  160D  0A63               	incf	___fladd@aexp,w
  8559  160E  1D03               	btfss	3,2
  8560  160F  2E18               	goto	i1l2449
  8561  1610  3000               	movlw	0
  8562  1611  00D9               	movwf	___fladd@a+3
  8563  1612  3000               	movlw	0
  8564  1613  00D8               	movwf	___fladd@a+2
  8565  1614  3000               	movlw	0
  8566  1615  00D7               	movwf	___fladd@a+1
  8567  1616  3000               	movlw	0
  8568  1617  00D6               	movwf	___fladd@a
  8569  1618                     i1l2449:	
  8570  1618  17D8               	bsf	___fladd@a+2,7
  8571  1619  01D9               	clrf	___fladd@a+3
  8572  161A  2E23               	goto	i1l620
  8573  161B                     i1l2453:	
  8574  161B  3000               	movlw	0
  8575  161C  00D9               	movwf	___fladd@a+3
  8576  161D  3000               	movlw	0
  8577  161E  00D8               	movwf	___fladd@a+2
  8578  161F  3000               	movlw	0
  8579  1620  00D7               	movwf	___fladd@a+1
  8580  1621  3000               	movlw	0
  8581  1622  00D6               	movwf	___fladd@a
  8582  1623                     i1l620:	
  8583  1623  0864               	movf	___fladd@bexp,w
  8584  1624  0263               	subwf	___fladd@aexp,w
  8585  1625  1803               	skipnc
  8586  1626  2E69               	goto	i1l2489
  8587  1627  1F62               	btfss	___fladd@signs,6
  8588  1628  2E2D               	goto	i1l2459
  8589  1629  3080               	movlw	128
  8590  162A  00DA               	movwf	??___fladd
  8591  162B  085A               	movf	??___fladd,w
  8592  162C  06E2               	xorwf	___fladd@signs,f
  8593  162D                     i1l2459:	
  8594  162D  0864               	movf	___fladd@bexp,w
  8595  162E  00DA               	movwf	??___fladd
  8596  162F  085A               	movf	??___fladd,w
  8597  1630  00E5               	movwf	___fladd@grs
  8598  1631  0863               	movf	___fladd@aexp,w
  8599  1632  00DA               	movwf	??___fladd
  8600  1633  085A               	movf	??___fladd,w
  8601  1634  00E4               	movwf	___fladd@bexp
  8602  1635  0865               	movf	___fladd@grs,w
  8603  1636  00DA               	movwf	??___fladd
  8604  1637  085A               	movf	??___fladd,w
  8605  1638  00E3               	movwf	___fladd@aexp
  8606  1639  0852               	movf	___fladd@b,w
  8607  163A  00DA               	movwf	??___fladd
  8608  163B  085A               	movf	??___fladd,w
  8609  163C  00E5               	movwf	___fladd@grs
  8610  163D  0856               	movf	___fladd@a,w
  8611  163E  00DA               	movwf	??___fladd
  8612  163F  085A               	movf	??___fladd,w
  8613  1640  00D2               	movwf	___fladd@b
  8614  1641  0865               	movf	___fladd@grs,w
  8615  1642  00DA               	movwf	??___fladd
  8616  1643  085A               	movf	??___fladd,w
  8617  1644  00D6               	movwf	___fladd@a
  8618  1645  0853               	movf	___fladd@b+1,w
  8619  1646  00DA               	movwf	??___fladd
  8620  1647  085A               	movf	??___fladd,w
  8621  1648  00E5               	movwf	___fladd@grs
  8622  1649  0857               	movf	___fladd@a+1,w
  8623  164A  00DA               	movwf	??___fladd
  8624  164B  085A               	movf	??___fladd,w
  8625  164C  00D3               	movwf	___fladd@b+1
  8626  164D  0865               	movf	___fladd@grs,w
  8627  164E  00DA               	movwf	??___fladd
  8628  164F  085A               	movf	??___fladd,w
  8629  1650  00D7               	movwf	___fladd@a+1
  8630  1651  0854               	movf	___fladd@b+2,w
  8631  1652  00DA               	movwf	??___fladd
  8632  1653  085A               	movf	??___fladd,w
  8633  1654  00E5               	movwf	___fladd@grs
  8634  1655  0858               	movf	___fladd@a+2,w
  8635  1656  00DA               	movwf	??___fladd
  8636  1657  085A               	movf	??___fladd,w
  8637  1658  00D4               	movwf	___fladd@b+2
  8638  1659  0865               	movf	___fladd@grs,w
  8639  165A  00DA               	movwf	??___fladd
  8640  165B  085A               	movf	??___fladd,w
  8641  165C  00D8               	movwf	___fladd@a+2
  8642  165D  0855               	movf	___fladd@b+3,w
  8643  165E  00DA               	movwf	??___fladd
  8644  165F  085A               	movf	??___fladd,w
  8645  1660  00E5               	movwf	___fladd@grs
  8646  1661  0859               	movf	___fladd@a+3,w
  8647  1662  00DA               	movwf	??___fladd
  8648  1663  085A               	movf	??___fladd,w
  8649  1664  00D5               	movwf	___fladd@b+3
  8650  1665  0865               	movf	___fladd@grs,w
  8651  1666  00DA               	movwf	??___fladd
  8652  1667  085A               	movf	??___fladd,w
  8653  1668  00D9               	movwf	___fladd@a+3
  8654  1669                     i1l2489:	
  8655  1669  01E5               	clrf	___fladd@grs
  8656  166A  0863               	movf	___fladd@aexp,w
  8657  166B  00DA               	movwf	??___fladd
  8658  166C  01DB               	clrf	??___fladd+1
  8659  166D  085B               	movf	??___fladd+1,w
  8660  166E  00DD               	movwf	??___fladd+3
  8661  166F  0864               	movf	___fladd@bexp,w
  8662  1670  025A               	subwf	??___fladd,w
  8663  1671  00DC               	movwf	??___fladd+2
  8664  1672  1C03               	skipc
  8665  1673  03DD               	decf	??___fladd+3,f
  8666  1674  085D               	movf	??___fladd+3,w
  8667  1675  3A80               	xorlw	128
  8668  1676  00FF               	movwf	127
  8669  1677  3080               	movlw	128
  8670  1678  027F               	subwf	127,w
  8671  1679  1D03               	skipz
  8672  167A  2E7D               	goto	u355_25
  8673  167B  301A               	movlw	26
  8674  167C  025C               	subwf	??___fladd+2,w
  8675  167D                     u355_25:	
  8676  167D  1C03               	skipc
  8677  167E  2EB6               	goto	i1l2507
  8678  167F  1283               	bcf	3,5	;RP0=0, select bank0
  8679  1680  1303               	bcf	3,6	;RP1=0, select bank0
  8680  1681  0855               	movf	___fladd@b+3,w
  8681  1682  0454               	iorwf	___fladd@b+2,w
  8682  1683  0453               	iorwf	___fladd@b+1,w
  8683  1684  0452               	iorwf	___fladd@b,w
  8684  1685  1903               	btfsc	3,2
  8685  1686  2E89               	goto	u356_20
  8686  1687  3001               	movlw	1
  8687  1688  2E8A               	goto	u357_20
  8688  1689                     u356_20:	
  8689  1689  3000               	movlw	0
  8690  168A                     u357_20:	
  8691  168A  00DA               	movwf	??___fladd
  8692  168B  085A               	movf	??___fladd,w
  8693  168C  00E5               	movwf	___fladd@grs
  8694  168D  3000               	movlw	0
  8695  168E  00D5               	movwf	___fladd@b+3
  8696  168F  3000               	movlw	0
  8697  1690  00D4               	movwf	___fladd@b+2
  8698  1691  3000               	movlw	0
  8699  1692  00D3               	movwf	___fladd@b+1
  8700  1693  3000               	movlw	0
  8701  1694  00D2               	movwf	___fladd@b
  8702  1695  0863               	movf	___fladd@aexp,w
  8703  1696  00DA               	movwf	??___fladd
  8704  1697  085A               	movf	??___fladd,w
  8705  1698  00E4               	movwf	___fladd@bexp
  8706  1699  2EBC               	goto	i1l624
  8707  169A                     i1l626:	
  8708  169A  1C65               	btfss	___fladd@grs,0
  8709  169B  2EA5               	goto	i1l2497
  8710  169C  0865               	movf	___fladd@grs,w
  8711  169D  00DA               	movwf	??___fladd
  8712  169E  1003               	clrc
  8713  169F  0C5A               	rrf	??___fladd,w
  8714  16A0  3801               	iorlw	1
  8715  16A1  00DB               	movwf	??___fladd+1
  8716  16A2  085B               	movf	??___fladd+1,w
  8717  16A3  00E5               	movwf	___fladd@grs
  8718  16A4  2EA7               	goto	i1l2499
  8719  16A5                     i1l2497:	
  8720  16A5  1003               	clrc
  8721  16A6  0CE5               	rrf	___fladd@grs,f
  8722  16A7                     i1l2499:	
  8723  16A7  1852               	btfsc	___fladd@b,0
  8724  16A8  17E5               	bsf	___fladd@grs,7
  8725  16A9  3001               	movlw	1
  8726  16AA  00DA               	movwf	??___fladd
  8727  16AB                     u360_25:	
  8728  16AB  0D55               	rlf	___fladd@b+3,w
  8729  16AC  0CD5               	rrf	___fladd@b+3,f
  8730  16AD  0CD4               	rrf	___fladd@b+2,f
  8731  16AE  0CD3               	rrf	___fladd@b+1,f
  8732  16AF  0CD2               	rrf	___fladd@b,f
  8733  16B0  0BDA               	decfsz	??___fladd& (0+127),f
  8734  16B1  2EAB               	goto	u360_25
  8735  16B2  3001               	movlw	1
  8736  16B3  00DA               	movwf	??___fladd
  8737  16B4  085A               	movf	??___fladd,w
  8738  16B5  07E4               	addwf	___fladd@bexp,f
  8739  16B6                     i1l2507:	
  8740  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  8741  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  8742  16B8  0863               	movf	___fladd@aexp,w
  8743  16B9  0264               	subwf	___fladd@bexp,w
  8744  16BA  1C03               	skipc
  8745  16BB  2E9A               	goto	i1l626
  8746  16BC                     i1l624:	
  8747  16BC  1B62               	btfsc	___fladd@signs,6
  8748  16BD  2EFD               	goto	i1l2533
  8749  16BE  0864               	movf	___fladd@bexp,w
  8750  16BF  1D03               	btfss	3,2
  8751  16C0  2ECA               	goto	i1l2515
  8752  16C1  3000               	movlw	0
  8753  16C2  00D5               	movwf	?___fladd+3
  8754  16C3  3000               	movlw	0
  8755  16C4  00D4               	movwf	?___fladd+2
  8756  16C5  3000               	movlw	0
  8757  16C6  00D3               	movwf	?___fladd+1
  8758  16C7  3000               	movlw	0
  8759  16C8  00D2               	movwf	?___fladd
  8760  16C9  0008               	return
  8761  16CA                     i1l2515:	
  8762  16CA  0856               	movf	___fladd@a,w
  8763  16CB  07D2               	addwf	___fladd@b,f
  8764  16CC  0857               	movf	___fladd@a+1,w
  8765  16CD  1103               	clrz
  8766  16CE  1803               	skipnc
  8767  16CF  3E01               	addlw	1
  8768  16D0  1D03               	btfss	3,2
  8769  16D1  07D3               	addwf	___fladd@b+1,f
  8770  16D2  0858               	movf	___fladd@a+2,w
  8771  16D3  1103               	clrz
  8772  16D4  1803               	skipnc
  8773  16D5  3E01               	addlw	1
  8774  16D6  1D03               	btfss	3,2
  8775  16D7  07D4               	addwf	___fladd@b+2,f
  8776  16D8  0859               	movf	___fladd@a+3,w
  8777  16D9  1103               	clrz
  8778  16DA  1803               	skipnc
  8779  16DB  3E01               	addlw	1
  8780  16DC  1D03               	btfss	3,2
  8781  16DD  07D5               	addwf	___fladd@b+3,f
  8782  16DE  1C55               	btfss	___fladd@b+3,0
  8783  16DF  2F9F               	goto	i1l2567
  8784  16E0  1C65               	btfss	___fladd@grs,0
  8785  16E1  2EEB               	goto	i1l2523
  8786  16E2  0865               	movf	___fladd@grs,w
  8787  16E3  00DA               	movwf	??___fladd
  8788  16E4  1003               	clrc
  8789  16E5  0C5A               	rrf	??___fladd,w
  8790  16E6  3801               	iorlw	1
  8791  16E7  00DB               	movwf	??___fladd+1
  8792  16E8  085B               	movf	??___fladd+1,w
  8793  16E9  00E5               	movwf	___fladd@grs
  8794  16EA  2EED               	goto	i1l2525
  8795  16EB                     i1l2523:	
  8796  16EB  1003               	clrc
  8797  16EC  0CE5               	rrf	___fladd@grs,f
  8798  16ED                     i1l2525:	
  8799  16ED  1852               	btfsc	___fladd@b,0
  8800  16EE  17E5               	bsf	___fladd@grs,7
  8801  16EF  3001               	movlw	1
  8802  16F0  00DA               	movwf	??___fladd
  8803  16F1                     u368_25:	
  8804  16F1  0D55               	rlf	___fladd@b+3,w
  8805  16F2  0CD5               	rrf	___fladd@b+3,f
  8806  16F3  0CD4               	rrf	___fladd@b+2,f
  8807  16F4  0CD3               	rrf	___fladd@b+1,f
  8808  16F5  0CD2               	rrf	___fladd@b,f
  8809  16F6  0BDA               	decfsz	??___fladd& (0+127),f
  8810  16F7  2EF1               	goto	u368_25
  8811  16F8  3001               	movlw	1
  8812  16F9  00DA               	movwf	??___fladd
  8813  16FA  085A               	movf	??___fladd,w
  8814  16FB  07E4               	addwf	___fladd@bexp,f
  8815  16FC  2F9F               	goto	i1l2567
  8816  16FD                     i1l2533:	
  8817  16FD  0855               	movf	___fladd@b+3,w
  8818  16FE  3A80               	xorlw	128
  8819  16FF  00FF               	movwf	127
  8820  1700  0859               	movf	___fladd@a+3,w
  8821  1701  3A80               	xorlw	128
  8822  1702  027F               	subwf	127,w
  8823  1703  1D03               	skipz
  8824  1704  2F0F               	goto	u369_23
  8825  1705  0858               	movf	___fladd@a+2,w
  8826  1706  0254               	subwf	___fladd@b+2,w
  8827  1707  1D03               	skipz
  8828  1708  2F0F               	goto	u369_23
  8829  1709  0857               	movf	___fladd@a+1,w
  8830  170A  0253               	subwf	___fladd@b+1,w
  8831  170B  1D03               	skipz
  8832  170C  2F0F               	goto	u369_23
  8833  170D  0856               	movf	___fladd@a,w
  8834  170E  0252               	subwf	___fladd@b,w
  8835  170F                     u369_23:	
  8836  170F  1803               	skipnc
  8837  1710  2F67               	goto	i1l2543
  8838  1711  30FF               	movlw	255
  8839  1712  00DA               	movwf	??___fladd
  8840  1713  30FF               	movlw	255
  8841  1714  00DB               	movwf	??___fladd+1
  8842  1715  30FF               	movlw	255
  8843  1716  00DC               	movwf	??___fladd+2
  8844  1717  30FF               	movlw	255
  8845  1718  00DD               	movwf	??___fladd+3
  8846  1719  0856               	movf	___fladd@a,w
  8847  171A  00DE               	movwf	??___fladd+4
  8848  171B  0857               	movf	___fladd@a+1,w
  8849  171C  00DF               	movwf	??___fladd+5
  8850  171D  0858               	movf	___fladd@a+2,w
  8851  171E  00E0               	movwf	??___fladd+6
  8852  171F  0859               	movf	___fladd@a+3,w
  8853  1720  00E1               	movwf	??___fladd+7
  8854  1721  0852               	movf	___fladd@b,w
  8855  1722  02DE               	subwf	??___fladd+4,f
  8856  1723  0853               	movf	___fladd@b+1,w
  8857  1724  1C03               	skipc
  8858  1725  0F53               	incfsz	___fladd@b+1,w
  8859  1726  2F28               	goto	u370_21
  8860  1727  2F29               	goto	u370_22
  8861  1728                     u370_21:	
  8862  1728  02DF               	subwf	??___fladd+5,f
  8863  1729                     u370_22:	
  8864  1729  0854               	movf	___fladd@b+2,w
  8865  172A  1C03               	skipc
  8866  172B  0F54               	incfsz	___fladd@b+2,w
  8867  172C  2F2E               	goto	u370_23
  8868  172D  2F2F               	goto	u370_24
  8869  172E                     u370_23:	
  8870  172E  02E0               	subwf	??___fladd+6,f
  8871  172F                     u370_24:	
  8872  172F  0855               	movf	___fladd@b+3,w
  8873  1730  1C03               	skipc
  8874  1731  0F55               	incfsz	___fladd@b+3,w
  8875  1732  2F34               	goto	u370_25
  8876  1733  2F35               	goto	u370_26
  8877  1734                     u370_25:	
  8878  1734  02E1               	subwf	??___fladd+7,f
  8879  1735                     u370_26:	
  8880  1735  085E               	movf	??___fladd+4,w
  8881  1736  07DA               	addwf	??___fladd,f
  8882  1737  085F               	movf	??___fladd+5,w
  8883  1738  1803               	skipnc
  8884  1739  0F5F               	incfsz	??___fladd+5,w
  8885  173A  2F3C               	goto	u371_20
  8886  173B  2F3D               	goto	u371_21
  8887  173C                     u371_20:	
  8888  173C  07DB               	addwf	??___fladd+1,f
  8889  173D                     u371_21:	
  8890  173D  0860               	movf	??___fladd+6,w
  8891  173E  1803               	skipnc
  8892  173F  0F60               	incfsz	??___fladd+6,w
  8893  1740  2F42               	goto	u371_22
  8894  1741  2F43               	goto	u371_23
  8895  1742                     u371_22:	
  8896  1742  07DC               	addwf	??___fladd+2,f
  8897  1743                     u371_23:	
  8898  1743  0861               	movf	??___fladd+7,w
  8899  1744  1803               	skipnc
  8900  1745  0A61               	incf	??___fladd+7,w
  8901  1746  07DD               	addwf	??___fladd+3,f
  8902  1747  085D               	movf	??___fladd+3,w
  8903  1748  00D5               	movwf	___fladd@b+3
  8904  1749  085C               	movf	??___fladd+2,w
  8905  174A  00D4               	movwf	___fladd@b+2
  8906  174B  085B               	movf	??___fladd+1,w
  8907  174C  00D3               	movwf	___fladd@b+1
  8908  174D  085A               	movf	??___fladd,w
  8909  174E  00D2               	movwf	___fladd@b
  8910  174F  3080               	movlw	128
  8911  1750  00DA               	movwf	??___fladd
  8912  1751  085A               	movf	??___fladd,w
  8913  1752  06E2               	xorwf	___fladd@signs,f
  8914  1753  09E5               	comf	___fladd@grs,f
  8915  1754  0AE5               	incf	___fladd@grs,f
  8916  1755  0865               	movf	___fladd@grs,w
  8917  1756  1D03               	btfss	3,2
  8918  1757  2F75               	goto	i1l641
  8919  1758  3001               	movlw	1
  8920  1759  07D2               	addwf	___fladd@b,f
  8921  175A  3000               	movlw	0
  8922  175B  1803               	skipnc
  8923  175C  3001               	movlw	1
  8924  175D  07D3               	addwf	___fladd@b+1,f
  8925  175E  3000               	movlw	0
  8926  175F  1803               	skipnc
  8927  1760  3001               	movlw	1
  8928  1761  07D4               	addwf	___fladd@b+2,f
  8929  1762  3000               	movlw	0
  8930  1763  1803               	skipnc
  8931  1764  3001               	movlw	1
  8932  1765  07D5               	addwf	___fladd@b+3,f
  8933  1766  2F75               	goto	i1l641
  8934  1767                     i1l2543:	
  8935  1767  0856               	movf	___fladd@a,w
  8936  1768  02D2               	subwf	___fladd@b,f
  8937  1769  0857               	movf	___fladd@a+1,w
  8938  176A  1C03               	skipc
  8939  176B  0F57               	incfsz	___fladd@a+1,w
  8940  176C  02D3               	subwf	___fladd@b+1,f
  8941  176D  0858               	movf	___fladd@a+2,w
  8942  176E  1C03               	skipc
  8943  176F  0F58               	incfsz	___fladd@a+2,w
  8944  1770  02D4               	subwf	___fladd@b+2,f
  8945  1771  0859               	movf	___fladd@a+3,w
  8946  1772  1C03               	skipc
  8947  1773  0F59               	incfsz	___fladd@a+3,w
  8948  1774  02D5               	subwf	___fladd@b+3,f
  8949  1775                     i1l641:	
  8950  1775  0855               	movf	___fladd@b+3,w
  8951  1776  0454               	iorwf	___fladd@b+2,w
  8952  1777  0453               	iorwf	___fladd@b+1,w
  8953  1778  0452               	iorwf	___fladd@b,w
  8954  1779  1D03               	skipz
  8955  177A  2F9D               	goto	i1l2565
  8956  177B  0865               	movf	___fladd@grs,w
  8957  177C  1D03               	btfss	3,2
  8958  177D  2F9D               	goto	i1l2565
  8959  177E  3000               	movlw	0
  8960  177F  00D5               	movwf	?___fladd+3
  8961  1780  3000               	movlw	0
  8962  1781  00D4               	movwf	?___fladd+2
  8963  1782  3000               	movlw	0
  8964  1783  00D3               	movwf	?___fladd+1
  8965  1784  3000               	movlw	0
  8966  1785  00D2               	movwf	?___fladd
  8967  1786  0008               	return
  8968  1787                     i1l2551:	
  8969  1787  3001               	movlw	1
  8970  1788  00DA               	movwf	??___fladd
  8971  1789                     u375_25:	
  8972  1789  1003               	clrc
  8973  178A  0DD2               	rlf	___fladd@b,f
  8974  178B  0DD3               	rlf	___fladd@b+1,f
  8975  178C  0DD4               	rlf	___fladd@b+2,f
  8976  178D  0DD5               	rlf	___fladd@b+3,f
  8977  178E  0BDA               	decfsz	??___fladd,f
  8978  178F  2F89               	goto	u375_25
  8979  1790  1BE5               	btfsc	___fladd@grs,7
  8980  1791  1452               	bsf	___fladd@b,0
  8981  1792  1C65               	btfss	___fladd@grs,0
  8982  1793  2F96               	goto	i1l2559
  8983  1794  1403               	setc
  8984  1795  2F97               	goto	L7
  8985  1796                     i1l2559:	
  8986  1796  1003               	clrc
  8987  1797                     L7:	
  8988  1797  0DE5               	rlf	___fladd@grs,f
  8989  1798  0864               	movf	___fladd@bexp,w
  8990  1799  1903               	btfsc	3,2
  8991  179A  2F9D               	goto	i1l2565
  8992  179B  3001               	movlw	1
  8993  179C  02E4               	subwf	___fladd@bexp,f
  8994  179D                     i1l2565:	
  8995  179D  1FD4               	btfss	___fladd@b+2,7
  8996  179E  2F87               	goto	i1l2551
  8997  179F                     i1l2567:	
  8998  179F  01E3               	clrf	___fladd@aexp
  8999  17A0  1FE5               	btfss	___fladd@grs,7
  9000  17A1  2FAA               	goto	i1l2577
  9001  17A2  0865               	movf	___fladd@grs,w
  9002  17A3  397F               	andlw	127
  9003  17A4  1903               	btfsc	3,2
  9004  17A5  1852               	btfsc	___fladd@b,0
  9005  17A6  2FA8               	goto	i1l2573
  9006  17A7  2FAA               	goto	i1l2577
  9007  17A8                     i1l2573:	
  9008  17A8  01E3               	clrf	___fladd@aexp
  9009  17A9  0AE3               	incf	___fladd@aexp,f
  9010  17AA                     i1l2577:	
  9011  17AA  0863               	movf	___fladd@aexp,w
  9012  17AB  1903               	btfsc	3,2
  9013  17AC  2FDD               	goto	i1l654
  9014  17AD  3001               	movlw	1
  9015  17AE  07D2               	addwf	___fladd@b,f
  9016  17AF  3000               	movlw	0
  9017  17B0  1803               	skipnc
  9018  17B1  3001               	movlw	1
  9019  17B2  07D3               	addwf	___fladd@b+1,f
  9020  17B3  3000               	movlw	0
  9021  17B4  1803               	skipnc
  9022  17B5  3001               	movlw	1
  9023  17B6  07D4               	addwf	___fladd@b+2,f
  9024  17B7  3000               	movlw	0
  9025  17B8  1803               	skipnc
  9026  17B9  3001               	movlw	1
  9027  17BA  07D5               	addwf	___fladd@b+3,f
  9028  17BB  1C55               	btfss	___fladd@b+3,0
  9029  17BC  2FDD               	goto	i1l654
  9030  17BD  0852               	movf	___fladd@b,w
  9031  17BE  00DA               	movwf	??___fladd
  9032  17BF  0853               	movf	___fladd@b+1,w
  9033  17C0  00DB               	movwf	??___fladd+1
  9034  17C1  0854               	movf	___fladd@b+2,w
  9035  17C2  00DC               	movwf	??___fladd+2
  9036  17C3  0855               	movf	___fladd@b+3,w
  9037  17C4  00DD               	movwf	??___fladd+3
  9038  17C5  3001               	movlw	1
  9039  17C6  00DE               	movwf	??___fladd+4
  9040  17C7                     u385_25:	
  9041  17C7  0D5D               	rlf	??___fladd+3,w
  9042  17C8  0CDD               	rrf	??___fladd+3,f
  9043  17C9  0CDC               	rrf	??___fladd+2,f
  9044  17CA  0CDB               	rrf	??___fladd+1,f
  9045  17CB  0CDA               	rrf	??___fladd,f
  9046  17CC  0BDE               	decfsz	??___fladd+4,f
  9047  17CD  2FC7               	goto	u385_25
  9048  17CE  085D               	movf	??___fladd+3,w
  9049  17CF  00D5               	movwf	___fladd@b+3
  9050  17D0  085C               	movf	??___fladd+2,w
  9051  17D1  00D4               	movwf	___fladd@b+2
  9052  17D2  085B               	movf	??___fladd+1,w
  9053  17D3  00D3               	movwf	___fladd@b+1
  9054  17D4  085A               	movf	??___fladd,w
  9055  17D5  00D2               	movwf	___fladd@b
  9056  17D6  0A64               	incf	___fladd@bexp,w
  9057  17D7  1903               	btfsc	3,2
  9058  17D8  2FDD               	goto	i1l654
  9059  17D9  3001               	movlw	1
  9060  17DA  00DA               	movwf	??___fladd
  9061  17DB  085A               	movf	??___fladd,w
  9062  17DC  07E4               	addwf	___fladd@bexp,f
  9063  17DD                     i1l654:	
  9064  17DD  0A64               	incf	___fladd@bexp,w
  9065  17DE  1D03               	btfss	3,2
  9066  17DF  0864               	movf	___fladd@bexp,w
  9067  17E0  1D03               	btfss	3,2
  9068  17E1  2FED               	goto	i1l2595
  9069  17E2  3000               	movlw	0
  9070  17E3  00D5               	movwf	___fladd@b+3
  9071  17E4  3000               	movlw	0
  9072  17E5  00D4               	movwf	___fladd@b+2
  9073  17E6  3000               	movlw	0
  9074  17E7  00D3               	movwf	___fladd@b+1
  9075  17E8  3000               	movlw	0
  9076  17E9  00D2               	movwf	___fladd@b
  9077  17EA  0864               	movf	___fladd@bexp,w
  9078  17EB  1903               	btfsc	3,2
  9079  17EC  01E2               	clrf	___fladd@signs
  9080  17ED                     i1l2595:	
  9081  17ED  1C64               	btfss	___fladd@bexp,0
  9082  17EE  2FF1               	goto	i1l2599
  9083  17EF  17D4               	bsf	___fladd@b+2,7
  9084  17F0  2FF5               	goto	i1l662
  9085  17F1                     i1l2599:	
  9086  17F1  307F               	movlw	127
  9087  17F2  00DA               	movwf	??___fladd
  9088  17F3  085A               	movf	??___fladd,w
  9089  17F4  05D4               	andwf	___fladd@b+2,f
  9090  17F5                     i1l662:	
  9091  17F5  0864               	movf	___fladd@bexp,w
  9092  17F6  00DA               	movwf	??___fladd
  9093  17F7  1003               	clrc
  9094  17F8  0C5A               	rrf	??___fladd,w
  9095  17F9  00DB               	movwf	??___fladd+1
  9096  17FA  085B               	movf	??___fladd+1,w
  9097  17FB  00D5               	movwf	___fladd@b+3
  9098  17FC  1FE2               	btfss	___fladd@signs,7
  9099  17FD  0008               	return
  9100  17FE  17D5               	bsf	___fladd@b+3,7
  9101  17FF  0008               	return
  9102  1800                     __end_of___fladd:	
  9103                           
  9104                           	psect	text35
  9105  1ABA                     __ptext35:	
  9106 ;; *************** function ___flneg *****************
  9107 ;; Defined at:
  9108 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;  f1              4    0[COMMON] unsigned char 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;		None
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  4    0[COMMON] unsigned char 
  9115 ;; Registers used:
  9116 ;;		wreg
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9122 ;;      Params:         4       0       0       0       0
  9123 ;;      Locals:         0       0       0       0       0
  9124 ;;      Temps:          0       0       0       0       0
  9125 ;;      Totals:         4       0       0       0       0
  9126 ;;Total ram usage:        4 bytes
  9127 ;; Hardware stack levels used:    1
  9128 ;; This function calls:
  9129 ;;		Nothing
  9130 ;; This function is called by:
  9131 ;;		_sprintf
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           
  9136                           ;psect for function ___flneg
  9137  1ABA                     ___flneg:	
  9138                           
  9139                           ;incstack = 0
  9140                           ; Regs used in ___flneg: [wreg]
  9141  1ABA  0873               	movf	___flneg@f1+3,w
  9142  1ABB  0472               	iorwf	___flneg@f1+2,w
  9143  1ABC  0471               	iorwf	___flneg@f1+1,w
  9144  1ABD  0470               	iorwf	___flneg@f1,w
  9145  1ABE  1903               	skipnz
  9146  1ABF  0008               	return
  9147  1AC0  3080               	movlw	128
  9148  1AC1  06F3               	xorwf	___flneg@f1+3,f
  9149  1AC2  0008               	return
  9150  1AC3                     __end_of___flneg:	
  9151                           
  9152                           	psect	text36
  9153  1147                     __ptext36:	
  9154 ;; *************** function ___flge *****************
  9155 ;; Defined at:
  9156 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;  ff1             4    0[COMMON] unsigned char 
  9159 ;;  ff2             4    4[COMMON] unsigned char 
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;		None               void
  9164 ;; Registers used:
  9165 ;;		wreg, status,2, status,0
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9171 ;;      Params:         8       0       0       0       0
  9172 ;;      Locals:         0       0       0       0       0
  9173 ;;      Temps:          4       0       0       0       0
  9174 ;;      Totals:        12       0       0       0       0
  9175 ;;Total ram usage:       12 bytes
  9176 ;; Hardware stack levels used:    1
  9177 ;; This function calls:
  9178 ;;		Nothing
  9179 ;; This function is called by:
  9180 ;;		_sprintf
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           
  9185                           ;psect for function ___flge
  9186  1147                     ___flge:	
  9187                           
  9188                           ;incstack = 0
  9189                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9190  1147  3000               	movlw	0
  9191  1148  0570               	andwf	___flge@ff1,w
  9192  1149  00F8               	movwf	??___flge
  9193  114A  3000               	movlw	0
  9194  114B  0571               	andwf	___flge@ff1+1,w
  9195  114C  00F9               	movwf	??___flge+1
  9196  114D  3080               	movlw	128
  9197  114E  0572               	andwf	___flge@ff1+2,w
  9198  114F  00FA               	movwf	??___flge+2
  9199  1150  307F               	movlw	127
  9200  1151  0573               	andwf	___flge@ff1+3,w
  9201  1152  00FB               	movwf	??___flge+3
  9202  1153  087B               	movf	??___flge+3,w
  9203  1154  047A               	iorwf	??___flge+2,w
  9204  1155  0479               	iorwf	??___flge+1,w
  9205  1156  0478               	iorwf	??___flge,w
  9206  1157  1D03               	skipz
  9207  1158  2961               	goto	i1l484
  9208  1159  3000               	movlw	0
  9209  115A  00F3               	movwf	___flge@ff1+3
  9210  115B  3000               	movlw	0
  9211  115C  00F2               	movwf	___flge@ff1+2
  9212  115D  3000               	movlw	0
  9213  115E  00F1               	movwf	___flge@ff1+1
  9214  115F  3000               	movlw	0
  9215  1160  00F0               	movwf	___flge@ff1
  9216  1161                     i1l484:	
  9217  1161  3000               	movlw	0
  9218  1162  0574               	andwf	___flge@ff2,w
  9219  1163  00F8               	movwf	??___flge
  9220  1164  3000               	movlw	0
  9221  1165  0575               	andwf	___flge@ff2+1,w
  9222  1166  00F9               	movwf	??___flge+1
  9223  1167  3080               	movlw	128
  9224  1168  0576               	andwf	___flge@ff2+2,w
  9225  1169  00FA               	movwf	??___flge+2
  9226  116A  307F               	movlw	127
  9227  116B  0577               	andwf	___flge@ff2+3,w
  9228  116C  00FB               	movwf	??___flge+3
  9229  116D  087B               	movf	??___flge+3,w
  9230  116E  047A               	iorwf	??___flge+2,w
  9231  116F  0479               	iorwf	??___flge+1,w
  9232  1170  0478               	iorwf	??___flge,w
  9233  1171  1D03               	skipz
  9234  1172  297B               	goto	i1l3003
  9235  1173  3000               	movlw	0
  9236  1174  00F7               	movwf	___flge@ff2+3
  9237  1175  3000               	movlw	0
  9238  1176  00F6               	movwf	___flge@ff2+2
  9239  1177  3000               	movlw	0
  9240  1178  00F5               	movwf	___flge@ff2+1
  9241  1179  3000               	movlw	0
  9242  117A  00F4               	movwf	___flge@ff2
  9243  117B                     i1l3003:	
  9244  117B  1FF3               	btfss	___flge@ff1+3,7
  9245  117C  29A1               	goto	i1l3007
  9246  117D  3000               	movlw	0
  9247  117E  00F8               	movwf	??___flge
  9248  117F  3000               	movlw	0
  9249  1180  00F9               	movwf	??___flge+1
  9250  1181  3000               	movlw	0
  9251  1182  00FA               	movwf	??___flge+2
  9252  1183  3080               	movlw	128
  9253  1184  00FB               	movwf	??___flge+3
  9254  1185  0870               	movf	___flge@ff1,w
  9255  1186  02F8               	subwf	??___flge,f
  9256  1187  0871               	movf	___flge@ff1+1,w
  9257  1188  1C03               	skipc
  9258  1189  0F71               	incfsz	___flge@ff1+1,w
  9259  118A  298C               	goto	u502_21
  9260  118B  298D               	goto	u502_22
  9261  118C                     u502_21:	
  9262  118C  02F9               	subwf	??___flge+1,f
  9263  118D                     u502_22:	
  9264  118D  0872               	movf	___flge@ff1+2,w
  9265  118E  1C03               	skipc
  9266  118F  0F72               	incfsz	___flge@ff1+2,w
  9267  1190  2992               	goto	u502_23
  9268  1191  2993               	goto	u502_24
  9269  1192                     u502_23:	
  9270  1192  02FA               	subwf	??___flge+2,f
  9271  1193                     u502_24:	
  9272  1193  0873               	movf	___flge@ff1+3,w
  9273  1194  1C03               	skipc
  9274  1195  0F73               	incfsz	___flge@ff1+3,w
  9275  1196  2998               	goto	u502_25
  9276  1197  2999               	goto	u502_26
  9277  1198                     u502_25:	
  9278  1198  02FB               	subwf	??___flge+3,f
  9279  1199                     u502_26:	
  9280  1199  087B               	movf	??___flge+3,w
  9281  119A  00F3               	movwf	___flge@ff1+3
  9282  119B  087A               	movf	??___flge+2,w
  9283  119C  00F2               	movwf	___flge@ff1+2
  9284  119D  0879               	movf	??___flge+1,w
  9285  119E  00F1               	movwf	___flge@ff1+1
  9286  119F  0878               	movf	??___flge,w
  9287  11A0  00F0               	movwf	___flge@ff1
  9288  11A1                     i1l3007:	
  9289  11A1  1FF7               	btfss	___flge@ff2+3,7
  9290  11A2  29C7               	goto	i1l487
  9291  11A3  3000               	movlw	0
  9292  11A4  00F8               	movwf	??___flge
  9293  11A5  3000               	movlw	0
  9294  11A6  00F9               	movwf	??___flge+1
  9295  11A7  3000               	movlw	0
  9296  11A8  00FA               	movwf	??___flge+2
  9297  11A9  3080               	movlw	128
  9298  11AA  00FB               	movwf	??___flge+3
  9299  11AB  0874               	movf	___flge@ff2,w
  9300  11AC  02F8               	subwf	??___flge,f
  9301  11AD  0875               	movf	___flge@ff2+1,w
  9302  11AE  1C03               	skipc
  9303  11AF  0F75               	incfsz	___flge@ff2+1,w
  9304  11B0  29B2               	goto	u504_21
  9305  11B1  29B3               	goto	u504_22
  9306  11B2                     u504_21:	
  9307  11B2  02F9               	subwf	??___flge+1,f
  9308  11B3                     u504_22:	
  9309  11B3  0876               	movf	___flge@ff2+2,w
  9310  11B4  1C03               	skipc
  9311  11B5  0F76               	incfsz	___flge@ff2+2,w
  9312  11B6  29B8               	goto	u504_23
  9313  11B7  29B9               	goto	u504_24
  9314  11B8                     u504_23:	
  9315  11B8  02FA               	subwf	??___flge+2,f
  9316  11B9                     u504_24:	
  9317  11B9  0877               	movf	___flge@ff2+3,w
  9318  11BA  1C03               	skipc
  9319  11BB  0F77               	incfsz	___flge@ff2+3,w
  9320  11BC  29BE               	goto	u504_25
  9321  11BD  29BF               	goto	u504_26
  9322  11BE                     u504_25:	
  9323  11BE  02FB               	subwf	??___flge+3,f
  9324  11BF                     u504_26:	
  9325  11BF  087B               	movf	??___flge+3,w
  9326  11C0  00F7               	movwf	___flge@ff2+3
  9327  11C1  087A               	movf	??___flge+2,w
  9328  11C2  00F6               	movwf	___flge@ff2+2
  9329  11C3  0879               	movf	??___flge+1,w
  9330  11C4  00F5               	movwf	___flge@ff2+1
  9331  11C5  0878               	movf	??___flge,w
  9332  11C6  00F4               	movwf	___flge@ff2
  9333  11C7                     i1l487:	
  9334  11C7  3080               	movlw	128
  9335  11C8  06F3               	xorwf	___flge@ff1+3,f
  9336  11C9  3080               	movlw	128
  9337  11CA  06F7               	xorwf	___flge@ff2+3,f
  9338  11CB  0877               	movf	___flge@ff2+3,w
  9339  11CC  0273               	subwf	___flge@ff1+3,w
  9340  11CD  1D03               	skipz
  9341  11CE  0008               	return
  9342  11CF  0876               	movf	___flge@ff2+2,w
  9343  11D0  0272               	subwf	___flge@ff1+2,w
  9344  11D1  1D03               	skipz
  9345  11D2  0008               	return
  9346  11D3  0875               	movf	___flge@ff2+1,w
  9347  11D4  0271               	subwf	___flge@ff1+1,w
  9348  11D5  1D03               	skipz
  9349  11D6  0008               	return
  9350  11D7  0874               	movf	___flge@ff2,w
  9351  11D8  0270               	subwf	___flge@ff1,w
  9352  11D9  0008               	return
  9353  11DA                     __end_of___flge:	
  9354                           
  9355                           	psect	text37
  9356  1D1E                     __ptext37:	
  9357 ;; *************** function ___fleq *****************
  9358 ;; Defined at:
  9359 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;  ff1             4    0[COMMON] unsigned char 
  9362 ;;  ff2             4    4[COMMON] unsigned char 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;		None               void
  9367 ;; Registers used:
  9368 ;;		wreg, status,2, status,0
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9374 ;;      Params:         8       0       0       0       0
  9375 ;;      Locals:         0       0       0       0       0
  9376 ;;      Temps:          4       0       0       0       0
  9377 ;;      Totals:        12       0       0       0       0
  9378 ;;Total ram usage:       12 bytes
  9379 ;; Hardware stack levels used:    1
  9380 ;; This function calls:
  9381 ;;		Nothing
  9382 ;; This function is called by:
  9383 ;;		_my_isr_routine
  9384 ;;		_sprintf
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           
  9389                           ;psect for function ___fleq
  9390  1D1E                     ___fleq:	
  9391                           
  9392                           ;incstack = 0
  9393                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9394  1D1E  3000               	movlw	0
  9395  1D1F  0570               	andwf	___fleq@ff1,w
  9396  1D20  00F8               	movwf	??___fleq
  9397  1D21  3000               	movlw	0
  9398  1D22  0571               	andwf	___fleq@ff1+1,w
  9399  1D23  00F9               	movwf	??___fleq+1
  9400  1D24  3080               	movlw	128
  9401  1D25  0572               	andwf	___fleq@ff1+2,w
  9402  1D26  00FA               	movwf	??___fleq+2
  9403  1D27  307F               	movlw	127
  9404  1D28  0573               	andwf	___fleq@ff1+3,w
  9405  1D29  00FB               	movwf	??___fleq+3
  9406  1D2A  087B               	movf	??___fleq+3,w
  9407  1D2B  047A               	iorwf	??___fleq+2,w
  9408  1D2C  0479               	iorwf	??___fleq+1,w
  9409  1D2D  0478               	iorwf	??___fleq,w
  9410  1D2E  1D03               	skipz
  9411  1D2F  2D38               	goto	i1l479
  9412  1D30  3000               	movlw	0
  9413  1D31  00F3               	movwf	___fleq@ff1+3
  9414  1D32  3000               	movlw	0
  9415  1D33  00F2               	movwf	___fleq@ff1+2
  9416  1D34  3000               	movlw	0
  9417  1D35  00F1               	movwf	___fleq@ff1+1
  9418  1D36  3000               	movlw	0
  9419  1D37  00F0               	movwf	___fleq@ff1
  9420  1D38                     i1l479:	
  9421  1D38  3000               	movlw	0
  9422  1D39  0574               	andwf	___fleq@ff2,w
  9423  1D3A  00F8               	movwf	??___fleq
  9424  1D3B  3000               	movlw	0
  9425  1D3C  0575               	andwf	___fleq@ff2+1,w
  9426  1D3D  00F9               	movwf	??___fleq+1
  9427  1D3E  3080               	movlw	128
  9428  1D3F  0576               	andwf	___fleq@ff2+2,w
  9429  1D40  00FA               	movwf	??___fleq+2
  9430  1D41  307F               	movlw	127
  9431  1D42  0577               	andwf	___fleq@ff2+3,w
  9432  1D43  00FB               	movwf	??___fleq+3
  9433  1D44  087B               	movf	??___fleq+3,w
  9434  1D45  047A               	iorwf	??___fleq+2,w
  9435  1D46  0479               	iorwf	??___fleq+1,w
  9436  1D47  0478               	iorwf	??___fleq,w
  9437  1D48  1D03               	skipz
  9438  1D49  2D52               	goto	i1l480
  9439  1D4A  3000               	movlw	0
  9440  1D4B  00F7               	movwf	___fleq@ff2+3
  9441  1D4C  3000               	movlw	0
  9442  1D4D  00F6               	movwf	___fleq@ff2+2
  9443  1D4E  3000               	movlw	0
  9444  1D4F  00F5               	movwf	___fleq@ff2+1
  9445  1D50  3000               	movlw	0
  9446  1D51  00F4               	movwf	___fleq@ff2
  9447  1D52                     i1l480:	
  9448  1D52  0877               	movf	___fleq@ff2+3,w
  9449  1D53  0673               	xorwf	___fleq@ff1+3,w
  9450  1D54  1D03               	skipz
  9451  1D55  2D60               	goto	u498_25
  9452  1D56  0876               	movf	___fleq@ff2+2,w
  9453  1D57  0672               	xorwf	___fleq@ff1+2,w
  9454  1D58  1D03               	skipz
  9455  1D59  2D60               	goto	u498_25
  9456  1D5A  0875               	movf	___fleq@ff2+1,w
  9457  1D5B  0671               	xorwf	___fleq@ff1+1,w
  9458  1D5C  1D03               	skipz
  9459  1D5D  2D60               	goto	u498_25
  9460  1D5E  0874               	movf	___fleq@ff2,w
  9461  1D5F  0670               	xorwf	___fleq@ff1,w
  9462  1D60                     u498_25:	
  9463  1D60  1903               	skipnz
  9464  1D61  2D64               	goto	i1l2993
  9465  1D62  1003               	clrc
  9466  1D63  0008               	return
  9467  1D64                     i1l2993:	
  9468  1D64  1403               	setc
  9469  1D65  0008               	return
  9470  1D66                     __end_of___fleq:	
  9471                           
  9472                           	psect	text38
  9473  0596                     __ptext38:	
  9474 ;; *************** function ___fldiv *****************
  9475 ;; Defined at:
  9476 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;  a               4   70[BANK0 ] unsigned char 
  9479 ;;  b               4   74[BANK0 ] unsigned char 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;  grs             4   12[BANK1 ] unsigned long 
  9482 ;;  rem             4    5[BANK1 ] unsigned long 
  9483 ;;  new_exp         2   10[BANK1 ] int 
  9484 ;;  aexp            1   17[BANK1 ] unsigned char 
  9485 ;;  bexp            1   16[BANK1 ] unsigned char 
  9486 ;;  sign            1    9[BANK1 ] unsigned char 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  4   70[BANK0 ] unsigned char 
  9489 ;; Registers used:
  9490 ;;		wreg, status,2, status,0, btemp+1
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9496 ;;      Params:         0       8       0       0       0
  9497 ;;      Locals:         0       0      13       0       0
  9498 ;;      Temps:          0       0       5       0       0
  9499 ;;      Totals:         0       8      18       0       0
  9500 ;;Total ram usage:       26 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; This function calls:
  9503 ;;		Nothing
  9504 ;; This function is called by:
  9505 ;;		_my_isr_routine
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           
  9510                           ;psect for function ___fldiv
  9511  0596                     ___fldiv:	
  9512                           
  9513                           ;incstack = 0
  9514                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9515  0596  1283               	bcf	3,5	;RP0=0, select bank0
  9516  0597  1303               	bcf	3,6	;RP1=0, select bank0
  9517  0598  086D               	movf	___fldiv@b+3,w
  9518  0599  3980               	andlw	128
  9519  059A  1683               	bsf	3,5	;RP0=1, select bank1
  9520  059B  1303               	bcf	3,6	;RP1=0, select bank1
  9521  059C  00A0               	movwf	??___fldiv^(0+128)
  9522  059D  0820               	movf	??___fldiv^(0+128),w
  9523  059E  00A9               	movwf	___fldiv@sign^(0+128)
  9524  059F  1283               	bcf	3,5	;RP0=0, select bank0
  9525  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  9526  05A1  086D               	movf	___fldiv@b+3,w
  9527  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  9528  05A3  1303               	bcf	3,6	;RP1=0, select bank1
  9529  05A4  00A0               	movwf	??___fldiv^(0+128)
  9530  05A5  0720               	addwf	??___fldiv^(0+128),w
  9531  05A6  00A1               	movwf	(??___fldiv+1)^(0+128)
  9532  05A7  0821               	movf	(??___fldiv+1)^(0+128),w
  9533  05A8  00B0               	movwf	___fldiv@bexp^(0+128)
  9534  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  9535  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  9536  05AB  1FEC               	btfss	___fldiv@b+2,7
  9537  05AC  2DB0               	goto	i1l3391
  9538  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  9539  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  9540  05AF  1430               	bsf	___fldiv@bexp^(0+128),0
  9541  05B0                     i1l3391:	
  9542  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  9543  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  9544  05B2  0830               	movf	___fldiv@bexp^(0+128),w
  9545  05B3  1903               	btfsc	3,2
  9546  05B4  2DC6               	goto	i1l3401
  9547  05B5  0A30               	incf	___fldiv@bexp^(0+128),w
  9548  05B6  1D03               	btfss	3,2
  9549  05B7  2DC2               	goto	i1l3397
  9550  05B8  3000               	movlw	0
  9551  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  9552  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  9553  05BB  00ED               	movwf	___fldiv@b+3
  9554  05BC  3000               	movlw	0
  9555  05BD  00EC               	movwf	___fldiv@b+2
  9556  05BE  3000               	movlw	0
  9557  05BF  00EB               	movwf	___fldiv@b+1
  9558  05C0  3000               	movlw	0
  9559  05C1  00EA               	movwf	___fldiv@b
  9560  05C2                     i1l3397:	
  9561  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  9562  05C3  17EC               	bsf	___fldiv@b+2,7
  9563  05C4  01ED               	clrf	___fldiv@b+3
  9564  05C5  2DD0               	goto	i1l3403
  9565  05C6                     i1l3401:	
  9566  05C6  3000               	movlw	0
  9567  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  9568  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  9569  05C9  00ED               	movwf	___fldiv@b+3
  9570  05CA  3000               	movlw	0
  9571  05CB  00EC               	movwf	___fldiv@b+2
  9572  05CC  3000               	movlw	0
  9573  05CD  00EB               	movwf	___fldiv@b+1
  9574  05CE  3000               	movlw	0
  9575  05CF  00EA               	movwf	___fldiv@b
  9576  05D0                     i1l3403:	
  9577  05D0  0869               	movf	___fldiv@a+3,w
  9578  05D1  3980               	andlw	128
  9579  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  9580  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  9581  05D4  00A0               	movwf	??___fldiv^(0+128)
  9582  05D5  0820               	movf	??___fldiv^(0+128),w
  9583  05D6  06A9               	xorwf	___fldiv@sign^(0+128),f
  9584  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  9585  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  9586  05D9  0869               	movf	___fldiv@a+3,w
  9587  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  9588  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  9589  05DC  00A0               	movwf	??___fldiv^(0+128)
  9590  05DD  0720               	addwf	??___fldiv^(0+128),w
  9591  05DE  00A1               	movwf	(??___fldiv+1)^(0+128)
  9592  05DF  0821               	movf	(??___fldiv+1)^(0+128),w
  9593  05E0  00B1               	movwf	___fldiv@aexp^(0+128)
  9594  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  9595  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  9596  05E3  1FE8               	btfss	___fldiv@a+2,7
  9597  05E4  2DE8               	goto	i1l3411
  9598  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  9599  05E6  1303               	bcf	3,6	;RP1=0, select bank1
  9600  05E7  1431               	bsf	___fldiv@aexp^(0+128),0
  9601  05E8                     i1l3411:	
  9602  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  9603  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  9604  05EA  0831               	movf	___fldiv@aexp^(0+128),w
  9605  05EB  1903               	btfsc	3,2
  9606  05EC  2DFE               	goto	i1l3421
  9607  05ED  0A31               	incf	___fldiv@aexp^(0+128),w
  9608  05EE  1D03               	btfss	3,2
  9609  05EF  2DFA               	goto	i1l3417
  9610  05F0  3000               	movlw	0
  9611  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  9612  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  9613  05F3  00E9               	movwf	___fldiv@a+3
  9614  05F4  3000               	movlw	0
  9615  05F5  00E8               	movwf	___fldiv@a+2
  9616  05F6  3000               	movlw	0
  9617  05F7  00E7               	movwf	___fldiv@a+1
  9618  05F8  3000               	movlw	0
  9619  05F9  00E6               	movwf	___fldiv@a
  9620  05FA                     i1l3417:	
  9621  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  9622  05FB  17E8               	bsf	___fldiv@a+2,7
  9623  05FC  01E9               	clrf	___fldiv@a+3
  9624  05FD  2E08               	goto	i1l676
  9625  05FE                     i1l3421:	
  9626  05FE  3000               	movlw	0
  9627  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  9628  0600  1303               	bcf	3,6	;RP1=0, select bank0
  9629  0601  00E9               	movwf	___fldiv@a+3
  9630  0602  3000               	movlw	0
  9631  0603  00E8               	movwf	___fldiv@a+2
  9632  0604  3000               	movlw	0
  9633  0605  00E7               	movwf	___fldiv@a+1
  9634  0606  3000               	movlw	0
  9635  0607  00E6               	movwf	___fldiv@a
  9636  0608                     i1l676:	
  9637  0608  0869               	movf	___fldiv@a+3,w
  9638  0609  0468               	iorwf	___fldiv@a+2,w
  9639  060A  0467               	iorwf	___fldiv@a+1,w
  9640  060B  0466               	iorwf	___fldiv@a,w
  9641  060C  1D03               	skipz
  9642  060D  2E2B               	goto	i1l3431
  9643  060E  3000               	movlw	0
  9644  060F  00ED               	movwf	___fldiv@b+3
  9645  0610  3000               	movlw	0
  9646  0611  00EC               	movwf	___fldiv@b+2
  9647  0612  3000               	movlw	0
  9648  0613  00EB               	movwf	___fldiv@b+1
  9649  0614  3000               	movlw	0
  9650  0615  00EA               	movwf	___fldiv@b
  9651  0616  3080               	movlw	128
  9652  0617  04EC               	iorwf	___fldiv@b+2,f
  9653  0618  307F               	movlw	127
  9654  0619  04ED               	iorwf	___fldiv@b+3,f
  9655  061A                     L9:	
  9656  061A  1683               	bsf	3,5	;RP0=1, select bank1
  9657  061B  1303               	bcf	3,6	;RP1=0, select bank1
  9658  061C  0829               	movf	___fldiv@sign^(0+128),w
  9659  061D  00A0               	movwf	??___fldiv^(0+128)
  9660  061E  0820               	movf	??___fldiv^(0+128),w
  9661  061F  1283               	bcf	3,5	;RP0=0, select bank0
  9662  0620  1303               	bcf	3,6	;RP1=0, select bank0
  9663  0621  04ED               	iorwf	___fldiv@b+3,f
  9664  0622  086D               	movf	___fldiv@b+3,w
  9665  0623  00E9               	movwf	?___fldiv+3
  9666  0624  086C               	movf	___fldiv@b+2,w
  9667  0625  00E8               	movwf	?___fldiv+2
  9668  0626  086B               	movf	___fldiv@b+1,w
  9669  0627  00E7               	movwf	?___fldiv+1
  9670  0628  086A               	movf	___fldiv@b,w
  9671  0629  00E6               	movwf	?___fldiv
  9672  062A  0008               	return
  9673  062B                     i1l3431:	
  9674  062B  1683               	bsf	3,5	;RP0=1, select bank1
  9675  062C  1303               	bcf	3,6	;RP1=0, select bank1
  9676  062D  0830               	movf	___fldiv@bexp^(0+128),w
  9677  062E  1D03               	btfss	3,2
  9678  062F  2E3B               	goto	i1l3437
  9679  0630  3000               	movlw	0
  9680  0631  1283               	bcf	3,5	;RP0=0, select bank0
  9681  0632  1303               	bcf	3,6	;RP1=0, select bank0
  9682  0633  00E9               	movwf	?___fldiv+3
  9683  0634  3000               	movlw	0
  9684  0635  00E8               	movwf	?___fldiv+2
  9685  0636  3000               	movlw	0
  9686  0637  00E7               	movwf	?___fldiv+1
  9687  0638  3000               	movlw	0
  9688  0639  00E6               	movwf	?___fldiv
  9689  063A  0008               	return
  9690  063B                     i1l3437:	
  9691  063B  0830               	movf	___fldiv@bexp^(0+128),w
  9692  063C  00A0               	movwf	??___fldiv^(0+128)
  9693  063D  01A1               	clrf	(??___fldiv^(0+128)+1)
  9694  063E  0821               	movf	(??___fldiv+1)^(0+128),w
  9695  063F  00A3               	movwf	((??___fldiv+2)^(0+128)+1)
  9696  0640  0831               	movf	___fldiv@aexp^(0+128),w
  9697  0641  0220               	subwf	??___fldiv^(0+128),w
  9698  0642  00A2               	movwf	(??___fldiv+2)^(0+128)
  9699  0643  1C03               	skipc
  9700  0644  03A3               	decf	((??___fldiv+2)^(0+128)+1),f
  9701  0645  0822               	movf	(??___fldiv+2)^(0+128),w
  9702  0646  3E7F               	addlw	127
  9703  0647  00AA               	movwf	___fldiv@new_exp^(0+128)
  9704  0648  0823               	movf	(??___fldiv+3)^(0+128),w
  9705  0649  1803               	skipnc
  9706  064A  3E01               	addlw	1
  9707  064B  3E00               	addlw	0
  9708  064C  00AB               	movwf	(___fldiv@new_exp+1)^(0+128)
  9709  064D  1283               	bcf	3,5	;RP0=0, select bank0
  9710  064E  1303               	bcf	3,6	;RP1=0, select bank0
  9711  064F  086D               	movf	___fldiv@b+3,w
  9712  0650  1683               	bsf	3,5	;RP0=1, select bank1
  9713  0651  1303               	bcf	3,6	;RP1=0, select bank1
  9714  0652  00A8               	movwf	(___fldiv@rem+3)^(0+128)
  9715  0653  1283               	bcf	3,5	;RP0=0, select bank0
  9716  0654  1303               	bcf	3,6	;RP1=0, select bank0
  9717  0655  086C               	movf	___fldiv@b+2,w
  9718  0656  1683               	bsf	3,5	;RP0=1, select bank1
  9719  0657  1303               	bcf	3,6	;RP1=0, select bank1
  9720  0658  00A7               	movwf	(___fldiv@rem+2)^(0+128)
  9721  0659  1283               	bcf	3,5	;RP0=0, select bank0
  9722  065A  1303               	bcf	3,6	;RP1=0, select bank0
  9723  065B  086B               	movf	___fldiv@b+1,w
  9724  065C  1683               	bsf	3,5	;RP0=1, select bank1
  9725  065D  1303               	bcf	3,6	;RP1=0, select bank1
  9726  065E  00A6               	movwf	(___fldiv@rem+1)^(0+128)
  9727  065F  1283               	bcf	3,5	;RP0=0, select bank0
  9728  0660  1303               	bcf	3,6	;RP1=0, select bank0
  9729  0661  086A               	movf	___fldiv@b,w
  9730  0662  1683               	bsf	3,5	;RP0=1, select bank1
  9731  0663  1303               	bcf	3,6	;RP1=0, select bank1
  9732  0664  00A5               	movwf	___fldiv@rem^(0+128)
  9733  0665  3000               	movlw	0
  9734  0666  1283               	bcf	3,5	;RP0=0, select bank0
  9735  0667  1303               	bcf	3,6	;RP1=0, select bank0
  9736  0668  00ED               	movwf	___fldiv@b+3
  9737  0669  3000               	movlw	0
  9738  066A  00EC               	movwf	___fldiv@b+2
  9739  066B  3000               	movlw	0
  9740  066C  00EB               	movwf	___fldiv@b+1
  9741  066D  3000               	movlw	0
  9742  066E  00EA               	movwf	___fldiv@b
  9743  066F  3000               	movlw	0
  9744  0670  1683               	bsf	3,5	;RP0=1, select bank1
  9745  0671  1303               	bcf	3,6	;RP1=0, select bank1
  9746  0672  00AF               	movwf	(___fldiv@grs+3)^(0+128)
  9747  0673  3000               	movlw	0
  9748  0674  00AE               	movwf	(___fldiv@grs+2)^(0+128)
  9749  0675  3000               	movlw	0
  9750  0676  00AD               	movwf	(___fldiv@grs+1)^(0+128)
  9751  0677  3000               	movlw	0
  9752  0678  00AC               	movwf	___fldiv@grs^(0+128)
  9753  0679  01B1               	clrf	___fldiv@aexp^(0+128)
  9754  067A                     i1l3465:	
  9755  067A  301A               	movlw	26
  9756  067B  0231               	subwf	___fldiv@aexp^(0+128),w
  9757  067C  1803               	btfsc	3,0
  9758  067D  2EF5               	goto	i1l3467
  9759  067E  0831               	movf	___fldiv@aexp^(0+128),w
  9760  067F  1903               	btfsc	3,2
  9761  0680  2EA7               	goto	i1l3457
  9762  0681  3001               	movlw	1
  9763  0682  00A0               	movwf	??___fldiv^(0+128)
  9764  0683                     u581_25:	
  9765  0683  1003               	clrc
  9766  0684  0DA5               	rlf	___fldiv@rem^(0+128),f
  9767  0685  0DA6               	rlf	(___fldiv@rem+1)^(0+128),f
  9768  0686  0DA7               	rlf	(___fldiv@rem+2)^(0+128),f
  9769  0687  0DA8               	rlf	(___fldiv@rem+3)^(0+128),f
  9770  0688  0BA0               	decfsz	??___fldiv^(0+128),f
  9771  0689  2E83               	goto	u581_25
  9772  068A  3001               	movlw	1
  9773  068B  00A0               	movwf	??___fldiv^(0+128)
  9774  068C                     u582_25:	
  9775  068C  1003               	clrc
  9776  068D  1283               	bcf	3,5	;RP0=0, select bank0
  9777  068E  1303               	bcf	3,6	;RP1=0, select bank0
  9778  068F  0DEA               	rlf	___fldiv@b,f
  9779  0690  0DEB               	rlf	___fldiv@b+1,f
  9780  0691  0DEC               	rlf	___fldiv@b+2,f
  9781  0692  0DED               	rlf	___fldiv@b+3,f
  9782  0693  1683               	bsf	3,5	;RP0=1, select bank1
  9783  0694  1303               	bcf	3,6	;RP1=0, select bank1
  9784  0695  0BA0               	decfsz	??___fldiv^(0+128),f
  9785  0696  2E8C               	goto	u582_25
  9786  0697  1FAF               	btfss	(___fldiv@grs+3)^(0+128),7
  9787  0698  2E9C               	goto	i1l3455
  9788  0699  1283               	bcf	3,5	;RP0=0, select bank0
  9789  069A  1303               	bcf	3,6	;RP1=0, select bank0
  9790  069B  146A               	bsf	___fldiv@b,0
  9791  069C                     i1l3455:	
  9792  069C  3001               	movlw	1
  9793  069D  1683               	bsf	3,5	;RP0=1, select bank1
  9794  069E  1303               	bcf	3,6	;RP1=0, select bank1
  9795  069F  00A0               	movwf	??___fldiv^(0+128)
  9796  06A0                     u584_25:	
  9797  06A0  1003               	clrc
  9798  06A1  0DAC               	rlf	___fldiv@grs^(0+128),f
  9799  06A2  0DAD               	rlf	(___fldiv@grs+1)^(0+128),f
  9800  06A3  0DAE               	rlf	(___fldiv@grs+2)^(0+128),f
  9801  06A4  0DAF               	rlf	(___fldiv@grs+3)^(0+128),f
  9802  06A5  0BA0               	decfsz	??___fldiv^(0+128),f
  9803  06A6  2EA0               	goto	u584_25
  9804  06A7                     i1l3457:	
  9805  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  9806  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  9807  06A9  0869               	movf	___fldiv@a+3,w
  9808  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  9809  06AB  1303               	bcf	3,6	;RP1=0, select bank1
  9810  06AC  0228               	subwf	(___fldiv@rem+3)^(0+128),w
  9811  06AD  1D03               	skipz
  9812  06AE  2EC5               	goto	u585_25
  9813  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  9814  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  9815  06B1  0868               	movf	___fldiv@a+2,w
  9816  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  9817  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  9818  06B4  0227               	subwf	(___fldiv@rem+2)^(0+128),w
  9819  06B5  1D03               	skipz
  9820  06B6  2EC5               	goto	u585_25
  9821  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  9822  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  9823  06B9  0867               	movf	___fldiv@a+1,w
  9824  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  9825  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  9826  06BC  0226               	subwf	(___fldiv@rem+1)^(0+128),w
  9827  06BD  1D03               	skipz
  9828  06BE  2EC5               	goto	u585_25
  9829  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  9830  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  9831  06C1  0866               	movf	___fldiv@a,w
  9832  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  9833  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  9834  06C4  0225               	subwf	___fldiv@rem^(0+128),w
  9835  06C5                     u585_25:	
  9836  06C5  1C03               	skipc
  9837  06C6  2EF0               	goto	i1l3463
  9838  06C7  172F               	bsf	(___fldiv@grs^(0+128)+3),6
  9839  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  9840  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  9841  06CA  0866               	movf	___fldiv@a,w
  9842  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  9843  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  9844  06CD  02A5               	subwf	___fldiv@rem^(0+128),f
  9845  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  9846  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  9847  06D0  0867               	movf	___fldiv@a+1,w
  9848  06D1  1C03               	skipc
  9849  06D2  0F67               	incfsz	___fldiv@a+1,w
  9850  06D3  2ED5               	goto	u586_25
  9851  06D4  2ED8               	goto	u586_26
  9852  06D5                     u586_25:	
  9853  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  9854  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  9855  06D7  02A6               	subwf	(___fldiv@rem+1)^(0+128),f
  9856  06D8                     u586_26:	
  9857  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  9858  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  9859  06DA  0868               	movf	___fldiv@a+2,w
  9860  06DB  1C03               	skipc
  9861  06DC  0F68               	incfsz	___fldiv@a+2,w
  9862  06DD  2EDF               	goto	u586_27
  9863  06DE  2EE2               	goto	u586_28
  9864  06DF                     u586_27:	
  9865  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  9866  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  9867  06E1  02A7               	subwf	(___fldiv@rem+2)^(0+128),f
  9868  06E2                     u586_28:	
  9869  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  9870  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  9871  06E4  0869               	movf	___fldiv@a+3,w
  9872  06E5  1C03               	skipc
  9873  06E6  0F69               	incfsz	___fldiv@a+3,w
  9874  06E7  2EE9               	goto	u586_29
  9875  06E8  2EEC               	goto	u586_20
  9876  06E9                     u586_29:	
  9877  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  9878  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  9879  06EB  02A8               	subwf	(___fldiv@rem+3)^(0+128),f
  9880  06EC                     u586_20:	
  9881  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  9882  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  9883  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  9884  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  9885  06F0                     i1l3463:	
  9886  06F0  3001               	movlw	1
  9887  06F1  00A0               	movwf	??___fldiv^(0+128)
  9888  06F2  0820               	movf	??___fldiv^(0+128),w
  9889  06F3  07B1               	addwf	___fldiv@aexp^(0+128),f
  9890  06F4  2E7A               	goto	i1l3465
  9891  06F5                     i1l3467:	
  9892  06F5  0828               	movf	(___fldiv@rem+3)^(0+128),w
  9893  06F6  0427               	iorwf	(___fldiv@rem+2)^(0+128),w
  9894  06F7  0426               	iorwf	(___fldiv@rem+1)^(0+128),w
  9895  06F8  0425               	iorwf	___fldiv@rem^(0+128),w
  9896  06F9  1D03               	btfss	3,2
  9897  06FA  142C               	bsf	___fldiv@grs^(0+128),0
  9898  06FB                     i1l3481:	
  9899  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  9900  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  9901  06FD  1BEC               	btfsc	___fldiv@b+2,7
  9902  06FE  2F25               	goto	i1l3483
  9903  06FF  3001               	movlw	1
  9904  0700  1683               	bsf	3,5	;RP0=1, select bank1
  9905  0701  1303               	bcf	3,6	;RP1=0, select bank1
  9906  0702  00A0               	movwf	??___fldiv^(0+128)
  9907  0703                     u589_25:	
  9908  0703  1003               	clrc
  9909  0704  1283               	bcf	3,5	;RP0=0, select bank0
  9910  0705  1303               	bcf	3,6	;RP1=0, select bank0
  9911  0706  0DEA               	rlf	___fldiv@b,f
  9912  0707  0DEB               	rlf	___fldiv@b+1,f
  9913  0708  0DEC               	rlf	___fldiv@b+2,f
  9914  0709  0DED               	rlf	___fldiv@b+3,f
  9915  070A  1683               	bsf	3,5	;RP0=1, select bank1
  9916  070B  1303               	bcf	3,6	;RP1=0, select bank1
  9917  070C  0BA0               	decfsz	??___fldiv^(0+128),f
  9918  070D  2F03               	goto	u589_25
  9919  070E  1FAF               	btfss	(___fldiv@grs+3)^(0+128),7
  9920  070F  2F13               	goto	i1l3477
  9921  0710  1283               	bcf	3,5	;RP0=0, select bank0
  9922  0711  1303               	bcf	3,6	;RP1=0, select bank0
  9923  0712  146A               	bsf	___fldiv@b,0
  9924  0713                     i1l3477:	
  9925  0713  3001               	movlw	1
  9926  0714  1683               	bsf	3,5	;RP0=1, select bank1
  9927  0715  1303               	bcf	3,6	;RP1=0, select bank1
  9928  0716  00A0               	movwf	??___fldiv^(0+128)
  9929  0717                     u591_25:	
  9930  0717  1003               	clrc
  9931  0718  0DAC               	rlf	___fldiv@grs^(0+128),f
  9932  0719  0DAD               	rlf	(___fldiv@grs+1)^(0+128),f
  9933  071A  0DAE               	rlf	(___fldiv@grs+2)^(0+128),f
  9934  071B  0DAF               	rlf	(___fldiv@grs+3)^(0+128),f
  9935  071C  0BA0               	decfsz	??___fldiv^(0+128),f
  9936  071D  2F17               	goto	u591_25
  9937  071E  30FF               	movlw	255
  9938  071F  07AA               	addwf	___fldiv@new_exp^(0+128),f
  9939  0720  1803               	skipnc
  9940  0721  0AAB               	incf	(___fldiv@new_exp+1)^(0+128),f
  9941  0722  30FF               	movlw	255
  9942  0723  07AB               	addwf	(___fldiv@new_exp+1)^(0+128),f
  9943  0724  2EFB               	goto	i1l3481
  9944  0725                     i1l3483:	
  9945  0725  1683               	bsf	3,5	;RP0=1, select bank1
  9946  0726  1303               	bcf	3,6	;RP1=0, select bank1
  9947  0727  01B1               	clrf	___fldiv@aexp^(0+128)
  9948  0728  1FAF               	btfss	(___fldiv@grs+3)^(0+128),7
  9949  0729  2F44               	goto	i1l3493
  9950  072A  30FF               	movlw	255
  9951  072B  052C               	andwf	___fldiv@grs^(0+128),w
  9952  072C  00A0               	movwf	??___fldiv^(0+128)
  9953  072D  30FF               	movlw	255
  9954  072E  052D               	andwf	(___fldiv@grs+1)^(0+128),w
  9955  072F  00A1               	movwf	(??___fldiv^(0+128)+1)
  9956  0730  30FF               	movlw	255
  9957  0731  052E               	andwf	(___fldiv@grs+2)^(0+128),w
  9958  0732  00A2               	movwf	(??___fldiv^(0+128)+2)
  9959  0733  307F               	movlw	127
  9960  0734  052F               	andwf	(___fldiv@grs+3)^(0+128),w
  9961  0735  00A3               	movwf	(??___fldiv^(0+128)+3)
  9962  0736  0823               	movf	(??___fldiv+3)^(0+128),w
  9963  0737  0422               	iorwf	(??___fldiv+2)^(0+128),w
  9964  0738  0421               	iorwf	(??___fldiv+1)^(0+128),w
  9965  0739  0420               	iorwf	??___fldiv^(0+128),w
  9966  073A  1D03               	btfss	3,2
  9967  073B  2F40               	goto	i1l3489
  9968  073C  1283               	bcf	3,5	;RP0=0, select bank0
  9969  073D  1303               	bcf	3,6	;RP1=0, select bank0
  9970  073E  1C6A               	btfss	___fldiv@b,0
  9971  073F  2F44               	goto	i1l3493
  9972  0740                     i1l3489:	
  9973  0740  1683               	bsf	3,5	;RP0=1, select bank1
  9974  0741  1303               	bcf	3,6	;RP1=0, select bank1
  9975  0742  01B1               	clrf	___fldiv@aexp^(0+128)
  9976  0743  0AB1               	incf	___fldiv@aexp^(0+128),f
  9977  0744                     i1l3493:	
  9978  0744  1683               	bsf	3,5	;RP0=1, select bank1
  9979  0745  1303               	bcf	3,6	;RP1=0, select bank1
  9980  0746  0831               	movf	___fldiv@aexp^(0+128),w
  9981  0747  1903               	btfsc	3,2
  9982  0748  2F98               	goto	i1l3503
  9983  0749  3001               	movlw	1
  9984  074A  1283               	bcf	3,5	;RP0=0, select bank0
  9985  074B  1303               	bcf	3,6	;RP1=0, select bank0
  9986  074C  07EA               	addwf	___fldiv@b,f
  9987  074D  3000               	movlw	0
  9988  074E  1803               	skipnc
  9989  074F  3001               	movlw	1
  9990  0750  07EB               	addwf	___fldiv@b+1,f
  9991  0751  3000               	movlw	0
  9992  0752  1803               	skipnc
  9993  0753  3001               	movlw	1
  9994  0754  07EC               	addwf	___fldiv@b+2,f
  9995  0755  3000               	movlw	0
  9996  0756  1803               	skipnc
  9997  0757  3001               	movlw	1
  9998  0758  07ED               	addwf	___fldiv@b+3,f
  9999  0759  1C6D               	btfss	___fldiv@b+3,0
 10000  075A  2F98               	goto	i1l3503
 10001  075B  086A               	movf	___fldiv@b,w
 10002  075C  1683               	bsf	3,5	;RP0=1, select bank1
 10003  075D  1303               	bcf	3,6	;RP1=0, select bank1
 10004  075E  00A0               	movwf	??___fldiv^(0+128)
 10005  075F  1283               	bcf	3,5	;RP0=0, select bank0
 10006  0760  1303               	bcf	3,6	;RP1=0, select bank0
 10007  0761  086B               	movf	___fldiv@b+1,w
 10008  0762  1683               	bsf	3,5	;RP0=1, select bank1
 10009  0763  1303               	bcf	3,6	;RP1=0, select bank1
 10010  0764  00A1               	movwf	(??___fldiv^(0+128)+1)
 10011  0765  1283               	bcf	3,5	;RP0=0, select bank0
 10012  0766  1303               	bcf	3,6	;RP1=0, select bank0
 10013  0767  086C               	movf	___fldiv@b+2,w
 10014  0768  1683               	bsf	3,5	;RP0=1, select bank1
 10015  0769  1303               	bcf	3,6	;RP1=0, select bank1
 10016  076A  00A2               	movwf	(??___fldiv^(0+128)+2)
 10017  076B  1283               	bcf	3,5	;RP0=0, select bank0
 10018  076C  1303               	bcf	3,6	;RP1=0, select bank0
 10019  076D  086D               	movf	___fldiv@b+3,w
 10020  076E  1683               	bsf	3,5	;RP0=1, select bank1
 10021  076F  1303               	bcf	3,6	;RP1=0, select bank1
 10022  0770  00A3               	movwf	(??___fldiv^(0+128)+3)
 10023  0771  3001               	movlw	1
 10024  0772  00A4               	movwf	(??___fldiv+4)^(0+128)
 10025  0773                     u598_25:	
 10026  0773  0D23               	rlf	(??___fldiv^(0+128)+3),w
 10027  0774  0CA3               	rrf	(??___fldiv^(0+128)+3),f
 10028  0775  0CA2               	rrf	(??___fldiv^(0+128)+2),f
 10029  0776  0CA1               	rrf	(??___fldiv^(0+128)+1),f
 10030  0777  0CA0               	rrf	??___fldiv^(0+128),f
 10031  0778  0BA4               	decfsz	(??___fldiv+4)^(0+128),f
 10032  0779  2F73               	goto	u598_25
 10033  077A  0823               	movf	(??___fldiv+3)^(0+128),w
 10034  077B  1283               	bcf	3,5	;RP0=0, select bank0
 10035  077C  1303               	bcf	3,6	;RP1=0, select bank0
 10036  077D  00ED               	movwf	___fldiv@b+3
 10037  077E  1683               	bsf	3,5	;RP0=1, select bank1
 10038  077F  1303               	bcf	3,6	;RP1=0, select bank1
 10039  0780  0822               	movf	(??___fldiv+2)^(0+128),w
 10040  0781  1283               	bcf	3,5	;RP0=0, select bank0
 10041  0782  1303               	bcf	3,6	;RP1=0, select bank0
 10042  0783  00EC               	movwf	___fldiv@b+2
 10043  0784  1683               	bsf	3,5	;RP0=1, select bank1
 10044  0785  1303               	bcf	3,6	;RP1=0, select bank1
 10045  0786  0821               	movf	(??___fldiv+1)^(0+128),w
 10046  0787  1283               	bcf	3,5	;RP0=0, select bank0
 10047  0788  1303               	bcf	3,6	;RP1=0, select bank0
 10048  0789  00EB               	movwf	___fldiv@b+1
 10049  078A  1683               	bsf	3,5	;RP0=1, select bank1
 10050  078B  1303               	bcf	3,6	;RP1=0, select bank1
 10051  078C  0820               	movf	??___fldiv^(0+128),w
 10052  078D  1283               	bcf	3,5	;RP0=0, select bank0
 10053  078E  1303               	bcf	3,6	;RP1=0, select bank0
 10054  078F  00EA               	movwf	___fldiv@b
 10055  0790  3001               	movlw	1
 10056  0791  1683               	bsf	3,5	;RP0=1, select bank1
 10057  0792  1303               	bcf	3,6	;RP1=0, select bank1
 10058  0793  07AA               	addwf	___fldiv@new_exp^(0+128),f
 10059  0794  1803               	skipnc
 10060  0795  0AAB               	incf	(___fldiv@new_exp+1)^(0+128),f
 10061  0796  3000               	movlw	0
 10062  0797  07AB               	addwf	(___fldiv@new_exp+1)^(0+128),f
 10063  0798                     i1l3503:	
 10064  0798  1683               	bsf	3,5	;RP0=1, select bank1
 10065  0799  1303               	bcf	3,6	;RP1=0, select bank1
 10066  079A  082B               	movf	(___fldiv@new_exp+1)^(0+128),w
 10067  079B  3A80               	xorlw	128
 10068  079C  00FF               	movwf	127
 10069  079D  3080               	movlw	128
 10070  079E  027F               	subwf	127,w
 10071  079F  1D03               	skipz
 10072  07A0  2FA3               	goto	u599_25
 10073  07A1  30FF               	movlw	255
 10074  07A2  022A               	subwf	___fldiv@new_exp^(0+128),w
 10075  07A3                     u599_25:	
 10076  07A3  1C03               	skipc
 10077  07A4  2FB5               	goto	i1l3507
 10078  07A5  30FF               	movlw	255
 10079  07A6  1683               	bsf	3,5	;RP0=1, select bank1
 10080  07A7  1303               	bcf	3,6	;RP1=0, select bank1
 10081  07A8  00AA               	movwf	___fldiv@new_exp^(0+128)
 10082  07A9  3000               	movlw	0
 10083  07AA  00AB               	movwf	(___fldiv@new_exp^(0+128)+1)
 10084  07AB  3000               	movlw	0
 10085  07AC  1283               	bcf	3,5	;RP0=0, select bank0
 10086  07AD  1303               	bcf	3,6	;RP1=0, select bank0
 10087  07AE  00ED               	movwf	___fldiv@b+3
 10088  07AF  3000               	movlw	0
 10089  07B0  00EC               	movwf	___fldiv@b+2
 10090  07B1  3000               	movlw	0
 10091  07B2  00EB               	movwf	___fldiv@b+1
 10092  07B3  3000               	movlw	0
 10093  07B4  00EA               	movwf	___fldiv@b
 10094  07B5                     i1l3507:	
 10095  07B5  1683               	bsf	3,5	;RP0=1, select bank1
 10096  07B6  1303               	bcf	3,6	;RP1=0, select bank1
 10097  07B7  082B               	movf	(___fldiv@new_exp+1)^(0+128),w
 10098  07B8  3A80               	xorlw	128
 10099  07B9  00FF               	movwf	127
 10100  07BA  3080               	movlw	128
 10101  07BB  027F               	subwf	127,w
 10102  07BC  1D03               	skipz
 10103  07BD  2FC0               	goto	u600_25
 10104  07BE  3001               	movlw	1
 10105  07BF  022A               	subwf	___fldiv@new_exp^(0+128),w
 10106  07C0                     u600_25:	
 10107  07C0  1803               	skipnc
 10108  07C1  2FD3               	goto	i1l698
 10109  07C2  1683               	bsf	3,5	;RP0=1, select bank1
 10110  07C3  1303               	bcf	3,6	;RP1=0, select bank1
 10111  07C4  01AA               	clrf	___fldiv@new_exp^(0+128)
 10112  07C5  01AB               	clrf	(___fldiv@new_exp+1)^(0+128)
 10113  07C6  3000               	movlw	0
 10114  07C7  1283               	bcf	3,5	;RP0=0, select bank0
 10115  07C8  1303               	bcf	3,6	;RP1=0, select bank0
 10116  07C9  00ED               	movwf	___fldiv@b+3
 10117  07CA  3000               	movlw	0
 10118  07CB  00EC               	movwf	___fldiv@b+2
 10119  07CC  3000               	movlw	0
 10120  07CD  00EB               	movwf	___fldiv@b+1
 10121  07CE  3000               	movlw	0
 10122  07CF  00EA               	movwf	___fldiv@b
 10123  07D0  1683               	bsf	3,5	;RP0=1, select bank1
 10124  07D1  1303               	bcf	3,6	;RP1=0, select bank1
 10125  07D2  01A9               	clrf	___fldiv@sign^(0+128)
 10126  07D3                     i1l698:	
 10127  07D3  1683               	bsf	3,5	;RP0=1, select bank1
 10128  07D4  1303               	bcf	3,6	;RP1=0, select bank1
 10129  07D5  082A               	movf	___fldiv@new_exp^(0+128),w
 10130  07D6  00A0               	movwf	??___fldiv^(0+128)
 10131  07D7  0820               	movf	??___fldiv^(0+128),w
 10132  07D8  00B0               	movwf	___fldiv@bexp^(0+128)
 10133  07D9  1C30               	btfss	___fldiv@bexp^(0+128),0
 10134  07DA  2FDF               	goto	i1l3519
 10135  07DB  1283               	bcf	3,5	;RP0=0, select bank0
 10136  07DC  1303               	bcf	3,6	;RP1=0, select bank0
 10137  07DD  17EC               	bsf	___fldiv@b+2,7
 10138  07DE  2FE5               	goto	i1l700
 10139  07DF                     i1l3519:	
 10140  07DF  307F               	movlw	127
 10141  07E0  00A0               	movwf	??___fldiv^(0+128)
 10142  07E1  0820               	movf	??___fldiv^(0+128),w
 10143  07E2  1283               	bcf	3,5	;RP0=0, select bank0
 10144  07E3  1303               	bcf	3,6	;RP1=0, select bank0
 10145  07E4  05EC               	andwf	___fldiv@b+2,f
 10146  07E5                     i1l700:	
 10147  07E5  1683               	bsf	3,5	;RP0=1, select bank1
 10148  07E6  1303               	bcf	3,6	;RP1=0, select bank1
 10149  07E7  0830               	movf	___fldiv@bexp^(0+128),w
 10150  07E8  00A0               	movwf	??___fldiv^(0+128)
 10151  07E9  1003               	clrc
 10152  07EA  0C20               	rrf	??___fldiv^(0+128),w
 10153  07EB  00A1               	movwf	(??___fldiv+1)^(0+128)
 10154  07EC  0821               	movf	(??___fldiv+1)^(0+128),w
 10155  07ED  1283               	bcf	3,5	;RP0=0, select bank0
 10156  07EE  1303               	bcf	3,6	;RP1=0, select bank0
 10157  07EF  00ED               	movwf	___fldiv@b+3
 10158  07F0  2E1A               	goto	L9
 10159  07F1                     __end_of___fldiv:	
 10160  007E                     btemp	set	126	;btemp
 10161  007E                     wtemp0	set	126


Data Sizes:
    Strings     40
    Constant    144
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     47      51
    BANK3            96     51      56
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> my_isr_routine@buf(BANK3[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd_write_string@a	PTR unsigned char  size(2) Largest target is 30
		 -> STR_3(CODE[22]), my_isr_routine@buf(BANK3[30]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    _my_isr_routine->___xxtofl
    i1_lcd_write_string->i1_lcd_write_char
    i1_lcd_write_char->i1_lcd_port
    i1_lcd_set_cursor->i1_lcd_cmd
    i1_lcd_clear->i1_lcd_cmd
    i1_lcd_cmd->i1_lcd_port
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr_routine in BANK0

    _my_isr_routine->___fldiv
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___fladd

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    _my_isr_routine->_sprintf

Critical Paths under _main in BANK3

    _main->_lcd_write_string
    _lcd_write_string->_lcd_write_char
    _lcd_write_char->_lcd_port
    _lcd_set_cursor->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_lcd_port

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1309
                                             50 BANK3      1     1      0
                           _adc_init
                         _init_timer
                          _lcd_clear
                           _lcd_init
                     _lcd_set_cursor
                   _lcd_write_string
 ---------------------------------------------------------------------------------
 (1) _lcd_write_string                                     7     5      2     444
                                             43 BANK3      7     5      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (2) _lcd_write_char                                       4     4      0     178
                                             39 BANK3      4     4      0
                           _lcd_port
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       7     6      1     556
                                             42 BANK3      7     6      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                             42 BANK3      2     2      0
                            _lcd_cmd
                           _lcd_port
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0     110
                                             39 BANK3      3     3      0
                           _lcd_port
 ---------------------------------------------------------------------------------
 (3) _lcd_port                                             1     1      0      88
                                             38 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _my_isr_routine                                      50    50      0   42361
                                             35 BANK1     12    12      0
                                              0 BANK3     38    38      0
                            ___fladd
                            ___fldiv
                             ___fleq
                            ___flmul
                           ___xxtofl
                            _sprintf
                        i1_lcd_clear
                   i1_lcd_set_cursor
                 i1_lcd_write_string
 ---------------------------------------------------------------------------------
 (5) i1_lcd_write_string                                   7     5      2     320
                                              5 COMMON     7     5      2
                   i1_lcd_write_char
 ---------------------------------------------------------------------------------
 (6) i1_lcd_write_char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_lcd_port
 ---------------------------------------------------------------------------------
 (5) i1_lcd_set_cursor                                     7     6      1     432
                                              4 COMMON     7     6      1
                          i1_lcd_cmd
 ---------------------------------------------------------------------------------
 (5) i1_lcd_clear                                          0     0      0     110
                          i1_lcd_cmd
 ---------------------------------------------------------------------------------
 (6) i1_lcd_cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_lcd_port
 ---------------------------------------------------------------------------------
 (7) i1_lcd_port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             42    37      5   31729
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2789
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    2592
                                             50 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     546
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1273
                                             70 BANK0      8     0      8
                                              0 BANK1     18    18      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _init_timer
   _lcd_clear
     _lcd_cmd
       _lcd_port
   _lcd_init
     _lcd_cmd
       _lcd_port
     _lcd_port
   _lcd_set_cursor
     _lcd_cmd
       _lcd_port
   _lcd_write_string
     _lcd_write_char
       _lcd_port

 _my_isr_routine (ROOT)
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   ___fldiv
     ___fladd (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fleq
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   i1_lcd_clear
     i1_lcd_cmd
       i1_lcd_port
   i1_lcd_set_cursor
     i1_lcd_cmd
       i1_lcd_port
   i1_lcd_write_string
     i1_lcd_write_char
       i1_lcd_port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      C7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2F      33       7       63.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60     33      38       9       58.3%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      C7      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 19 14:37:35 2019

               ___fldiv@aexp 00B1                 ___fldiv@bexp 00B0                            pc 0002  
               ___fldiv@sign 00A9    __size_ofi1_lcd_set_cursor 004A                           l50 1B9F  
                         l51 1BA7                           l52 1BAA                           l53 1BB2  
                         l54 1BB5                           l55 1BBD                           l49 1B9C  
               ___awdiv@sign 0021                           fsr 0004          ___wmul@multiplicand 0072  
        __Umul8_16@word_mpld 0076                          l123 1C28                          _GIE 005F  
                        _RD2 0042                          _RD3 0043                          _RD4 0044  
                        _RD5 0045                          _RD6 0046                          _RD7 0047  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0076  
               ___flmul@aexp 0036                 ___flmul@bexp 0037                  _sprintf$927 00AA  
               ___flmul@sign 0031                 ___flmul@temp 003C                   i1_lcd_port 1AD9  
               ___flmul@prod 0038              ?_lcd_set_cursor 01BA                 ___fltol@exp1 005B  
                       l3173 1EBF                         l3199 1E4B                         STR_1 10B6  
                       STR_2 10C1                         STR_3 10A0                         u4335 1CF0  
                       _PEIE 005E                         u5415 1ECB                         u6137 1D02  
                       i1l50 1AE3                         i1l51 1AE7                         u6147 1D17  
                       i1l52 1AE8                         i1l53 1AEC                         u6157 1FAB  
                       i1l54 1AED                         i1l55 1AF1                         u6167 1FBB  
                       i1l49 1AE0                         u6177 1FCC                         u6187 1B24  
                       u5395 1EA4                         _TMR0 0001              lcd_write_char@a 01BA  
            lcd_write_char@y 01B9       __end_of_lcd_write_char 1D1E                         _main 1BF3  
                       btemp 007E                         start 0016              ___fldiv@new_exp 00AA  
                i1_lcd_clear 1AC3                   i1lcd_cmd@a 0073                ___fltol@sign1 005A  
            __end_of___fladd 1800                        ?_main 0070              __end_of___fldiv 07F1  
            __end_of___awdiv 1F41              __end_of___flneg 1AC3              __end_of___awmod 1DFB  
            __end_of___flmul 0CB7              __end_of___flsub 1B70              __end_of___fltol 1147  
            __end_of___lldiv 1F9F    __size_ofi1_lcd_write_char 0039              ___awdiv@divisor 0077  
            __end_of___llmod 1E47              __end_of___lwdiv 1C9E                        i1l112 0991  
                      i1l106 0843                        i1l503 1129                        i1l247 004A  
                      i1l272 0399                        i1l521 130E              __end_of___lwmod 1BF3  
                      i1l700 07E5                        i1l620 1623                        i1l293 1B37  
                      i1l480 1D52                        i1l624 16BC                        i1l641 1775  
                      i1l626 169A                        i1l474 13B8                        i1l484 1161  
                      i1l662 17F5                        i1l654 17DD                        i1l479 1D38  
                      i1l487 11C7                        i1l760 1237                        i1l728 0CAA  
                      i1l754 11F7                        i1l676 0608                        i1l767 124D  
                      i1l768 1257                        i1l777 1B82                        i1l698 07D3  
            ___awdiv@counter 0020                        _PORTB 0006                        _PORTD 0008  
                      _TRISB 0086                        _TRISD 0088              __end_of_lcd_cmd 1B2D  
            __end_of_dpowers 10A0                        _scale 0CB7                        _value 01C6  
                      pclath 000A         i1lcd_write_char@temp 0072              ?_lcd_write_char 0070  
                      status 0003                        wtemp0 007E              __end_of_sprintf 0596  
            __initialization 0019           __size_ofi1_lcd_cmd 001A                 __end_of_main 1C29  
                i1lcd_port@a 0070                       ??_main 01C2         __size_of__tdiv_to_l_ 00A9  
         _my_isr_routine$923 01B2           i1_lcd_write_string 1C9E                  ?i1_lcd_port 0070  
           ___llmod@dividend 0074                       ?_scale 003E                       _ADRESH 001E  
                     _ADRESL 009E             ___awdiv@dividend 0079             __end_of_adc_init 1AD9  
                     i1l3003 117B                       i1l3007 11A1                       i1l3031 10EE  
                     i1l3103 120A                       i1l3113 124B                       i1l3105 121C  
                     i1l2321 1F3C                       i1l2313 1F29                       i1l2305 1F05  
                     i1l3027 10E5                       i1l3115 123C                       i1l2403 1BE3  
                     i1l2307 1F13                       i1l2261 1B7A                       i1l2317 1F34  
                     i1l2333 1DBA                       i1l3301 0384                       i1l3213 004C  
                     i1l2431 15F9                       i1l3047 1115                       i1l3127 1274  
                     i1l2407 1BEE                       i1l2351 1DE3                       i1l3215 0066  
                     i1l3401 05C6                       i1l2425 15EE                       i1l3057 1138  
                     i1l3049 1125                       i1l3073 1E31                       i1l2345 1DC7  
                     i1l2337 1DC1                       i1l3313 03FB                       i1l3209 0047  
                     i1l3411 05E8                       i1l3403 05D0                       i1l2523 16EB  
                     i1l2515 16CA                       i1l2507 16B6                       i1l3067 1E03  
                     i1l2347 1DD5                       i1l2355 1DEE                       i1l3421 05FE  
                     i1l2525 16ED                       i1l2533 16FD                       i1l2453 161B  
                     i1l2429 15F1                       i1l3069 1E13                       i1l3077 1E3E  
                     i1l3093 11EF                       i1l2701 0BFC                       i1l2621 09C1  
                     i1l2381 1C8E                       i1l2373 1C6A                       i1l3333 0447  
                     i1l3325 042A                       i1l3253 019D                       i1l3245 0114  
                     i1l3229 00BA                       i1l3503 0798                       i1l3431 062B  
                     i1l2551 1787                       i1l2543 1767                       i1l2703 0C19  
                     i1l2623 09C9                       i1l2375 1C78                       i1l2295 1EFD  
                     i1l2359 1DF6                       i1l3319 040E                       i1l3417 05FA  
                     i1l2449 1618                       i1l2713 0C32                       i1l2641 09EE  
                     i1l2385 1C99                       i1l2289 1EF2                       i1l3353 0576  
                     i1l3273 0274                       i1l3361 0031                       i1l3507 07B5  
                     i1l2459 162D                       i1l3099 1206                       i1l2723 0C64  
                     i1l2619 09BF                       i1l3347 0565                       i1l3283 02C2  
                     i1l3259 01BE                       i1l3355 057B                       i1l3363 0591  
                     i1l3437 063B                       i1l2573 17A8                       i1l2565 179D  
                     i1l2901 133A                       i1l2733 0C93                       i1l2709 0C30  
                     i1l2637 09E4                       i1l2397 1BC7                       i1l2821 0E34  
                     i1l3269 0259                       i1l3519 07DF                       i1l3463 06F0  
                     i1l3455 069C                       i1l3391 05B0                       i1l2559 1796  
                     i1l2567 179F                       i1l2727 0C7A                       i1l2639 09E6  
                     i1l2399 1BD5                       i1l2815 0DA9                       i1l3295 0348  
                     i1l3481 06FB                       i1l3457 06A7                       i1l3465 067A  
                     i1l2577 17AA                       i1l2497 16A5                       i1l2489 1669  
                     i1l2649 09FC                       i1l2833 0F4A                       i1l2825 0E5F  
                     i1l3289 0346                       i1l3537 1D8B                       i1l3553 1CA0  
                     i1l3483 0725                       i1l3467 06F5                       i1l2595 17ED  
                     i1l2499 16A7                       i1l2923 1390                       i1l2915 1368  
                     i1l3493 0744                       i1l3477 0713                       i1l3397 05C2  
                     i1l2933 13A4                       i1l2845 128E                       i1l2599 17F1  
                     i1l2943 13C7                       i1l2935 13B4                       i1l2871 12E7  
                     i1l2863 12C7                       i1l2839 0FD5                       i1l3639 005E  
                     i1l3489 0740                       i1l2881 12FA                       i1l2849 1297  
                     i1l2793 14E2                       i1l3593 0952                       i1l2891 131D  
                     i1l2883 130A                       i1l2981 1F96                       i1l2949 1B2F  
                     i1l3589 094D                       i1l2967 1F51                       i1l2799 158F  
                     i1l2993 1D64                       i1l2977 1F89                       i1l2969 1F61  
                     i1l2897 1331                       u320_25 1F20                       u321_25 1F2A  
                     u330_25 1DE4          ?i1_lcd_write_string 0075                       u411_25 0BA5  
                     u308_25 1B83                       u404_25 0AAC                       u413_25 0BCA  
                     u341_25 1BCA                       u317_25 1F08                       u502_21 118C  
                     u502_22 118D                       u502_23 1192                       u502_24 1193  
                     u502_25 1198                       u334_25 1C6D                       u502_26 1199  
                     u511_25 1116                       u415_25 0BE8                       u407_25 0B09  
                     u343_25 1BDB                       u319_25 1F14                       u327_25 1DCA  
                     u504_21 11B2                       u504_22 11B3                       u504_23 11B8  
                     u504_24 11B9                       u600_25 07C0                       u504_25 11BE  
                     u360_25 16AB                       u520_25 1E21                       u416_25 0C00  
                     u336_25 1C79                       u344_25 1BE4                       u440_25 1550  
                     u504_26 11BF                       u521_25 1E32                       u425_25 0C4F  
                     u337_25 1C85                       u441_25 159A                       u329_25 1DDB  
                     u370_21 1728                       u370_22 1729                       u370_23 172E  
                     u370_24 172F                       u370_25 1734                       u514_25 112E  
                     u530_25 1244                       u426_25 0C6D                       u418_25 0C0B  
                     u338_25 1C8F                       u450_25 0E37                       u370_26 1735  
                     u371_20 173C                       u371_21 173D                       u371_22 1742  
                     u371_23 1743                       u355_25 167D                       u427_25 0C85  
                     u435_25 13F4                       u603_25 1D72                       u356_20 1689  
                     u508_25 10F7                       u436_25 144E                       u452_25 0E84  
                     u444_25 0CE3                       u620_27 1C5B                       u357_20 168A  
                     u461_25 12C9                       u437_25 14A3                       u453_25 0EC0  
                     u445_25 0D1F                       u605_25 1D97                       u621_27 1B04  
                     u518_25 1E07                       u534_25 125F                       u526_25 1213  
                     u470_25 1313                       u462_25 12DA                       u454_25 0F0B  
                     u446_25 0D6A                       u375_25 1789                       u463_25 12E8  
                     u439_25 1503                       u368_25 16F1                       u528_25 122F  
                     u480_25 13A5                       u456_25 0F62                       u448_25 0DC1  
                     u552_25 020C                       u369_23 170F                       u385_25 17C7  
                     u457_25 0F9E                       u449_25 0DFD                       u561_25 03A1  
                     u537_25 1C3A                       u490_25 1F55                       u474_25 136A  
                     u458_25 0FD8                       u483_25 13BD                       u475_25 137F  
                     u467_25 12FB                       u563_25 0417                       u555_25 0257  
                     u619_27 1C4A                       u492_25 1F63                       u476_25 1392  
                     u564_25 0424                       u581_25 0683                       u493_25 1F78  
                     u557_25 034B                       u582_25 068C                       u494_25 1F8A  
                     u486_25 1B38                       u566_25 04C7                       u558_25 037A  
                     u591_25 0717                       u487_25 1B3F                       u567_25 052D  
                     u584_25 06A0                       u585_25 06C5                       u586_20 06EC  
                     u586_25 06D5                       u498_25 1D60                       u586_26 06D8  
                     u586_27 06DF                       u586_28 06E2                       u586_29 06E9  
                     _TMR0IE 005D                       _TMR0IF 005A                       u589_25 0703  
                     u598_25 0773                       u599_25 07A3             __end_of___xxtofl 127D  
           __end_of__powers_ 1044             __end_of_lcd_init 2000             __end_of_lcd_port 1BC1  
                     ___flge 1147                       ___fleq 1D1E                    ??___fladd 005A  
                     ___wmul 1B2D                    ??___fldiv 00A0                    ??___awdiv 007B  
                  ??___flneg 0074                    ??___awmod 0074                    ??___flmul 002C  
                  ??___flsub 007E                    ??___fltol 0055             i1_lcd_set_cursor 1D66  
                  ??___lldiv 0078                    ??___llmod 0078                    ??___lwdiv 007A  
                  ??___lwmod 0074         ??i1_lcd_write_string 0077                       _fround 13D0  
           ___awdiv@quotient 0022              ___awmod@divisor 0070     __end_of_lcd_write_string 1E96  
            ___awmod@counter 0075                    ??_lcd_cmd 01B7           __size_of__Umul8_16 0023  
                     saved_w 007E            __end_ofi1_lcd_cmd 1B0D                    ??_sprintf 00A5  
                 ___flge@ff1 0070                   ___flge@ff2 0074                 ___xxtofl@arg 007A  
          lcd_write_string@a 01BB                 ___xxtofl@exp 0079            lcd_write_string@i 01C0  
               ___xxtofl@val 0070                   ___fleq@ff1 0070                   ___fleq@ff2 0074  
    __end_of__initialization 0026                   ___flneg@f1 0070                   ___fltol@f1 0051  
             __pcstackCOMMON 0070          __size_ofi1_lcd_port 001A                __end_of_scale 1000  
           i1_lcd_write_char 1C29             ??_lcd_set_cursor 01BB                   __div_to_l_ 1326  
         __size_of_lcd_clear 000B              __div_to_l_@exp1 0025              __div_to_l_@cntr 0024  
                    ??_scale 0042              __div_to_l_@quot 0020                   __pbssBANK1 00CF  
                 __pbssBANK3 01C2            i1lcd_set_cursor@a 0077            i1lcd_set_cursor@b 0074  
          i1lcd_set_cursor@y 0079            i1lcd_set_cursor@z 0078                __div_to_l_@f1 0070  
              __div_to_l_@f2 0074            __end_of__Umul8_16 1B93                 ?i1_lcd_clear 0070  
                 __pmaintext 1BF3                      ?___flge 0070                      ?___fleq 0070  
                    ?___wmul 0070                   __pintentry 0004                      ?_fround 003E  
                  ?_adc_init 0070                    ?___xxtofl 0070             ??_lcd_write_char 01B7  
                  ?_lcd_init 0070                    ?_lcd_port 0070      __size_of_my_isr_routine 01A2  
                 __stringtab 1000           lcd_write_char@temp 01B8            __end_of__npowers_ 1078  
          __end_of_lcd_clear 10DA              __size_of___flge 0093              __size_of___fleq 0048  
                    ___fladd 15D1                      ___fldiv 0596                      ___awdiv 1EE6  
                    ___flneg 1ABA                      ___awmod 1DB0                      ___flmul 09A2  
                    ___flsub 1B4E                      ___fltol 10DA                      ___lldiv 1F41  
            __size_of___wmul 0021                      ___llmod 1DFB                      ___lwdiv 1C62  
                 _fround$924 004D                   _fround$925 0049                      ___lwmod 1BC1  
                 _init_timer 07F1              __size_of_fround 0201                   ??_adc_init 01B6  
                    __ptext1 1E47                      __ptext2 1CDB                      __ptext3 1E96  
                    __ptext4 1F9F                      __ptext5 10CF                      __ptext6 1B0D  
                    __ptext7 1B93                      __ptext8 07F1                      __ptext9 1ACE  
                    _lcd_cmd 1B0D                  ?__div_to_l_ 0070                      _counter 01C2  
                    _dpowers 1078                   ??___xxtofl 0074             ___awmod@dividend 0072  
               ??i1_lcd_port 0070                      _sekunde 00CF                      _sprintf 002A  
                 ??_lcd_init 01BA     __end_ofi1_lcd_set_cursor 1DB0                   ??_lcd_port 01B6  
       end_of_initialization 0026              ___lldiv@divisor 0070              ___lldiv@counter 007D  
         __end_ofi1_lcd_port 1AF3               __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0074  
              ??__tdiv_to_l_ 0078                    _PORTBbits 0006            ?_lcd_write_string 01BB  
                ___fladd@grs 0065           ??_lcd_write_string 01BD            my_isr_routine@buf 0190  
          my_isr_routine@val 01AE                ___xxtofl@sign 0078                  ___fldiv@grs 00AC  
                ___fldiv@rem 00A5                    i1_lcd_cmd 1AF3                  ___flmul@grs 0032  
   __end_ofi1_lcd_write_char 1C62          __size_of__div_to_l_ 00AA         __size_ofi1_lcd_clear 000B  
             __end_of___flge 11DA               __end_of___fleq 1D66               __end_of___wmul 1B4E  
__size_ofi1_lcd_write_string 003D                  ?_init_timer 0070               __end_of_fround 15D1  
       i1lcd_set_cursor@temp 007A          start_initialization 0019          __end_of__tdiv_to_l_ 1326  
             _my_isr_routine 0800                   ?i1_lcd_cmd 0070              ___llmod@divisor 0070  
            ___llmod@counter 0079                     ??___flge 0078                     ??___fleq 0078  
                   ??___wmul 0074                    __Umul8_16 1B70                     ??_fround 0042  
        i1lcd_write_string@a 0075          i1lcd_write_string@i 007A                sprintf@tmpval 00B9  
                  ___fladd@a 0056                    ___fladd@b 0052                   fround@prec 0051  
                  ___fldiv@a 0066                    ___fldiv@b 006A            __size_of_adc_init 000B  
                  ___flmul@a 0028                    ___flmul@b 0024                    ___flsub@a 0066  
                  ___flsub@b 006A                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0                __pcstackBANK3 0190       __end_of_my_isr_routine 09A2  
          __size_of___xxtofl 00A3            i1lcd_write_char@a 0074            i1lcd_write_char@y 0073  
          __size_of_lcd_init 0061                  sprintf@flag 00AF            __size_of_lcd_port 002E  
                sprintf@eexp 00B7                  sprintf@fval 00BE          __size_of_init_timer 000C  
                sprintf@prec 00B1             ___lwdiv@dividend 0078                     ?___fladd 0052  
                   ?___fldiv 0066                     ?___awdiv 0077                     ?___flneg 0070  
                   ?___awmod 0070                     ?___flmul 0024                     ?___flsub 0066  
                   ?___fltol 0051                     ?___lldiv 0070                     ?___llmod 0070  
                  __npowers_ 1044                   ?__Umul8_16 0070                     ?___lwdiv 0076  
                   ?___lwmod 0070                    _lcd_clear 10CF                    __pstrings 1000  
                __tdiv_to_l_ 127D                     ?_lcd_cmd 0070                 ??__div_to_l_ 0078  
                  _scale$926 004C              ?_my_isr_routine 0070             ___lwdiv@quotient 007B  
                   ?_sprintf 00A0               __size_of_scale 0349            ?i1_lcd_set_cursor 0074  
    __size_of_lcd_set_cursor 0050                  ??i1_lcd_cmd 0071            interrupt_function 0004  
             ___wmul@product 0074           ??i1_lcd_set_cursor 0075              lcd_set_cursor@a 01BD  
            lcd_set_cursor@b 01BA              lcd_set_cursor@y 01BF              lcd_set_cursor@z 01BE  
         __end_of__div_to_l_ 13D0                   ?_lcd_clear 0070                   _ADCON0bits 001F  
                __stringbase 100F                   _ADCON1bits 009F            ___wmul@multiplier 0070  
                  lcd_port@a 01B6    __size_of_lcd_write_string 004F            ?i1_lcd_write_char 0070  
    __size_of_lcd_write_char 0043           ??i1_lcd_write_char 0071                  ??__Umul8_16 0072  
           __size_of___fladd 022F             __size_of___fldiv 025B             __size_of___awdiv 005B  
           __size_of___flneg 0009             __size_of___awmod 004B             __size_of___flmul 0315  
           __size_of___flsub 0022             __size_of___fltol 006D             __size_of___lldiv 005E  
           __size_of___llmod 004C             __size_of___lwdiv 003C                 ??_init_timer 01B6  
           __size_of___lwmod 0032           __end_of__stringtab 1010                     _adc_init 1ACE  
           __size_of_lcd_cmd 0020           lcd_set_cursor@temp 01C0                   sprintf@val 00B3  
                   ___xxtofl 11DA              ___lwdiv@divisor 0076              ___lwdiv@counter 007D  
                   __ptext10 0800                     __ptext11 1C9E                     __ptext20 1EE6  
                   __ptext12 1C29                     __ptext21 13D0                     __ptext13 1D66  
                   __ptext30 1DFB                     __ptext22 1BC1                     __ptext14 1AC3  
                   __ptext31 1F41                     __ptext23 1C62                     __ptext15 1AF3  
                   __ptext32 10DA                     __ptext24 09A2                     __ptext16 1AD9  
                   __ptext33 1B4E                     __ptext25 1B70                     __ptext17 002A  
                   __ptext34 15D1                     __ptext26 127D                     __ptext18 0CB7  
                   __ptext35 1ABA                     __ptext27 1326                     __ptext19 1DB0  
                   __ptext36 1147                     __ptext28 11DA                     __ptext37 1D1E  
                   __ptext29 1B2D                     __ptext38 0596                     __powers_ 1010  
                   _lcd_init 1F9F                     _lcd_port 1B93             __size_of_sprintf 056C  
              __size_of_main 0036           __end_of_init_timer 07FD                ??i1_lcd_clear 0074  
 __end_ofi1_lcd_write_string 1CDB                     lcd_cmd@a 01B9                  ??_lcd_clear 01BA  
                   scale@scl 0050                     intlevel1 0000               _lcd_set_cursor 1E96  
                  sprintf@ap 00AE             __tdiv_to_l_@exp1 0025             __tdiv_to_l_@cntr 0024  
                  sprintf@sp 00BD             __tdiv_to_l_@quot 0020             ___lwmod@dividend 0072  
           ___lldiv@dividend 0074                    stringcode 100A          __end_ofi1_lcd_clear 1ACE  
               ?__tdiv_to_l_ 0070             ??_my_isr_routine 00C3       __Umul8_16@multiplicand 0070  
                 _OPTION_REG 0081                     sprintf@c 00C2                     sprintf@f 00A0  
           ___lldiv@quotient 0079              ___lwmod@divisor 0070              ___lwmod@counter 0075  
                   stringdir 100A                     stringtab 1000       __end_of_lcd_set_cursor 1EE6  
              ___fladd@signs 0062             _lcd_write_string 1E47                 ___fladd@aexp 0063  
               ___fladd@bexp 0064         __Umul8_16@multiplier 0078               _lcd_write_char 1CDB  
          __Umul8_16@product 0074  
