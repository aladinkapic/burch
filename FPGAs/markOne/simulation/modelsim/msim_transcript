# Reading D:/Programs/Quartus/modelsim_ase/tcl/vsim/pref.tcl
# do blinkLed_run_msim_rtl_vhdl.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Copying D:/Programs/Quartus/modelsim_ase/win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vcom -93 -work work {C:/Users/Heisenberg/Desktop/FPGAs/markOne/blinkLed.vhd}
# Model Technology ModelSim - Intel FPGA Edition vcom 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:20:30 on Dec 08,2018
# vcom -reportprogress 300 -93 -work work C:/Users/Heisenberg/Desktop/FPGAs/markOne/blinkLed.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Compiling entity blinkLed
# -- Compiling architecture behave of blinkLed
# End time: 22:20:30 on Dec 08,2018, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
vsim rtl_work.blinkled
# vsim rtl_work.blinkled 
# Start time: 22:20:46 on Dec 08,2018
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.numeric_std(body)
# Loading rtl_work.blinkled(behave)
add wave -position insertpoint  \
sim:/blinkled/reset_btn
add wave  \
sim:/blinkled/reset_btn
add wave  \
sim:/blinkled/LED
force -freeze sim:/blinkled/reset_btn 0 0
force -freeze sim:/blinkled/reset_btn 0 0
# End time: 22:24:59 on Dec 08,2018, Elapsed time: 0:04:13
# Errors: 0, Warnings: 0
